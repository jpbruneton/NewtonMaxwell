iteration 0: we have seen 379 different eqs
QD pool size: 85, newbins: 0 replacements: 0

new avg training reward: 1.008
best reward: 1.004669073250073 with validation reward: 1.004669073250073

best eq: (tan(sqrt(two)))*((one)*((d_x_f0)-((arcsin(one))+((tanh(one))-((cosh(cos(x)))/((d_x_f0)+(((two)-(exp(tan(one))))-((f0)*((one)-(two)))))))))) (np.tan(np.sqrt(two)))*((one)*((d_x0_f0)-((np.arcsin(one))+((np.tanh(one))-((np.cosh(np.cos(x0)))/((d_x0_f0)+(((two)-(np.exp(np.tan(one))))-((f0)*((one)-(two)))))))))) []

and bests eqs by free parameter number are:
[[1.006501650614749, 'd_x_f0'], [1.0068627025382675, '(arctan(tanh(one)))+(tan(cosh(x)))'], [1.0068488465599985, '(((((arctan(arctan((f0)+(x))))*(tan(one)))+(one))/(sqrt(arctan(x))))/((sinh(sinh(x)))*(arcsin(tanh(d_x_f0)))))/(sqrt(x))'], [1.0051301291260104, '(((x)/(sinh(arctan(x))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((arctan(tanh((two)-(one))))+((arctan(x))*((sqrt(log(one)))-(cos(d_x_f0)))))))'], [1.006832296075679, '(((two)*(arcsin(tan(f0))))+(((((cosh(exp(one)))/(((sinh(arcsin(x)))*(one))/(log(sqrt(x)))))/(sinh(cosh(d_x_f0))))-(f0))/(f0)))**(two)'], [1.006480163616974, '(tan(one))*((two)-((((tan(cosh(f0)))*(exp(sinh(one))))/(f0))+((sinh(cos(f0)))*((two)*(((x)-((tan(tanh(f0)))+(d_x_f0)))/(cosh(two)))))))'], [1.0068497051522645, '((one)-((f0)*((((f0)*((one)-((log(tanh(one)))/(log(two)))))+(cos(tan(f0))))*((two)*(one)))))+((cos(cosh(x)))/((arctan(x))*(x)))'], [1.0065000864336429, '((x)/(((arctan(tanh(two)))*(one))-(((cosh(arctan(d_x_f0)))-(two))*(((tanh(sinh(two)))+(x))*(x)))))+((one)+((d_x_f0)-(sqrt(cosh((one)**(two))))))'], [1.004669073250073, '(tan(sqrt(two)))*((one)*((d_x_f0)-((arcsin(one))+((tanh(one))-((cosh(cos(x)))/((d_x_f0)+(((two)-(exp(tan(one))))-((f0)*((one)-(two))))))))))'], [1.0069016964838384, '(((one)/(((sqrt(one))/((two)+(arctan(tan(d_x_f0)))))/((two)+(log(one)))))-(x))*((one)/(((x)-(exp(cos(two))))/((sqrt(log(two)))**(one))))']]

time spent (in secs):2.440305233001709

---------------=============================----------------
iteration 1: we have seen 460 different eqs
QD pool size: 116, newbins: 31 replacements: 13

new avg training reward: 1.007
best reward: 1.004669073250073 with validation reward: 1.004669073250073

best eq: (tan(sqrt(two)))*((one)*((d_x_f0)-((arcsin(one))+((tanh(one))-((cosh(cos(x)))/((d_x_f0)+(((two)-(exp(tan(one))))-((f0)*((one)-(two)))))))))) (np.tan(np.sqrt(two)))*((one)*((d_x0_f0)-((np.arcsin(one))+((np.tanh(one))-((np.cosh(np.cos(x0)))/((d_x0_f0)+(((two)-(np.exp(np.tan(one))))-((f0)*((one)-(two)))))))))) []

and bests eqs by free parameter number are:
[[1.006501650614749, 'd_x_f0'], [1.00593027980176, '((d_x_f0)/(x))+(one)'], [1.0065141850965524, '(arcsin(f0))+((((tan(two))-(cos(cos(two))))+(d_x_f0))+(cosh(f0)))'], [1.0051301291260104, '(((x)/(sinh(arctan(x))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((arctan(tanh((two)-(one))))+((arctan(x))*((sqrt(log(one)))-(cos(d_x_f0)))))))'], [1.0057114931255515, '(tan(one))*((two)-((((tan(cosh(f0)))*(exp(sinh(one))))/(f0))+((sinh(cos(f0)))*((two)*(((x)-((tan(tanh(f0)))+(d_x_f0)))/(cosh(f0)))))))'], [1.006480163616974, '(tan(one))*((two)-((((tan(cosh(f0)))*(exp(sinh(one))))/(f0))+((sinh(cos(f0)))*((two)*(((x)-((tan(tanh(f0)))+(d_x_f0)))/(cosh(two)))))))'], [1.0065009421866498, '((x)/(((arctan(tanh(two)))*(x))-(((cosh(x))-(two))*(((tanh(sinh(two)))+(x))*(x)))))+((one)+((d_x_f0)-(sqrt(cosh((one)**(two))))))'], [1.0065000864336429, '((x)/(((arctan(tanh(two)))*(one))-(((cosh(arctan(d_x_f0)))-(two))*(((tanh(sinh(two)))+(x))*(x)))))+((one)+((d_x_f0)-(sqrt(cosh((one)**(two))))))'], [1.004669073250073, '(tan(sqrt(two)))*((one)*((d_x_f0)-((arcsin(one))+((tanh(one))-((cosh(cos(x)))/((d_x_f0)+(((two)-(exp(tan(one))))-((f0)*((one)-(two))))))))))'], [1.0069016964838384, '(((one)/(((sqrt(one))/((two)+(arctan(tan(d_x_f0)))))/((two)+(log(one)))))-(x))*((one)/(((x)-(exp(cos(two))))/((sqrt(log(two)))**(one))))'], [1.0069214268672178, '(((one)/(((sqrt(one))/((two)+(arctan(tan(one)))))/((two)+(log(one)))))-(x))*((one)/(((x)-(exp(cos(two))))/((sqrt(log(two)))**(one))))']]

time spent (in secs):2.7500088214874268

---------------=============================----------------
iteration 2: we have seen 564 different eqs
QD pool size: 162, newbins: 46 replacements: 18

new avg training reward: 1.007
best reward: 1.004669073250073 with validation reward: 1.004669073250073

best eq: (tan(sqrt(two)))*((one)*((d_x_f0)-((arcsin(one))+((tanh(one))-((cosh(cos(x)))/((d_x_f0)+(((two)-(exp(tan(one))))-((f0)*((one)-(two)))))))))) (np.tan(np.sqrt(two)))*((one)*((d_x0_f0)-((np.arcsin(one))+((np.tanh(one))-((np.cosh(np.cos(x0)))/((d_x0_f0)+(((two)-(np.exp(np.tan(one))))-((f0)*((one)-(two)))))))))) []

and bests eqs by free parameter number are:
[[1.006501650614749, 'd_x_f0'], [1.0057932373411616, '(((x)/(sinh(arctan(x))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((arctan(tanh(x)))+((arctan(x))*((sqrt(log(one)))-(cos(d_x_f0)))))))'], [1.0065138886039777, '(f0)+((((tan(two))-(cos(cos(two))))+(d_x_f0))+(cosh(f0)))'], [1.0051301291260104, '(((x)/(sinh(arctan(x))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((arctan(tanh((two)-(one))))+((arctan(x))*((sqrt(log(one)))-(cos(d_x_f0)))))))'], [1.0057103627369304, '(tan(one))*((two)-((((tan(cosh(f0)))*(sinh(one)))/(f0))+((sinh(cos(f0)))*((two)*(((x)-((tan(tanh(f0)))+(d_x_f0)))/(cosh(f0)))))))'], [1.006480163616974, '(tan(one))*((two)-((((tan(cosh(f0)))*(exp(sinh(one))))/(f0))+((sinh(cos(f0)))*((two)*(((x)-((tan(tanh(f0)))+(d_x_f0)))/(cosh(two)))))))'], [1.0065009421866498, '((x)/(((arctan(tanh(two)))*(x))-(((cosh(x))-(two))*(((tanh(sinh(two)))+(x))*(x)))))+((one)+((d_x_f0)-(sqrt(cosh((one)**(two))))))'], [1.0065000864336429, '((x)/(((arctan(tanh(two)))*(one))-(((cosh(arctan(d_x_f0)))-(two))*(((tanh(sinh(two)))+(x))*(x)))))+((one)+((d_x_f0)-(sqrt(cosh((one)**(two))))))'], [1.004669073250073, '(tan(sqrt(two)))*((one)*((d_x_f0)-((arcsin(one))+((tanh(one))-((cosh(cos(x)))/((d_x_f0)+(((two)-(exp(tan(one))))-((f0)*((one)-(two))))))))))'], [1.0069016964838384, '(((one)/(((sqrt(one))/((two)+(arctan(tan(d_x_f0)))))/((two)+(log(one)))))-(x))*((one)/(((x)-(exp(cos(two))))/((sqrt(log(two)))**(one))))'], [1.0069214268672178, '(((one)/(((sqrt(one))/((two)+(arctan(tan(one)))))/((two)+(log(one)))))-(x))*((one)/(((x)-(exp(cos(two))))/((sqrt(log(two)))**(one))))']]

time spent (in secs):3.1525471210479736

---------------=============================----------------
iteration 3: we have seen 711 different eqs
QD pool size: 212, newbins: 50 replacements: 35

new avg training reward: 1.007
best reward: 1.0023407724273894 with validation reward: 1.0023407724273894

best eq: (((x)/(sinh(arctan(x))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/(((one)-((((x)/(two))-(tanh(arcsin(x))))/(two)))*(two)))) (((x0)/(np.sinh(np.arctan(x0))))+(d_x0_f0))/((np.arcsin(np.arcsin(x0)))*((np.tan(np.tanh(x0)))/(((one)-((((x0)/(two))-(np.tanh(np.arcsin(x0))))/(two)))*(two)))) []

and bests eqs by free parameter number are:
[[1.006501650614749, 'd_x_f0'], [1.0057932373411616, '(((x)/(sinh(arctan(x))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((arctan(tanh(x)))+((arctan(x))*((sqrt(log(one)))-(cos(d_x_f0)))))))'], [1.0064987612890988, '((d_x_f0)/(one))+(one)'], [1.0051301291260104, '(((x)/(sinh(arctan(x))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((arctan(tanh((two)-(one))))+((arctan(x))*((sqrt(log(one)))-(cos(d_x_f0)))))))'], [1.0023407724273894, '(((x)/(sinh(arctan(x))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/(((one)-((((x)/(two))-(tanh(arcsin(x))))/(two)))*(two))))'], [1.006480163616974, '(tan(one))*((two)-((((tan(cosh(f0)))*(exp(sinh(one))))/(f0))+((sinh(cos(f0)))*((two)*(((x)-((tan(tanh(f0)))+(d_x_f0)))/(cosh(two)))))))'], [1.0062956958960196, '(sqrt((x)+(two)))*((sinh(arctan(x)))+((one)+((arcsin(log(two)))+((log(cosh(d_x_f0)))-(((cos(cosh((one)/(two))))/(cosh(exp(d_x_f0))))*(tanh(two)))))))'], [1.0064971670362046, '((x)/(((arctan(tanh(two)))*(one))-(((cosh(arctan(d_x_f0)))-(two))*(((tanh(sinh(two)))+(x))**(x)))))+((one)+((d_x_f0)-(sqrt(cosh((one)**(two))))))'], [1.004669073250073, '(tan(sqrt(two)))*((one)*((d_x_f0)-((arcsin(one))+((tanh(one))-((cosh(cos(x)))/((d_x_f0)+(((two)-(exp(tan(one))))-((f0)*((one)-(two))))))))))'], [1.0068625011818066, '(((one)/(((sqrt(one))/((two)+(f0)))/((two)+(log(one)))))-(x))*((one)/(((x)-(exp(cos(two))))/((sqrt(log(two)))**(one))))'], [1.0069214268672178, '(((one)/(((sqrt(one))/((two)+(arctan(tan(one)))))/((two)+(log(one)))))-(x))*((one)/(((x)-(exp(cos(two))))/((sqrt(log(two)))**(one))))']]

time spent (in secs):3.775195360183716

---------------=============================----------------
iteration 4: we have seen 897 different eqs
QD pool size: 270, newbins: 58 replacements: 39

new avg training reward: 1.006
best reward: 1.0023407724273894 with validation reward: 1.0023407724273894

best eq: (((x)/(sinh(arctan(x))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/(((one)-((((x)/(two))-(tanh(arcsin(x))))/(two)))*(two)))) (((x0)/(np.sinh(np.arctan(x0))))+(d_x0_f0))/((np.arcsin(np.arcsin(x0)))*((np.tan(np.tanh(x0)))/(((one)-((((x0)/(two))-(np.tanh(np.arcsin(x0))))/(two)))*(two)))) []

and bests eqs by free parameter number are:
[[1.0064989871542271, '(cos(x))+(d_x_f0)'], [1.0057932373411616, '(((x)/(sinh(arctan(x))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((arctan(tanh(x)))+((arctan(x))*((sqrt(log(one)))-(cos(d_x_f0)))))))'], [1.0064987612890988, '((d_x_f0)/(one))+(one)'], [1.0051301291260104, '(((x)/(sinh(arctan(x))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((arctan(tanh((two)-(one))))+((arctan(x))*((sqrt(log(one)))-(cos(d_x_f0)))))))'], [1.0023407724273894, '(((x)/(sinh(arctan(x))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/(((one)-((((x)/(two))-(tanh(arcsin(x))))/(two)))*(two))))'], [1.006480163616974, '(tan(one))*((two)-((((tan(cosh(f0)))*(exp(sinh(one))))/(f0))+((sinh(cos(f0)))*((two)*(((x)-((tan(tanh(f0)))+(d_x_f0)))/(cosh(two)))))))'], [1.006295695167343, '(sqrt((x)+(two)))*((sinh(arctan(x)))+((one)+((arcsin(log(two)))+((log(cosh(d_x_f0)))-(((cos(cosh((one)/(two))))/(cosh(exp(d_x_f0))))/(tanh(two)))))))'], [1.006496601164509, '((x)/(((tanh(tanh(two)))*(one))-(((cosh(arctan(d_x_f0)))-(two))*(((tanh(sinh(two)))+(x))**(x)))))+((one)+((d_x_f0)-(sqrt(cosh((one)**(two))))))'], [1.004669073250073, '(tan(sqrt(two)))*((one)*((d_x_f0)-((arcsin(one))+((tanh(one))-((cosh(cos(x)))/((d_x_f0)+(((two)-(exp(tan(one))))-((f0)*((one)-(two))))))))))'], [1.0068625011818066, '(((one)/(((sqrt(one))/((two)+(f0)))/((two)+(log(one)))))-(x))*((one)/(((x)-(exp(cos(two))))/((sqrt(log(two)))**(one))))'], [1.0069214268672178, '(((one)/(((sqrt(one))/((two)+(arctan(tan(one)))))/((two)+(log(one)))))-(x))*((one)/(((x)-(exp(cos(two))))/((sqrt(log(two)))**(one))))'], [1.0068599485547742, '(((one)/(((sqrt(one))/((two)+(arctan(tan(one)))))/((two)+(log(one)))))-(x))*((one)/(((two)-(exp(cos(two))))/((sqrt(log(two)))**(one))))']]

time spent (in secs):4.613951921463013

---------------=============================----------------
iteration 5: we have seen 1135 different eqs
QD pool size: 334, newbins: 64 replacements: 50

new avg training reward: 1.006
best reward: 1.0023407724273894 with validation reward: 1.0023407724273894

best eq: (((x)/(sinh(arctan(x))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/(((one)-((((x)/(two))-(tanh(arcsin(x))))/(two)))*(two)))) (((x0)/(np.sinh(np.arctan(x0))))+(d_x0_f0))/((np.arcsin(np.arcsin(x0)))*((np.tan(np.tanh(x0)))/(((one)-((((x0)/(two))-(np.tanh(np.arcsin(x0))))/(two)))*(two)))) []

and bests eqs by free parameter number are:
[[1.0064960068285056, '((d_x_f0)+(cosh((x)-(arcsin(f0)))))-(tan(tanh(x)))'], [1.0050260218547389, '(((tanh(x))/(sinh(arctan(x))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((tan(x))*(two))))'], [1.0050857886738496, 'tan(((f0)*(cosh(f0)))-(arctan((two)**(one))))'], [1.0051301291260104, '(((x)/(sinh(arctan(x))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((arctan(tanh((two)-(one))))+((arctan(x))*((sqrt(log(one)))-(cos(d_x_f0)))))))'], [1.0023407724273894, '(((x)/(sinh(arctan(x))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/(((one)-((((x)/(two))-(tanh(arcsin(x))))/(two)))*(two))))'], [1.00236389018291, '(((tanh(x))/(sinh(arctan(one))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/(((one)-((((x)/(two))-(tanh(arcsin(x))))/(two)))*(two))))'], [1.006295695167343, '(sqrt((x)+(two)))*((sinh(arctan(x)))+((one)+((arcsin(log(two)))+((log(cosh(d_x_f0)))-(((cos(cosh((one)/(two))))/(cosh(exp(d_x_f0))))/(tanh(two)))))))'], [1.0046827836964163, '(tan(sqrt(two)))*((one)*((d_x_f0)-((arcsin(one))+((tanh(one))-((cosh(cos(x)))/((d_x_f0)+(((two)-(exp(tan(one))))-((f0)*((d_x_f0)*(two))))))))))'], [1.004669073250073, '(tan(sqrt(two)))*((one)*((d_x_f0)-((arcsin(one))+((tanh(one))-((cosh(cos(x)))/((d_x_f0)+(((two)-(exp(tan(one))))-((f0)*((one)-(two))))))))))'], [1.0068625011818066, '(((one)/(((sqrt(one))/((two)+(f0)))/((two)+(log(one)))))-(x))*((one)/(((x)-(exp(cos(two))))/((sqrt(log(two)))**(one))))'], [1.0067002517808146, '(((one)/(((sqrt(one))/((two)+(one)))/((two)+(log(one)))))-(x))*((one)/(((one)-(cos(x)))/((sqrt(log(two)))**(one))))'], [1.0068599485547742, '(((one)/(((sqrt(one))/((two)+(arctan(tan(one)))))/((two)+(log(one)))))-(x))*((one)/(((two)-(exp(cos(two))))/((sqrt(log(two)))**(one))))']]

time spent (in secs):5.566853761672974

---------------=============================----------------
iteration 6: we have seen 1435 different eqs
QD pool size: 391, newbins: 57 replacements: 64

new avg training reward: 1.006
best reward: 1.000156363135981 with validation reward: 1.000156363135981

best eq: (((one)/(((sqrt(one))/((d_x_f0)+(one)))/((two)+(log(one)))))-(x))*((one)/(((one)-(cos(x)))/((sqrt(log(two)))**(one)))) (((one)/(((np.sqrt(one))/((d_x0_f0)+(one)))/((two)+(np.log(one)))))-(x0))*((one)/(((one)-(np.cos(x0)))/((np.sqrt(np.log(two)))**(one)))) []

and bests eqs by free parameter number are:
[[1.002419031458889, '((d_x_f0)/(log(cosh(x))))+(cos(sinh(d_x_f0)))'], [1.002543408659033, '(((tanh(x))/(sinh(arctan(x))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/(((x)**(f0))*(two))))'], [1.0050857886738496, 'tan(((f0)*(cosh(f0)))-(arctan((two)**(one))))'], [1.0051301291260104, '(((x)/(sinh(arctan(x))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((arctan(tanh((two)-(one))))+((arctan(x))*((sqrt(log(one)))-(cos(d_x_f0)))))))'], [1.0023407724273894, '(((x)/(sinh(arctan(x))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/(((one)-((((x)/(two))-(tanh(arcsin(x))))/(two)))*(two))))'], [1.00236389018291, '(((tanh(x))/(sinh(arctan(one))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/(((one)-((((x)/(two))-(tanh(arcsin(x))))/(two)))*(two))))'], [1.0023483325174367, '(((sqrt(log(two)))**(one))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/(((one)-((((x)/(two))-(tanh(arcsin(x))))/(two)))*(two))))'], [1.0046791435373243, '(tan(sqrt(two)))*((one)*((d_x_f0)-((arcsin(one))+((tanh(one))-((cosh(cos(x)))/((d_x_f0)+(((two)-(exp(tan(x))))-((f0)*((one)-(two))))))))))'], [1.004669073250073, '(tan(sqrt(two)))*((one)*((d_x_f0)-((arcsin(one))+((tanh(one))-((cosh(cos(x)))/((d_x_f0)+(((two)-(exp(tan(one))))-((f0)*((one)-(two))))))))))'], [1.000156363135981, '(((one)/(((sqrt(one))/((d_x_f0)+(one)))/((two)+(log(one)))))-(x))*((one)/(((one)-(cos(x)))/((sqrt(log(two)))**(one))))'], [1.0067002517808146, '(((one)/(((sqrt(one))/((two)+(one)))/((two)+(log(one)))))-(x))*((one)/(((one)-(cos(x)))/((sqrt(log(two)))**(one))))'], [1.0068599485547742, '(((one)/(((sqrt(one))/((two)+(arctan(tan(one)))))/((two)+(log(one)))))-(x))*((one)/(((two)-(exp(cos(two))))/((sqrt(log(two)))**(one))))']]

time spent (in secs):6.67343807220459

---------------=============================----------------
iteration 7: we have seen 1785 different eqs
QD pool size: 458, newbins: 67 replacements: 87

new avg training reward: 1.008
best reward: 0.995911695197233 with validation reward: 0.995911695197233

best eq: ((((one)*(tanh(tanh(f0))))*(d_x_f0))-(f0))**(two) ((((one)*(np.tanh(np.tanh(f0))))*(d_x0_f0))-(f0))**(two) []

and bests eqs by free parameter number are:
[[1.002419031458889, '((d_x_f0)/(log(cosh(x))))+(cos(sinh(d_x_f0)))'], [1.002543408659033, '(((tanh(x))/(sinh(arctan(x))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/(((x)**(f0))*(two))))'], [0.995911695197233, '((((one)*(tanh(tanh(f0))))*(d_x_f0))-(f0))**(two)'], [1.00019217457792, '(((tanh(x))/(f0))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/(((two)**(one))*(two))))'], [1.0023407724273894, '(((x)/(sinh(arctan(x))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/(((one)-((((x)/(two))-(tanh(arcsin(x))))/(two)))*(two))))'], [1.00236389018291, '(((tanh(x))/(sinh(arctan(one))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/(((one)-((((x)/(two))-(tanh(arcsin(x))))/(two)))*(two))))'], [1.0023483325174367, '(((sqrt(log(two)))**(one))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/(((one)-((((x)/(two))-(tanh(arcsin(x))))/(two)))*(two))))'], [1.0046791435373243, '(tan(sqrt(two)))*((one)*((d_x_f0)-((arcsin(one))+((tanh(one))-((cosh(cos(x)))/((d_x_f0)+(((two)-(exp(tan(x))))-((f0)*((one)-(two))))))))))'], [1.004669073250073, '(tan(sqrt(two)))*((one)*((d_x_f0)-((arcsin(one))+((tanh(one))-((cosh(cos(x)))/((d_x_f0)+(((two)-(exp(tan(one))))-((f0)*((one)-(two))))))))))'], [1.000156363135981, '(((one)/(((sqrt(one))/((d_x_f0)+(one)))/((two)+(log(one)))))-(x))*((one)/(((one)-(cos(x)))/((sqrt(log(two)))**(one))))'], [1.0067002517808146, '(((one)/(((sqrt(one))/((two)+(one)))/((two)+(log(one)))))-(x))*((one)/(((one)-(cos(x)))/((sqrt(log(two)))**(one))))'], [1.0068599485547742, '(((one)/(((sqrt(one))/((two)+(arctan(tan(one)))))/((two)+(log(one)))))-(x))*((one)/(((two)-(exp(cos(two))))/((sqrt(log(two)))**(one))))']]

time spent (in secs):7.893985271453857

---------------=============================----------------
iteration 8: we have seen 2214 different eqs
QD pool size: 529, newbins: 71 replacements: 98

new avg training reward: 1.008
best reward: 0.995911695197233 with validation reward: 0.995911695197233

best eq: ((((one)*(tanh(tanh(f0))))*(d_x_f0))-(f0))**(two) ((((one)*(np.tanh(np.tanh(f0))))*(d_x0_f0))-(f0))**(two) []

and bests eqs by free parameter number are:
[[1.002419031458889, '((d_x_f0)/(log(cosh(x))))+(cos(sinh(d_x_f0)))'], [1.002543408659033, '(((tanh(x))/(sinh(arctan(x))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/(((x)**(f0))*(two))))'], [0.995911695197233, '((((one)*(tanh(tanh(f0))))*(d_x_f0))-(f0))**(two)'], [1.00019217457792, '(((tanh(x))/(f0))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/(((two)**(one))*(two))))'], [1.0023407724273894, '(((x)/(sinh(arctan(x))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/(((one)-((((x)/(two))-(tanh(arcsin(x))))/(two)))*(two))))'], [1.00236389018291, '(((tanh(x))/(sinh(arctan(one))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/(((one)-((((x)/(two))-(tanh(arcsin(x))))/(two)))*(two))))'], [1.0023483325174367, '(((sqrt(log(two)))**(one))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/(((one)-((((x)/(two))-(tanh(arcsin(x))))/(two)))*(two))))'], [1.0046791435373243, '(tan(sqrt(two)))*((one)*((d_x_f0)-((arcsin(one))+((tanh(one))-((cosh(cos(x)))/((d_x_f0)+(((two)-(exp(tan(x))))-((f0)*((one)-(two))))))))))'], [1.004669073250073, '(tan(sqrt(two)))*((one)*((d_x_f0)-((arcsin(one))+((tanh(one))-((cosh(cos(x)))/((d_x_f0)+(((two)-(exp(tan(one))))-((f0)*((one)-(two))))))))))'], [1.000156363135981, '(((one)/(((sqrt(one))/((d_x_f0)+(one)))/((two)+(log(one)))))-(x))*((one)/(((one)-(cos(x)))/((sqrt(log(two)))**(one))))'], [1.0067002517808146, '(((one)/(((sqrt(one))/((two)+(one)))/((two)+(log(one)))))-(x))*((one)/(((one)-(cos(x)))/((sqrt(log(two)))**(one))))'], [1.0068599485547742, '(((one)/(((sqrt(one))/((two)+(arctan(tan(one)))))/((two)+(log(one)))))-(x))*((one)/(((two)-(exp(cos(two))))/((sqrt(log(two)))**(one))))']]

time spent (in secs):9.419319152832031

---------------=============================----------------
iteration 9: we have seen 2685 different eqs
QD pool size: 577, newbins: 48 replacements: 113

new avg training reward: 1.007
best reward: 0.995911695197233 with validation reward: 0.995911695197233

best eq: ((((one)*(tanh(tanh(f0))))*(d_x_f0))-(f0))**(two) ((((one)*(np.tanh(np.tanh(f0))))*(d_x0_f0))-(f0))**(two) []

and bests eqs by free parameter number are:
[[1.002419031458889, '((d_x_f0)/(log(cosh(x))))+(cos(sinh(d_x_f0)))'], [1.002543408659033, '(((tanh(x))/(sinh(arctan(x))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/(((x)**(f0))*(two))))'], [0.995911695197233, '((((one)*(tanh(tanh(f0))))*(d_x_f0))-(f0))**(two)'], [0.9978918871018448, '(((two)/(sinh(arctan(x))))+(d_x_f0))/((arcsin(arcsin(x)))*((sqrt(two))/((tanh((f0)-(one)))+((arctan(x))*(d_x_f0)))))'], [1.001970584559336, '(((tanh(x))/(sinh(arctan(x))))+(d_x_f0))/((arcsin(arcsin(x)))*((tanh(tanh(x)))/(((one)-((((x)/(two))-(tanh(arcsin(x))))/(two)))*(two))))'], [1.00236389018291, '(((tanh(x))/(sinh(arctan(one))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/(((one)-((((x)/(two))-(tanh(arcsin(x))))/(two)))*(two))))'], [1.0023483325174367, '(((sqrt(log(two)))**(one))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/(((one)-((((x)/(two))-(tanh(arcsin(x))))/(two)))*(two))))'], [1.004589887509948, '(tan(sqrt(two)))*((one)*((d_x_f0)+((arcsin(one))+((tanh(one))-((cosh(cos(one)))/((d_x_f0)+(((two)-(tanh(tan(x))))-((f0)*(one)))))))))'], [1.004669073250073, '(tan(sqrt(two)))*((one)*((d_x_f0)-((arcsin(one))+((tanh(one))-((cosh(cos(x)))/((d_x_f0)+(((two)-(exp(tan(one))))-((f0)*((one)-(two))))))))))'], [1.000156363135981, '(((one)/(((sqrt(one))/((d_x_f0)+(one)))/((two)+(log(one)))))-(x))*((one)/(((one)-(cos(x)))/((sqrt(log(two)))**(one))))'], [1.0064237915930214, '(((one)/(((sqrt(one))/((two)+(one)))/((two)+(log(one)))))/(x))*((one)/(((one)-(cos(x)))/((sqrt(log(two)))**(one))))'], [1.0068599485547742, '(((one)/(((sqrt(one))/((two)+(arctan(tan(one)))))/((two)+(log(one)))))-(x))*((one)/(((two)-(exp(cos(two))))/((sqrt(log(two)))**(one))))']]

time spent (in secs):11.339943647384644

---------------=============================----------------
iteration 10: we have seen 3210 different eqs
QD pool size: 626, newbins: 49 replacements: 129

new avg training reward: 1.006
best reward: 0.995911695197233 with validation reward: 0.995911695197233

best eq: ((((one)*(tanh(tanh(f0))))*(d_x_f0))-(f0))**(two) ((((one)*(np.tanh(np.tanh(f0))))*(d_x0_f0))-(f0))**(two) []

and bests eqs by free parameter number are:
[[1.0024156444477565, '((d_x_f0)/(log(cosh(x))))+(cos(sinh(x)))'], [1.0002511532057163, '(d_x_f0)*(cosh(cosh(two)))'], [0.995911695197233, '((((one)*(tanh(tanh(f0))))*(d_x_f0))-(f0))**(two)'], [0.9978918871018448, '(((two)/(sinh(arctan(x))))+(d_x_f0))/((arcsin(arcsin(x)))*((sqrt(two))/((tanh((f0)-(one)))+((arctan(x))*(d_x_f0)))))'], [1.001970584559336, '(((tanh(x))/(sinh(arctan(x))))+(d_x_f0))/((arcsin(arcsin(x)))*((tanh(tanh(x)))/(((one)-((((x)/(two))-(tanh(arcsin(x))))/(two)))*(two))))'], [1.00236389018291, '(((tanh(x))/(sinh(arctan(one))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/(((one)-((((x)/(two))-(tanh(arcsin(x))))/(two)))*(two))))'], [1.0023417868269227, '(((sqrt(one))**(one))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/(((one)-((((x)/(two))-(tanh(arcsin(x))))/(two)))*(two))))'], [1.0045886304416296, '(tan(sqrt(two)))*((one)*((d_x_f0)+((arcsin(one))+((tanh(one))-((cosh(one))/((d_x_f0)+(((two)-(tanh(tan(x))))-((f0)*(one)))))))))'], [1.0046585259324425, '(tan(sqrt(two)))*((one)*((d_x_f0)-((arcsin(one))*((tanh(one))-((log(two))/((d_x_f0)+(((f0)-(exp(tan(one))))-((f0)*((one)-(two))))))))))'], [0.9993102535949036, '(((one)/(((sqrt(one))/((d_x_f0)+(one)))/((two)+(log(one)))))-(x))*((one)/(((one)-(cos(x)))/((sqrt(tanh(two)))**(one))))'], [1.0064237915930214, '(((one)/(((sqrt(one))/((two)+(one)))/((two)+(log(one)))))/(x))*((one)/(((one)-(cos(x)))/((sqrt(log(two)))**(one))))'], [1.0068599485547742, '(((one)/(((sqrt(one))/((two)+(arctan(tan(one)))))/((two)+(log(one)))))-(x))*((one)/(((two)-(exp(cos(two))))/((sqrt(log(two)))**(one))))']]

time spent (in secs):13.26117491722107

---------------=============================----------------
iteration 11: we have seen 3780 different eqs
QD pool size: 679, newbins: 53 replacements: 133

new avg training reward: 1.006
best reward: 0.9343826156589241 with validation reward: 0.9343826156589241

best eq: ((cosh(tanh(two)))/((x)*(tanh((one)/(tanh(x))))))**((log((sinh(two))-(sinh(f0))))/((exp(f0))/((exp(arcsin(x)))-((log(exp(f0)))*(two))))) ((np.cosh(np.tanh(two)))/((x0)*(np.tanh((one)/(np.tanh(x0))))))**((np.log((np.sinh(two))-(np.sinh(f0))))/((np.exp(f0))/((np.exp(np.arcsin(x0)))-((np.log(np.exp(f0)))*(two))))) []

and bests eqs by free parameter number are:
[[1.0024156444477565, '((d_x_f0)/(log(cosh(x))))+(cos(sinh(x)))'], [1.0002511532057163, '(d_x_f0)*(cosh(cosh(two)))'], [0.9949278438248769, '((d_x_f0)-(sinh(x)))*((one)/((two)/(d_x_f0)))'], [0.9978918871018448, '(((two)/(sinh(arctan(x))))+(d_x_f0))/((arcsin(arcsin(x)))*((sqrt(two))/((tanh((f0)-(one)))+((arctan(x))*(d_x_f0)))))'], [0.9343826156589241, '((cosh(tanh(two)))/((x)*(tanh((one)/(tanh(x))))))**((log((sinh(two))-(sinh(f0))))/((exp(f0))/((exp(arcsin(x)))-((log(exp(f0)))*(two)))))'], [1.0023583614068257, '(((tanh(x))/(tanh(arctan(one))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/(((one)-((((x)/(two))-(tanh(arcsin(x))))/(two)))*(two))))'], [1.0023417868269227, '(((sqrt(one))**(one))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/(((one)-((((x)/(two))-(tanh(arcsin(x))))/(two)))*(two))))'], [1.0045886304416296, '(tan(sqrt(two)))*((one)*((d_x_f0)+((arcsin(one))+((tanh(one))-((cosh(one))/((d_x_f0)+(((two)-(tanh(tan(x))))-((f0)*(one)))))))))'], [1.0028500535234066, '(((((one)/(((sqrt(one))/((two)+(arctan(tan(d_x_f0)))))/((two)+(log(one)))))-(x))-(one))-((exp(cosh(two)))+(x)))**(two)'], [0.9993102535949036, '(((one)/(((sqrt(one))/((d_x_f0)+(one)))/((two)+(log(one)))))-(x))*((one)/(((one)-(cos(x)))/((sqrt(tanh(two)))**(one))))'], [1.0064237915930214, '(((one)/(((sqrt(one))/((two)+(one)))/((two)+(log(one)))))/(x))*((one)/(((one)-(cos(x)))/((sqrt(log(two)))**(one))))'], [1.0068513926455946, '(tan(sqrt(two)))*((one)*((two)-((arcsin(one))*((tanh(one))-((log(two))/((d_x_f0)+(((two)-(exp(tan(one))))-((one)*((one)-(two))))))))))']]

time spent (in secs):15.517832040786743

---------------=============================----------------
iteration 12: we have seen 4374 different eqs
QD pool size: 706, newbins: 27 replacements: 147

new avg training reward: 1.006
best reward: 0.9343826156589241 with validation reward: 0.9343826156589241

best eq: ((cosh(tanh(two)))/((x)*(tanh((one)/(tanh(x))))))**((log((sinh(two))-(sinh(f0))))/((exp(f0))/((exp(arcsin(x)))-((log(exp(f0)))*(two))))) ((np.cosh(np.tanh(two)))/((x0)*(np.tanh((one)/(np.tanh(x0))))))**((np.log((np.sinh(two))-(np.sinh(f0))))/((np.exp(f0))/((np.exp(np.arcsin(x0)))-((np.log(np.exp(f0)))*(two))))) []

and bests eqs by free parameter number are:
[[1.0024156444477565, '((d_x_f0)/(log(cosh(x))))+(cos(sinh(x)))'], [0.9963262413779653, '((sinh(sinh(two)))+(arcsin(sinh(x))))/((sinh(x))/(d_x_f0))'], [0.9948331441276905, '(d_x_f0)*((one)/((two)/(d_x_f0)))'], [0.9958664256245164, '((((one)*(tanh(tanh(f0))))*(d_x_f0))-(two))**(two)'], [0.9343826156589241, '((cosh(tanh(two)))/((x)*(tanh((one)/(tanh(x))))))**((log((sinh(two))-(sinh(f0))))/((exp(f0))/((exp(arcsin(x)))-((log(exp(f0)))*(two)))))'], [0.9995043877719745, '(((two)/(sinh((one)+((two)-(f0)))))+(d_x_f0))/((arcsin(arcsin(x)))*((sqrt(two))/((tanh((f0)-(one)))+((arctan(x))*(d_x_f0)))))'], [1.0023417868269227, '(((sqrt(one))**(one))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/(((one)-((((x)/(two))-(tanh(arcsin(x))))/(two)))*(two))))'], [1.0040305723636245, '((two)*(d_x_f0))+(((((cosh(exp(two)))*(arctan(one)))-(((arctan(sinh(one)))*((one)**(one)))/(f0)))+(d_x_f0))+(cosh(two)))'], [1.0028500535234066, '(((((one)/(((sqrt(one))/((two)+(arctan(tan(d_x_f0)))))/((two)+(log(one)))))-(x))-(one))-((exp(cosh(two)))+(x)))**(two)'], [0.9993102535949036, '(((one)/(((sqrt(one))/((d_x_f0)+(one)))/((two)+(log(one)))))-(x))*((one)/(((one)-(cos(x)))/((sqrt(tanh(two)))**(one))))'], [1.0064237915930214, '(((one)/(((sqrt(one))/((two)+(one)))/((two)+(log(one)))))/(x))*((one)/(((one)-(cos(x)))/((sqrt(log(two)))**(one))))'], [1.006849107635223, '(tan(sqrt(two)))*((one)*((two)-((arcsin(one))*((tanh(one))-((log(two))/((d_x_f0)+(((two)-(exp(tan(one))))**((one)*((one)-(two))))))))))']]

time spent (in secs):17.831945657730103

---------------=============================----------------
iteration 13: we have seen 5020 different eqs
QD pool size: 739, newbins: 33 replacements: 132

new avg training reward: 1.006
best reward: 0.9343826156589241 with validation reward: 0.9343826156589241

best eq: ((cosh(tanh(two)))/((x)*(tanh((one)/(tanh(x))))))**((log((sinh(two))-(sinh(f0))))/((exp(f0))/((exp(arcsin(x)))-((log(exp(f0)))*(two))))) ((np.cosh(np.tanh(two)))/((x0)*(np.tanh((one)/(np.tanh(x0))))))**((np.log((np.sinh(two))-(np.sinh(f0))))/((np.exp(f0))/((np.exp(np.arcsin(x0)))-((np.log(np.exp(f0)))*(two))))) []

and bests eqs by free parameter number are:
[[1.0024156444477565, '((d_x_f0)/(log(cosh(x))))+(cos(sinh(x)))'], [0.9963262413779653, '((sinh(sinh(two)))+(arcsin(sinh(x))))/((sinh(x))/(d_x_f0))'], [0.9948331441276905, '(d_x_f0)*((one)/((two)/(d_x_f0)))'], [0.9958664256245164, '((((one)*(tanh(tanh(f0))))*(d_x_f0))-(two))**(two)'], [0.9343826156589241, '((cosh(tanh(two)))/((x)*(tanh((one)/(tanh(x))))))**((log((sinh(two))-(sinh(f0))))/((exp(f0))/((exp(arcsin(x)))-((log(exp(f0)))*(two)))))'], [0.9995043877719745, '(((two)/(sinh((one)+((two)-(f0)))))+(d_x_f0))/((arcsin(arcsin(x)))*((sqrt(two))/((tanh((f0)-(one)))+((arctan(x))*(d_x_f0)))))'], [1.0023417868269227, '(((sqrt(one))**(one))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/(((one)-((((x)/(two))-(tanh(arcsin(x))))/(two)))*(two))))'], [1.0040305723636245, '((two)*(d_x_f0))+(((((cosh(exp(two)))*(arctan(one)))-(((arctan(sinh(one)))*((one)**(one)))/(f0)))+(d_x_f0))+(cosh(two)))'], [1.0028500535234066, '(((((one)/(((sqrt(one))/((two)+(arctan(tan(d_x_f0)))))/((two)+(log(one)))))-(x))-(one))-((exp(cosh(two)))+(x)))**(two)'], [0.9993102535949036, '(((one)/(((sqrt(one))/((d_x_f0)+(one)))/((two)+(log(one)))))-(x))*((one)/(((one)-(cos(x)))/((sqrt(tanh(two)))**(one))))'], [1.0064237915930214, '(((one)/(((sqrt(one))/((two)+(one)))/((two)+(log(one)))))/(x))*((one)/(((one)-(cos(x)))/((sqrt(log(two)))**(one))))'], [1.006849107635223, '(tan(sqrt(two)))*((one)*((two)-((arcsin(one))*((tanh(one))-((log(two))/((d_x_f0)+(((two)-(exp(tan(one))))**((one)*((one)-(two))))))))))']]

time spent (in secs):20.221659421920776

---------------=============================----------------
iteration 14: we have seen 5680 different eqs
QD pool size: 774, newbins: 35 replacements: 129

new avg training reward: 1.006
best reward: 0.9343826156589241 with validation reward: 0.9343826156589241

best eq: ((cosh(tanh(two)))/((x)*(tanh((one)/(tanh(x))))))**((log((sinh(two))-(sinh(f0))))/((exp(f0))/((exp(arcsin(x)))-((log(exp(f0)))*(two))))) ((np.cosh(np.tanh(two)))/((x0)*(np.tanh((one)/(np.tanh(x0))))))**((np.log((np.sinh(two))-(np.sinh(f0))))/((np.exp(f0))/((np.exp(np.arcsin(x0)))-((np.log(np.exp(f0)))*(two))))) []

and bests eqs by free parameter number are:
[[1.0024156444477565, '((d_x_f0)/(log(cosh(x))))+(cos(sinh(x)))'], [0.9963262413779653, '((sinh(sinh(two)))+(arcsin(sinh(x))))/((sinh(x))/(d_x_f0))'], [0.9948327123672762, '((two)/(d_x_f0))+((d_x_f0)*((((x)/(two))*(d_x_f0))/(x)))'], [0.9958664256245164, '((((one)*(tanh(tanh(f0))))*(d_x_f0))-(two))**(two)'], [0.9343826156589241, '((cosh(tanh(two)))/((x)*(tanh((one)/(tanh(x))))))**((log((sinh(two))-(sinh(f0))))/((exp(f0))/((exp(arcsin(x)))-((log(exp(f0)))*(two)))))'], [0.9995043877719745, '(((two)/(sinh((one)+((two)-(f0)))))+(d_x_f0))/((arcsin(arcsin(x)))*((sqrt(two))/((tanh((f0)-(one)))+((arctan(x))*(d_x_f0)))))'], [0.995392728158804, '(tan(sqrt(two)))*((one)*((d_x_f0)/((arcsin(one))*((tanh(one))-((log(two))/(one))))))'], [1.0040305723636245, '((two)*(d_x_f0))+(((((cosh(exp(two)))*(arctan(one)))-(((arctan(sinh(one)))*((one)**(one)))/(f0)))+(d_x_f0))+(cosh(two)))'], [1.0028500535234066, '(((((one)/(((sqrt(one))/((two)+(arctan(tan(d_x_f0)))))/((two)+(log(one)))))-(x))-(one))-((exp(cosh(two)))+(x)))**(two)'], [0.9993102535949036, '(((one)/(((sqrt(one))/((d_x_f0)+(one)))/((two)+(log(one)))))-(x))*((one)/(((one)-(cos(x)))/((sqrt(tanh(two)))**(one))))'], [1.0016642687243504, '(tan(sqrt(two)))*((one)*(((d_x_f0)/(x))-((arcsin(one))*((one)-((log(two))/((d_x_f0)+(((two)-(exp(tan(one))))-((two)*((one)-(two))))))))))'], [1.006849107635223, '(tan(sqrt(two)))*((one)*((two)-((arcsin(one))*((tanh(one))-((log(two))/((d_x_f0)+(((two)-(exp(tan(one))))**((one)*((one)-(two))))))))))']]

time spent (in secs):22.84319233894348

---------------=============================----------------
iteration 15: we have seen 6367 different eqs
QD pool size: 804, newbins: 30 replacements: 142

new avg training reward: 1.006
best reward: 0.9343826156589241 with validation reward: 0.9343826156589241

best eq: ((cosh(tanh(two)))/((x)*(tanh((one)/(tanh(x))))))**((log((sinh(two))-(sinh(f0))))/((exp(f0))/((exp(arcsin(x)))-((log(exp(f0)))*(two))))) ((np.cosh(np.tanh(two)))/((x0)*(np.tanh((one)/(np.tanh(x0))))))**((np.log((np.sinh(two))-(np.sinh(f0))))/((np.exp(f0))/((np.exp(np.arcsin(x0)))-((np.log(np.exp(f0)))*(two))))) []

and bests eqs by free parameter number are:
[[1.0024156444477565, '((d_x_f0)/(log(cosh(x))))+(cos(sinh(x)))'], [0.9960168604633144, '((sinh(sinh(two)))+(sqrt((x)+(x))))/((tanh(x))/(d_x_f0))'], [0.9752841752913475, '(((d_x_f0)+(arctan(one)))*(d_x_f0))*((x)**((f0)**(one)))'], [0.9958664256245164, '((((one)*(tanh(tanh(f0))))*(d_x_f0))-(two))**(two)'], [0.9343826156589241, '((cosh(tanh(two)))/((x)*(tanh((one)/(tanh(x))))))**((log((sinh(two))-(sinh(f0))))/((exp(f0))/((exp(arcsin(x)))-((log(exp(f0)))*(two)))))'], [0.9995043877719745, '(((two)/(sinh((one)+((two)-(f0)))))+(d_x_f0))/((arcsin(arcsin(x)))*((sqrt(two))/((tanh((f0)-(one)))+((arctan(x))*(d_x_f0)))))'], [0.995392728158804, '(tan(sqrt(two)))*((one)*((d_x_f0)/((arcsin(one))*((tanh(one))-((log(two))/(one))))))'], [1.0031634265819167, '(((((one)/(((sqrt(x))/((two)+(arctan(tan(d_x_f0)))))/((two)+(log(one)))))-(x))-(one))-((exp(cosh(two)))+(x)))**(two)'], [1.002406262601039, '((((one)/(((sqrt(one))+((two)+(arctan(tan(d_x_f0)))))/((one)+(log(one)))))-(one))-((exp(cosh(two)))+(x)))**(two)'], [0.9993102535949036, '(((one)/(((sqrt(one))/((d_x_f0)+(one)))/((two)+(log(one)))))-(x))*((one)/(((one)-(cos(x)))/((sqrt(tanh(two)))**(one))))'], [1.0016642687243504, '(tan(sqrt(two)))*((one)*(((d_x_f0)/(x))-((arcsin(one))*((one)-((log(two))/((d_x_f0)+(((two)-(exp(tan(one))))-((two)*((one)-(two))))))))))'], [1.006849107635223, '(tan(sqrt(two)))*((one)*((two)-((arcsin(one))*((tanh(one))-((log(two))/((d_x_f0)+(((two)-(exp(tan(one))))**((one)*((one)-(two))))))))))']]

time spent (in secs):25.446552753448486

---------------=============================----------------
iteration 16: we have seen 7087 different eqs
QD pool size: 831, newbins: 27 replacements: 139

new avg training reward: 1.006
best reward: 0.9343826156589241 with validation reward: 0.9343826156589241

best eq: ((cosh(tanh(two)))/((x)*(tanh((one)/(tanh(x))))))**((log((sinh(two))-(sinh(f0))))/((exp(f0))/((exp(arcsin(x)))-((log(exp(f0)))*(two))))) ((np.cosh(np.tanh(two)))/((x0)*(np.tanh((one)/(np.tanh(x0))))))**((np.log((np.sinh(two))-(np.sinh(f0))))/((np.exp(f0))/((np.exp(np.arcsin(x0)))-((np.log(np.exp(f0)))*(two))))) []

and bests eqs by free parameter number are:
[[0.9998211097995203, '(((x)/(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((x)/((arctan(tanh(x)))+((exp(cosh(f0)))+(x)))))'], [0.9960168604633144, '((sinh(sinh(two)))+(sqrt((x)+(x))))/((tanh(x))/(d_x_f0))'], [0.9752841752913475, '(((d_x_f0)+(arctan(one)))*(d_x_f0))*((x)**((f0)**(one)))'], [0.9958664256245164, '((((one)*(tanh(tanh(f0))))*(d_x_f0))-(two))**(two)'], [0.9343826156589241, '((cosh(tanh(two)))/((x)*(tanh((one)/(tanh(x))))))**((log((sinh(two))-(sinh(f0))))/((exp(f0))/((exp(arcsin(x)))-((log(exp(f0)))*(two)))))'], [0.9995043877719745, '(((two)/(sinh((one)+((two)-(f0)))))+(d_x_f0))/((arcsin(arcsin(x)))*((sqrt(two))/((tanh((f0)-(one)))+((arctan(x))*(d_x_f0)))))'], [0.995392728158804, '(tan(sqrt(two)))*((one)*((d_x_f0)/((arcsin(one))*((tanh(one))-((log(two))/(one))))))'], [1.0023837772871615, '((((one)/(((sqrt(one))+((d_x_f0)+(arctan(tan(d_x_f0)))))/((one)+(log(one)))))-(one))-((exp(cosh(two)))+(x)))**(two)'], [1.0016454510751098, '(((((one)/(((sqrt(one))/((two)+(arctan(one))))/((two)+(log(one)))))-(x))-(d_x_f0))-((exp(cosh(two)))+(x)))**(two)'], [0.9993102535949036, '(((one)/(((sqrt(one))/((d_x_f0)+(one)))/((two)+(log(one)))))-(x))*((one)/(((one)-(cos(x)))/((sqrt(tanh(two)))**(one))))'], [1.0016642687243504, '(tan(sqrt(two)))*((one)*(((d_x_f0)/(x))-((arcsin(one))*((one)-((log(two))/((d_x_f0)+(((two)-(exp(tan(one))))-((two)*((one)-(two))))))))))'], [1.006849107635223, '(tan(sqrt(two)))*((one)*((two)-((arcsin(one))*((tanh(one))-((log(two))/((d_x_f0)+(((two)-(exp(tan(one))))**((one)*((one)-(two))))))))))']]

time spent (in secs):28.086882829666138

---------------=============================----------------
iteration 17: we have seen 7821 different eqs
QD pool size: 854, newbins: 23 replacements: 139

new avg training reward: 1.005
best reward: 0.9343826156589241 with validation reward: 0.9343826156589241

best eq: ((cosh(tanh(two)))/((x)*(tanh((one)/(tanh(x))))))**((log((sinh(two))-(sinh(f0))))/((exp(f0))/((exp(arcsin(x)))-((log(exp(f0)))*(two))))) ((np.cosh(np.tanh(two)))/((x0)*(np.tanh((one)/(np.tanh(x0))))))**((np.log((np.sinh(two))-(np.sinh(f0))))/((np.exp(f0))/((np.exp(np.arcsin(x0)))-((np.log(np.exp(f0)))*(two))))) []

and bests eqs by free parameter number are:
[[0.9998211097995203, '(((x)/(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((x)/((arctan(tanh(x)))+((exp(cosh(f0)))+(x)))))'], [0.99492551065363, '((d_x_f0)-(x))*((d_x_f0)/(two))'], [0.9748925777055374, '(((d_x_f0)+(cosh(one)))*(d_x_f0))*((x)**((f0)**(one)))'], [0.9958664256245164, '((((one)*(tanh(tanh(f0))))*(d_x_f0))-(two))**(two)'], [0.9343826156589241, '((cosh(tanh(two)))/((x)*(tanh((one)/(tanh(x))))))**((log((sinh(two))-(sinh(f0))))/((exp(f0))/((exp(arcsin(x)))-((log(exp(f0)))*(two)))))'], [0.9995043877719745, '(((two)/(sinh((one)+((two)-(f0)))))+(d_x_f0))/((arcsin(arcsin(x)))*((sqrt(two))/((tanh((f0)-(one)))+((arctan(x))*(d_x_f0)))))'], [0.995392728158804, '(tan(sqrt(two)))*((one)*((d_x_f0)/((arcsin(one))*((tanh(one))-((log(two))/(one))))))'], [1.0014715717731297, '(tan(sqrt(two)))*((one)*((d_x_f0)-((arcsin(one))*((tanh(one))-((log(two))+((d_x_f0)+(((two)-(f0))-((f0)*((x)/(two))))))))))'], [1.0016454510751098, '(((((one)/(((sqrt(one))/((two)+(arctan(one))))/((two)+(log(one)))))-(x))-(d_x_f0))-((exp(cosh(two)))+(x)))**(two)'], [0.9993102535949036, '(((one)/(((sqrt(one))/((d_x_f0)+(one)))/((two)+(log(one)))))-(x))*((one)/(((one)-(cos(x)))/((sqrt(tanh(two)))**(one))))'], [1.0016642687243504, '(tan(sqrt(two)))*((one)*(((d_x_f0)/(x))-((arcsin(one))*((one)-((log(two))/((d_x_f0)+(((two)-(exp(tan(one))))-((two)*((one)-(two))))))))))'], [1.006809199145696, '(tan(sqrt(two)))*(((two)+(two))*((two)-((arcsin(one))*((tanh(one))-((log(two))/((d_x_f0)+((two)**((one)*((one)-(two))))))))))']]

time spent (in secs):30.778723001480103

---------------=============================----------------
iteration 18: we have seen 8585 different eqs
QD pool size: 874, newbins: 20 replacements: 155

new avg training reward: 1.006
best reward: 0.9343826156589241 with validation reward: 0.9343826156589241

best eq: ((cosh(tanh(two)))/((x)*(tanh((one)/(tanh(x))))))**((log((sinh(two))-(sinh(f0))))/((exp(f0))/((exp(arcsin(x)))-((log(exp(f0)))*(two))))) ((np.cosh(np.tanh(two)))/((x0)*(np.tanh((one)/(np.tanh(x0))))))**((np.log((np.sinh(two))-(np.sinh(f0))))/((np.exp(f0))/((np.exp(np.arcsin(x0)))-((np.log(np.exp(f0)))*(two))))) []

and bests eqs by free parameter number are:
[[0.9998211097995203, '(((x)/(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((x)/((arctan(tanh(x)))+((exp(cosh(f0)))+(x)))))'], [0.99492551065363, '((d_x_f0)-(x))*((d_x_f0)/(two))'], [0.9748925777055374, '(((d_x_f0)+(cosh(one)))*(d_x_f0))*((x)**((f0)**(one)))'], [0.9949378095745706, '((((one)*(log(two)))*(d_x_f0))-(cos(cos(x))))**(two)'], [0.9343826156589241, '((cosh(tanh(two)))/((x)*(tanh((one)/(tanh(x))))))**((log((sinh(two))-(sinh(f0))))/((exp(f0))/((exp(arcsin(x)))-((log(exp(f0)))*(two)))))'], [0.9995043877719745, '(((two)/(sinh((one)+((two)-(f0)))))+(d_x_f0))/((arcsin(arcsin(x)))*((sqrt(two))/((tanh((f0)-(one)))+((arctan(x))*(d_x_f0)))))'], [0.995392728158804, '(tan(sqrt(two)))*((one)*((d_x_f0)/((arcsin(one))*((tanh(one))-((log(two))/(one))))))'], [1.0014715717731297, '(tan(sqrt(two)))*((one)*((d_x_f0)-((arcsin(one))*((tanh(one))-((log(two))+((d_x_f0)+(((two)-(f0))-((f0)*((x)/(two))))))))))'], [1.0016454510751098, '(((((one)/(((sqrt(one))/((two)+(arctan(one))))/((two)+(log(one)))))-(x))-(d_x_f0))-((exp(cosh(two)))+(x)))**(two)'], [0.9993102535949036, '(((one)/(((sqrt(one))/((d_x_f0)+(one)))/((two)+(log(one)))))-(x))*((one)/(((one)-(cos(x)))/((sqrt(tanh(two)))**(one))))'], [1.0016642687243504, '(tan(sqrt(two)))*((one)*(((d_x_f0)/(x))-((arcsin(one))*((one)-((log(two))/((d_x_f0)+(((two)-(exp(tan(one))))-((two)*((one)-(two))))))))))'], [1.006809199145696, '(tan(sqrt(two)))*(((two)+(two))*((two)-((arcsin(one))*((tanh(one))-((log(two))/((d_x_f0)+((two)**((one)*((one)-(two))))))))))']]

time spent (in secs):33.61531662940979

---------------=============================----------------
iteration 19: we have seen 9355 different eqs
QD pool size: 889, newbins: 15 replacements: 147

new avg training reward: 1.005
best reward: 0.9343826156589241 with validation reward: 0.9343826156589241

best eq: ((cosh(tanh(two)))/((x)*(tanh((one)/(tanh(x))))))**((log((sinh(two))-(sinh(f0))))/((exp(f0))/((exp(arcsin(x)))-((log(exp(f0)))*(two))))) ((np.cosh(np.tanh(two)))/((x0)*(np.tanh((one)/(np.tanh(x0))))))**((np.log((np.sinh(two))-(np.sinh(f0))))/((np.exp(f0))/((np.exp(np.arcsin(x0)))-((np.log(np.exp(f0)))*(two))))) []

and bests eqs by free parameter number are:
[[0.9998211097995203, '(((x)/(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((x)/((arctan(tanh(x)))+((exp(cosh(f0)))+(x)))))'], [0.9915913984987216, '(((f0)*(d_x_f0))-(x))**(two)'], [0.9692146250080026, '((((two)*(tanh(tanh(f0))))*(d_x_f0))-(f0))**(two)'], [0.9949378095745706, '((((one)*(log(two)))*(d_x_f0))-(cos(cos(x))))**(two)'], [0.9343826156589241, '((cosh(tanh(two)))/((x)*(tanh((one)/(tanh(x))))))**((log((sinh(two))-(sinh(f0))))/((exp(f0))/((exp(arcsin(x)))-((log(exp(f0)))*(two)))))'], [0.999172944552055, '(((d_x_f0)**(one))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/(((one)-((((x)/(two))-(tanh(arcsin(x))))/(two)))*(two))))'], [0.995392728158804, '(tan(sqrt(two)))*((one)*((d_x_f0)/((arcsin(one))*((tanh(one))-((log(two))/(one))))))'], [1.0014715717731297, '(tan(sqrt(two)))*((one)*((d_x_f0)-((arcsin(one))*((tanh(one))-((log(two))+((d_x_f0)+(((two)-(f0))-((f0)*((x)/(two))))))))))'], [1.0016454510751098, '(((((one)/(((sqrt(one))/((two)+(arctan(one))))/((two)+(log(one)))))-(x))-(d_x_f0))-((exp(cosh(two)))+(x)))**(two)'], [0.9960896060306623, '((((cosh(cosh(two)))+((x)/(x)))*(two))-((one)-(two)))*((one)*((d_x_f0)+((arcsin(one))*((tanh(one))-((log(two))/(one))))))'], [1.0016642687243504, '(tan(sqrt(two)))*((one)*(((d_x_f0)/(x))-((arcsin(one))*((one)-((log(two))/((d_x_f0)+(((two)-(exp(tan(one))))-((two)*((one)-(two))))))))))'], [1.006809199145696, '(tan(sqrt(two)))*(((two)+(two))*((two)-((arcsin(one))*((tanh(one))-((log(two))/((d_x_f0)+((two)**((one)*((one)-(two))))))))))']]

time spent (in secs):36.826677083969116

---------------=============================----------------
iteration 20: we have seen 10140 different eqs
QD pool size: 904, newbins: 15 replacements: 133

new avg training reward: 1.005
best reward: 0.9343826156589241 with validation reward: 0.9343826156589241

best eq: ((cosh(tanh(two)))/((x)*(tanh((one)/(tanh(x))))))**((log((sinh(two))-(sinh(f0))))/((exp(f0))/((exp(arcsin(x)))-((log(exp(f0)))*(two))))) ((np.cosh(np.tanh(two)))/((x0)*(np.tanh((one)/(np.tanh(x0))))))**((np.log((np.sinh(two))-(np.sinh(f0))))/((np.exp(f0))/((np.exp(np.arcsin(x0)))-((np.log(np.exp(f0)))*(two))))) []

and bests eqs by free parameter number are:
[[0.9998211097995203, '(((x)/(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((x)/((arctan(tanh(x)))+((exp(cosh(f0)))+(x)))))'], [0.9915913984987216, '(((f0)*(d_x_f0))-(x))**(two)'], [0.9692146250080026, '((((two)*(tanh(tanh(f0))))*(d_x_f0))-(f0))**(two)'], [0.9883115084293703, '(d_x_f0)*(((x)/(((arctan(two))*(x))-((arctan(one))*(((tanh(sinh(two)))+(x))*(x)))))+((x)/(sinh(x))))'], [0.9343826156589241, '((cosh(tanh(two)))/((x)*(tanh((one)/(tanh(x))))))**((log((sinh(two))-(sinh(f0))))/((exp(f0))/((exp(arcsin(x)))-((log(exp(f0)))*(two)))))'], [0.999172944552055, '(((d_x_f0)**(one))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/(((one)-((((x)/(two))-(tanh(arcsin(x))))/(two)))*(two))))'], [0.995392728158804, '(tan(sqrt(two)))*((one)*((d_x_f0)/((arcsin(one))*((tanh(one))-((log(two))/(one))))))'], [1.0014715717731297, '(tan(sqrt(two)))*((one)*((d_x_f0)-((arcsin(one))*((tanh(one))-((log(two))+((d_x_f0)+(((two)-(f0))-((f0)*((x)/(two))))))))))'], [1.0016454510751098, '(((((one)/(((sqrt(one))/((two)+(arctan(one))))/((two)+(log(one)))))-(x))-(d_x_f0))-((exp(cosh(two)))+(x)))**(two)'], [0.9921479696717496, '((((one)*((((d_x_f0)/(two))+(two))/(two)))+(((one)/(one))/(((one)-(cos(x)))/((arctan(log(two)))**(one)))))*(d_x_f0))+((x)**(x))'], [1.0016642687243504, '(tan(sqrt(two)))*((one)*(((d_x_f0)/(x))-((arcsin(one))*((one)-((log(two))/((d_x_f0)+(((two)-(exp(tan(one))))-((two)*((one)-(two))))))))))'], [1.006809199145696, '(tan(sqrt(two)))*(((two)+(two))*((two)-((arcsin(one))*((tanh(one))-((log(two))/((d_x_f0)+((two)**((one)*((one)-(two))))))))))']]

time spent (in secs):39.7383074760437

---------------=============================----------------
iteration 21: we have seen 10963 different eqs
QD pool size: 918, newbins: 14 replacements: 137

new avg training reward: 1.005
best reward: 0.9343826156589241 with validation reward: 0.9343826156589241

best eq: ((cosh(tanh(two)))/((x)*(tanh((one)/(tanh(x))))))**((log((sinh(two))-(sinh(f0))))/((exp(f0))/((exp(arcsin(x)))-((log(exp(f0)))*(two))))) ((np.cosh(np.tanh(two)))/((x0)*(np.tanh((one)/(np.tanh(x0))))))**((np.log((np.sinh(two))-(np.sinh(f0))))/((np.exp(f0))/((np.exp(np.arcsin(x0)))-((np.log(np.exp(f0)))*(two))))) []

and bests eqs by free parameter number are:
[[0.9998211097995203, '(((x)/(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((x)/((arctan(tanh(x)))+((exp(cosh(f0)))+(x)))))'], [0.9915913984987216, '(((f0)*(d_x_f0))-(x))**(two)'], [0.9692146250080026, '((((two)*(tanh(tanh(f0))))*(d_x_f0))-(f0))**(two)'], [0.9883115084293703, '(d_x_f0)*(((x)/(((arctan(two))*(x))-((arctan(one))*(((tanh(sinh(two)))+(x))*(x)))))+((x)/(sinh(x))))'], [0.9343826156589241, '((cosh(tanh(two)))/((x)*(tanh((one)/(tanh(x))))))**((log((sinh(two))-(sinh(f0))))/((exp(f0))/((exp(arcsin(x)))-((log(exp(f0)))*(two)))))'], [0.9975057785749255, '(((d_x_f0)**(one))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/(((one)-((((x)/(two))-(tanh(arcsin(x))))/(two)))+(two))))'], [0.995392728158804, '(tan(sqrt(two)))*((one)*((d_x_f0)/((arcsin(one))*((tanh(one))-((log(two))/(one))))))'], [0.9985004870228861, '(((((one)/(((sqrt(one))/((two)+(arctan(d_x_f0))))/((two)+(log(one)))))-(x))-(d_x_f0))-((exp(cosh(two)))+(x)))**(two)'], [0.9962058860408303, '((((cosh(cosh(two)))+((x)/(x)))*(two))-((one)-(two)))*((one)*((d_x_f0)+((arcsin(one))*((tanh(one))-((cosh(f0))/(one))))))'], [0.9921479696717496, '((((one)*((((d_x_f0)/(two))+(two))/(two)))+(((one)/(one))/(((one)-(cos(x)))/((arctan(log(two)))**(one)))))*(d_x_f0))+((x)**(x))'], [1.0016642687243504, '(tan(sqrt(two)))*((one)*(((d_x_f0)/(x))-((arcsin(one))*((one)-((log(two))/((d_x_f0)+(((two)-(exp(tan(one))))-((two)*((one)-(two))))))))))'], [1.006809199145696, '(tan(sqrt(two)))*(((two)+(two))*((two)-((arcsin(one))*((tanh(one))-((log(two))/((d_x_f0)+((two)**((one)*((one)-(two))))))))))']]

time spent (in secs):42.758201122283936

---------------=============================----------------
iteration 22: we have seen 11760 different eqs
QD pool size: 935, newbins: 17 replacements: 146

new avg training reward: 1.004
best reward: 0.7587252909153304 with validation reward: 0.7587252909153304

best eq: (((x)/(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((arctan(tanh(x)))+((arctan(f0))*((x)-(d_x_f0)))))) (((x0)/(np.sinh(x0)))+(d_x0_f0))/((np.arcsin(np.arcsin(x0)))*((np.tan(np.tanh(x0)))/((np.arctan(np.tanh(x0)))+((np.arctan(f0))*((x0)-(d_x0_f0)))))) []

and bests eqs by free parameter number are:
[[0.7587252909153304, '(((x)/(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((arctan(tanh(x)))+((arctan(f0))*((x)-(d_x_f0))))))'], [0.9915913984987216, '(((f0)*(d_x_f0))-(x))**(two)'], [0.9692146250080026, '((((two)*(tanh(tanh(f0))))*(d_x_f0))-(f0))**(two)'], [0.9511047750155904, '((((one)*((f0)*(two)))*(d_x_f0))-(d_x_f0))**(two)'], [0.9343826156589241, '((cosh(tanh(two)))/((x)*(tanh((one)/(tanh(x))))))**((log((sinh(two))-(sinh(f0))))/((exp(f0))/((exp(arcsin(x)))-((log(exp(f0)))*(two)))))'], [0.9975057785749255, '(((d_x_f0)**(one))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/(((one)-((((x)/(two))-(tanh(arcsin(x))))/(two)))+(two))))'], [0.995392728158804, '(tan(sqrt(two)))*((one)*((d_x_f0)/((arcsin(one))*((tanh(one))-((log(two))/(one))))))'], [0.997957946271939, '((d_x_f0)+(d_x_f0))/(((one)**(cosh(log((x)*(two)))))*((tan(tanh(x)))/(((one)/(((one)-(cos(x)))/((sqrt(log(two)))**(one))))+(two))))'], [0.9952415133270046, '((((cosh(cosh(two)))+((x)/(x)))*(two))-((one)-(two)))*((one)*((d_x_f0)+((arcsin(one))*(((two)/(x))-((cosh(f0))/(one))))))'], [0.9921402793106009, '((((one)*((((d_x_f0)/(two))+(two))/(two)))+(((one)/(one))/(((one)-(cos(x)))/((arctan(log(two)))**(one)))))*(d_x_f0))+((x)**(f0))'], [1.0016642687243504, '(tan(sqrt(two)))*((one)*(((d_x_f0)/(x))-((arcsin(one))*((one)-((log(two))/((d_x_f0)+(((two)-(exp(tan(one))))-((two)*((one)-(two))))))))))'], [1.0067246983827975, '(tan(sqrt(two)))*(((two)+(two))*((two)**((arcsin(one))*((tanh(one))-((log(two))/((d_x_f0)+((two)**((one)*((one)-(two))))))))))']]

time spent (in secs):45.91359806060791

---------------=============================----------------
iteration 23: we have seen 12601 different eqs
QD pool size: 951, newbins: 16 replacements: 129

new avg training reward: 1.004
best reward: 0.7587252909153304 with validation reward: 0.7587252909153304

best eq: (((x)/(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((arctan(tanh(x)))+((arctan(f0))*((x)-(d_x_f0)))))) (((x0)/(np.sinh(x0)))+(d_x0_f0))/((np.arcsin(np.arcsin(x0)))*((np.tan(np.tanh(x0)))/((np.arctan(np.tanh(x0)))+((np.arctan(f0))*((x0)-(d_x0_f0)))))) []

and bests eqs by free parameter number are:
[[0.7587252909153304, '(((x)/(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((arctan(tanh(x)))+((arctan(f0))*((x)-(d_x_f0))))))'], [0.9915913984987216, '(((f0)*(d_x_f0))-(x))**(two)'], [0.9692146250080026, '((((two)*(tanh(tanh(f0))))*(d_x_f0))-(f0))**(two)'], [0.9511047750155904, '((((one)*((f0)*(two)))*(d_x_f0))-(d_x_f0))**(two)'], [0.9343826156589241, '((cosh(tanh(two)))/((x)*(tanh((one)/(tanh(x))))))**((log((sinh(two))-(sinh(f0))))/((exp(f0))/((exp(arcsin(x)))-((log(exp(f0)))*(two)))))'], [0.9975057785749255, '(((d_x_f0)**(one))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/(((one)-((((x)/(two))-(tanh(arcsin(x))))/(two)))+(two))))'], [0.995392728158804, '(tan(sqrt(two)))*((one)*((d_x_f0)/((arcsin(one))*((tanh(one))-((log(two))/(one))))))'], [0.9967041667075777, '(((f0)/(((sqrt(one))/((two)+(one)))/((two)+(cosh(x)))))/(x))*((two)/(((x)-((x)**(cos(x))))/((sqrt(log(two)))**(one))))'], [0.9952415133270046, '((((cosh(cosh(two)))+((x)/(x)))*(two))-((one)-(two)))*((one)*((d_x_f0)+((arcsin(one))*(((two)/(x))-((cosh(f0))/(one))))))'], [0.9921402793106009, '((((one)*((((d_x_f0)/(two))+(two))/(two)))+(((one)/(one))/(((one)-(cos(x)))/((arctan(log(two)))**(one)))))*(d_x_f0))+((x)**(f0))'], [1.0016642687243504, '(tan(sqrt(two)))*((one)*(((d_x_f0)/(x))-((arcsin(one))*((one)-((log(two))/((d_x_f0)+(((two)-(exp(tan(one))))-((two)*((one)-(two))))))))))'], [1.0067246983827975, '(tan(sqrt(two)))*(((two)+(two))*((two)**((arcsin(one))*((tanh(one))-((log(two))/((d_x_f0)+((two)**((one)*((one)-(two))))))))))'], [1.0068680589088257, '(sqrt(one))*((one)*((two)-((log(two))+((tanh(one))-((log(two))/(((one)**(one))+(((two)-(exp(tan(one))))-((f0)*((one)-(two))))))))))']]

time spent (in secs):49.375483751297

---------------=============================----------------
iteration 24: we have seen 13428 different eqs
QD pool size: 969, newbins: 18 replacements: 135

new avg training reward: 1.004
best reward: 0.7587252909153304 with validation reward: 0.7587252909153304

best eq: (((x)/(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((arctan(tanh(x)))+((arctan(f0))*((x)-(d_x_f0)))))) (((x0)/(np.sinh(x0)))+(d_x0_f0))/((np.arcsin(np.arcsin(x0)))*((np.tan(np.tanh(x0)))/((np.arctan(np.tanh(x0)))+((np.arctan(f0))*((x0)-(d_x0_f0)))))) []

and bests eqs by free parameter number are:
[[0.7587252909153304, '(((x)/(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((arctan(tanh(x)))+((arctan(f0))*((x)-(d_x_f0))))))'], [0.9915913984987216, '(((f0)*(d_x_f0))-(x))**(two)'], [0.9692146250080026, '((((two)*(tanh(tanh(f0))))*(d_x_f0))-(f0))**(two)'], [0.9511047750155904, '((((one)*((f0)*(two)))*(d_x_f0))-(d_x_f0))**(two)'], [0.9343826156589241, '((cosh(tanh(two)))/((x)*(tanh((one)/(tanh(x))))))**((log((sinh(two))-(sinh(f0))))/((exp(f0))/((exp(arcsin(x)))-((log(exp(f0)))*(two)))))'], [0.9973706670042608, '(((d_x_f0)**(one))+(d_x_f0))/((arcsin(x))*((tan(tanh(x)))/(((one)-((((x)/(two))-(tanh(arcsin(x))))/(two)))+(two))))'], [0.9551013948213692, '(exp((one)/(tanh(x))))**(((arctan((x)+(((one)/((two)/(two)))-(f0))))*(two))-((f0)*(two)))'], [0.9914419560182599, '(((((one)-((((x)+(one))/((two)/(d_x_f0)))+(arctan(one))))*(arctan(one)))-(one))-((f0)/((f0)+(x))))**(two)'], [0.9952415133270046, '((((cosh(cosh(two)))+((x)/(x)))*(two))-((one)-(two)))*((one)*((d_x_f0)+((arcsin(one))*(((two)/(x))-((cosh(f0))/(one))))))'], [0.9921402793106009, '((((one)*((((d_x_f0)/(two))+(two))/(two)))+(((one)/(one))/(((one)-(cos(x)))/((arctan(log(two)))**(one)))))*(d_x_f0))+((x)**(f0))'], [1.0016642687243504, '(tan(sqrt(two)))*((one)*(((d_x_f0)/(x))-((arcsin(one))*((one)-((log(two))/((d_x_f0)+(((two)-(exp(tan(one))))-((two)*((one)-(two))))))))))'], [1.0067246983827975, '(tan(sqrt(two)))*(((two)+(two))*((two)**((arcsin(one))*((tanh(one))-((log(two))/((d_x_f0)+((two)**((one)*((one)-(two))))))))))'], [1.0068680589088257, '(sqrt(one))*((one)*((two)-((log(two))+((tanh(one))-((log(two))/(((one)**(one))+(((two)-(exp(tan(one))))-((f0)*((one)-(two))))))))))']]

time spent (in secs):52.44705510139465

---------------=============================----------------
iteration 25: we have seen 14298 different eqs
QD pool size: 980, newbins: 11 replacements: 142

new avg training reward: 1.003
best reward: 0.7585131084711113 with validation reward: 0.7585131084711113

best eq: (((x)/(sinh(one)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((arctan(tanh(x)))+((arctan(f0))*((x)-(d_x_f0)))))) (((x0)/(np.sinh(one)))+(d_x0_f0))/((np.arcsin(np.arcsin(x0)))*((np.tan(np.tanh(x0)))/((np.arctan(np.tanh(x0)))+((np.arctan(f0))*((x0)-(d_x0_f0)))))) []

and bests eqs by free parameter number are:
[[0.7587252909153304, '(((x)/(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((arctan(tanh(x)))+((arctan(f0))*((x)-(d_x_f0))))))'], [0.7585131084711113, '(((x)/(sinh(one)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((arctan(tanh(x)))+((arctan(f0))*((x)-(d_x_f0))))))'], [0.9692146250080026, '((((two)*(tanh(tanh(f0))))*(d_x_f0))-(f0))**(two)'], [0.9511047750155904, '((((one)*((f0)*(two)))*(d_x_f0))-(d_x_f0))**(two)'], [0.9343826156589241, '((cosh(tanh(two)))/((x)*(tanh((one)/(tanh(x))))))**((log((sinh(two))-(sinh(f0))))/((exp(f0))/((exp(arcsin(x)))-((log(exp(f0)))*(two)))))'], [0.9960761611826844, '((f0)+(((one)-(((one)**(one))/((two)/(d_x_f0))))-(x)))**(two)'], [0.9551013948213692, '(exp((one)/(tanh(x))))**(((arctan((x)+(((one)/((two)/(two)))-(f0))))*(two))-((f0)*(two)))'], [0.9914419560182599, '(((((one)-((((x)+(one))/((two)/(d_x_f0)))+(arctan(one))))*(arctan(one)))-(one))-((f0)/((f0)+(x))))**(two)'], [0.990085440661542, '((((one)*((((d_x_f0)/(two))+(x))/(two)))+(((one)/(one))/(((one)-(cos(x)))/((arctan(two))**(one)))))*(d_x_f0))+((x)**(x))'], [0.9921402793106009, '((((one)*((((d_x_f0)/(two))+(two))/(two)))+(((one)/(one))/(((one)-(cos(x)))/((arctan(log(two)))**(one)))))*(d_x_f0))+((x)**(f0))'], [0.9959695630007992, '((((cosh(cosh(two)))+((two)/(x)))*(two))-((one)-(two)))*((one)*((d_x_f0)+((arcsin(one))*((tanh(one))-((two)/(one))))))'], [1.0066821216383453, '(tan(sqrt(two)))*(((two)+(two))*((two)**((arcsin(one))*((one)-((log(two))/((d_x_f0)+((two)**((one)*((one)-(two))))))))))'], [1.0068680589088257, '(sqrt(one))*((one)*((two)-((log(two))+((tanh(one))-((log(two))/(((one)**(one))+(((two)-(exp(tan(one))))-((f0)*((one)-(two))))))))))']]

time spent (in secs):55.536184787750244

---------------=============================----------------
iteration 26: we have seen 15174 different eqs
QD pool size: 985, newbins: 5 replacements: 150

new avg training reward: 1.002
best reward: 0.7578345241920617 with validation reward: 0.7578345241920617

best eq: (((x)/(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/(((cos(f0))/((one)**(d_x_f0)))+((arctan(f0))*((x)-(d_x_f0)))))) (((x0)/(np.sinh(x0)))+(d_x0_f0))/((np.arcsin(np.arcsin(x0)))*((np.tan(np.tanh(x0)))/(((np.cos(f0))/((one)**(d_x0_f0)))+((np.arctan(f0))*((x0)-(d_x0_f0)))))) []

and bests eqs by free parameter number are:
[[0.7585241404102964, '(((x)/(sinh(cos(x))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((arctan(tanh(x)))+((arctan(f0))*((x)-(d_x_f0))))))'], [0.7578345241920617, '(((x)/(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/(((cos(f0))/((one)**(d_x_f0)))+((arctan(f0))*((x)-(d_x_f0))))))'], [0.9544484320339134, '((((x)*((f0)*(two)))*(d_x_f0))-(d_x_f0))**(two)'], [0.9511047750155904, '((((one)*((f0)*(two)))*(d_x_f0))-(d_x_f0))**(two)'], [0.9343826156589241, '((cosh(tanh(two)))/((x)*(tanh((one)/(tanh(x))))))**((log((sinh(two))-(sinh(f0))))/((exp(f0))/((exp(arcsin(x)))-((log(exp(f0)))*(two)))))'], [0.9960761611826844, '((f0)+(((one)-(((one)**(one))/((two)/(d_x_f0))))-(x)))**(two)'], [0.9551013948213692, '(exp((one)/(tanh(x))))**(((arctan((x)+(((one)/((two)/(two)))-(f0))))*(two))-((f0)*(two)))'], [0.9914419560182599, '(((((one)-((((x)+(one))/((two)/(d_x_f0)))+(arctan(one))))*(arctan(one)))-(one))-((f0)/((f0)+(x))))**(two)'], [0.9882458328034496, '((((one)*((((d_x_f0)/(two))+(x))/(one)))+(((one)/(one))/(((one)-(cos(x)))/((arctan(two))**(one)))))*(d_x_f0))+((x)**(x))'], [0.9921402793106009, '((((one)*((((d_x_f0)/(two))+(two))/(two)))+(((one)/(one))/(((one)-(cos(x)))/((arctan(log(two)))**(one)))))*(d_x_f0))+((x)**(f0))'], [0.9959695630007992, '((((cosh(cosh(two)))+((two)/(x)))*(two))-((one)-(two)))*((one)*((d_x_f0)+((arcsin(one))*((tanh(one))-((two)/(one))))))'], [1.0066821216383453, '(tan(sqrt(two)))*(((two)+(two))*((two)**((arcsin(one))*((one)-((log(two))/((d_x_f0)+((two)**((one)*((one)-(two))))))))))'], [1.0068680589088257, '(sqrt(one))*((one)*((two)-((log(two))+((tanh(one))-((log(two))/(((one)**(one))+(((two)-(exp(tan(one))))-((f0)*((one)-(two))))))))))']]

time spent (in secs):58.898951292037964

---------------=============================----------------
iteration 27: we have seen 16052 different eqs
QD pool size: 997, newbins: 12 replacements: 142

new avg training reward: 1.002
best reward: 0.7578345241920617 with validation reward: 0.7578345241920617

best eq: (((x)/(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/(((cos(f0))/((one)**(d_x_f0)))+((arctan(f0))*((x)-(d_x_f0)))))) (((x0)/(np.sinh(x0)))+(d_x0_f0))/((np.arcsin(np.arcsin(x0)))*((np.tan(np.tanh(x0)))/(((np.cos(f0))/((one)**(d_x0_f0)))+((np.arctan(f0))*((x0)-(d_x0_f0)))))) []

and bests eqs by free parameter number are:
[[0.7585241404102964, '(((x)/(sinh(cos(x))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((arctan(tanh(x)))+((arctan(f0))*((x)-(d_x_f0))))))'], [0.7578345241920617, '(((x)/(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/(((cos(f0))/((one)**(d_x_f0)))+((arctan(f0))*((x)-(d_x_f0))))))'], [0.9544484320339134, '((((x)*((f0)*(two)))*(d_x_f0))-(d_x_f0))**(two)'], [0.9511047750155904, '((((one)*((f0)*(two)))*(d_x_f0))-(d_x_f0))**(two)'], [0.9343826156589241, '((cosh(tanh(two)))/((x)*(tanh((one)/(tanh(x))))))**((log((sinh(two))-(sinh(f0))))/((exp(f0))/((exp(arcsin(x)))-((log(exp(f0)))*(two)))))'], [0.9938232468189409, '((((((one)*(((one)*(two))/(two)))+(x))*(x))*(d_x_f0))-(x))**(two)'], [0.9551013948213692, '(exp((one)/(tanh(x))))**(((arctan((x)+(((one)/((two)/(two)))-(f0))))*(two))-((f0)*(two)))'], [0.9688572288862253, '(((((one)/(((sqrt(one))/((d_x_f0)+(f0)))/((two)+(log(two)))))*(f0))-(one))-((exp(cosh(two)))+(x)))**(two)'], [0.9882458328034496, '((((one)*((((d_x_f0)/(two))+(x))/(one)))+(((one)/(one))/(((one)-(cos(x)))/((arctan(two))**(one)))))*(d_x_f0))+((x)**(x))'], [0.9912349166163195, '((((one)/(((sqrt(one))+((two)+(sinh(exp(d_x_f0)))))/((one)+(log(one)))))-(one))-((f0)*((cos(two))-((d_x_f0)+(one)))))**(two)'], [0.9936390237985666, '((((one)*((((d_x_f0)/(two))+(two))/(two)))+(((one)/(one))/(((one)-(cos(cos(one))))/((arctan(log(two)))**(one)))))*(d_x_f0))+((x)**(x))'], [1.0066821216383453, '(tan(sqrt(two)))*(((two)+(two))*((two)**((arcsin(one))*((one)-((log(two))/((d_x_f0)+((two)**((one)*((one)-(two))))))))))'], [1.0068680589088257, '(sqrt(one))*((one)*((two)-((log(two))+((tanh(one))-((log(two))/(((one)**(one))+(((two)-(exp(tan(one))))-((f0)*((one)-(two))))))))))']]

time spent (in secs):62.50762104988098

---------------=============================----------------
iteration 28: we have seen 16938 different eqs
QD pool size: 1010, newbins: 13 replacements: 135

new avg training reward: 1.002
best reward: 0.7578345241920617 with validation reward: 0.7578345241920617

best eq: (((x)/(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/(((cos(f0))/((one)**(d_x_f0)))+((arctan(f0))*((x)-(d_x_f0)))))) (((x0)/(np.sinh(x0)))+(d_x0_f0))/((np.arcsin(np.arcsin(x0)))*((np.tan(np.tanh(x0)))/(((np.cos(f0))/((one)**(d_x0_f0)))+((np.arctan(f0))*((x0)-(d_x0_f0)))))) []

and bests eqs by free parameter number are:
[[0.7585241404102964, '(((x)/(sinh(cos(x))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((arctan(tanh(x)))+((arctan(f0))*((x)-(d_x_f0))))))'], [0.7578345241920617, '(((x)/(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/(((cos(f0))/((one)**(d_x_f0)))+((arctan(f0))*((x)-(d_x_f0))))))'], [0.7637719312990203, '(((x)/(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/(((tan(two))/((one)**(d_x_f0)))+((arctan(f0))*((x)-(d_x_f0))))))'], [0.9511047750155904, '((((one)*((f0)*(two)))*(d_x_f0))-(d_x_f0))**(two)'], [0.9343826156589241, '((cosh(tanh(two)))/((x)*(tanh((one)/(tanh(x))))))**((log((sinh(two))-(sinh(f0))))/((exp(f0))/((exp(arcsin(x)))-((log(exp(f0)))*(two)))))'], [0.9470666239804247, '((x)+(((d_x_f0)/(((tanh(one))**((two)+(one)))/((f0)/(one))))-(f0)))**(two)'], [0.9551013948213692, '(exp((one)/(tanh(x))))**(((arctan((x)+(((one)/((two)/(two)))-(f0))))*(two))-((f0)*(two)))'], [0.9688572288862253, '(((((one)/(((sqrt(one))/((d_x_f0)+(f0)))/((two)+(log(two)))))*(f0))-(one))-((exp(cosh(two)))+(x)))**(two)'], [0.9882458328034496, '((((one)*((((d_x_f0)/(two))+(x))/(one)))+(((one)/(one))/(((one)-(cos(x)))/((arctan(two))**(one)))))*(d_x_f0))+((x)**(x))'], [0.9912349166163195, '((((one)/(((sqrt(one))+((two)+(sinh(exp(d_x_f0)))))/((one)+(log(one)))))-(one))-((f0)*((cos(two))-((d_x_f0)+(one)))))**(two)'], [0.9936390237985666, '((((one)*((((d_x_f0)/(two))+(two))/(two)))+(((one)/(one))/(((one)-(cos(cos(one))))/((arctan(log(two)))**(one)))))*(d_x_f0))+((x)**(x))'], [1.0066821216383453, '(tan(sqrt(two)))*(((two)+(two))*((two)**((arcsin(one))*((one)-((log(two))/((d_x_f0)+((two)**((one)*((one)-(two))))))))))'], [1.0068680589088257, '(sqrt(one))*((one)*((two)-((log(two))+((tanh(one))-((log(two))/(((one)**(one))+(((two)-(exp(tan(one))))-((f0)*((one)-(two))))))))))']]

time spent (in secs):65.60127997398376

---------------=============================----------------
iteration 29: we have seen 17812 different eqs
QD pool size: 1024, newbins: 14 replacements: 123

new avg training reward: 1.001
best reward: 0.7572362662044679 with validation reward: 0.7572362662044679

best eq: (((x)/(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((arctan(exp(two)))+((arctan(f0))*((x)-(d_x_f0)))))) (((x0)/(np.sinh(x0)))+(d_x0_f0))/((np.arcsin(np.arcsin(x0)))*((np.tan(np.tanh(x0)))/((np.arctan(np.exp(two)))+((np.arctan(f0))*((x0)-(d_x0_f0)))))) []

and bests eqs by free parameter number are:
[[0.7585241404102964, '(((x)/(sinh(cos(x))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((arctan(tanh(x)))+((arctan(f0))*((x)-(d_x_f0))))))'], [0.7572362662044679, '(((x)/(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((arctan(exp(two)))+((arctan(f0))*((x)-(d_x_f0))))))'], [0.7637719312990203, '(((x)/(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/(((tan(two))/((one)**(d_x_f0)))+((arctan(f0))*((x)-(d_x_f0))))))'], [0.9511047750155904, '((((one)*((f0)*(two)))*(d_x_f0))-(d_x_f0))**(two)'], [0.9343826156589241, '((cosh(tanh(two)))/((x)*(tanh((one)/(tanh(x))))))**((log((sinh(two))-(sinh(f0))))/((exp(f0))/((exp(arcsin(x)))-((log(exp(f0)))*(two)))))'], [0.9462020349774369, '(exp((one)/(tanh(x))))**(((arctan((x)+(((one)/((two)/((cos(x))+((cos(f0))-(f0)))))-(f0))))*(two))-((f0)*(two)))'], [0.9551013948213692, '(exp((one)/(tanh(x))))**(((arctan((x)+(((one)/((two)/(two)))-(f0))))*(two))-((f0)*(two)))'], [0.9688572288862253, '(((((one)/(((sqrt(one))/((d_x_f0)+(f0)))/((two)+(log(two)))))*(f0))-(one))-((exp(cosh(two)))+(x)))**(two)'], [0.9882458328034496, '((((one)*((((d_x_f0)/(two))+(x))/(one)))+(((one)/(one))/(((one)-(cos(x)))/((arctan(two))**(one)))))*(d_x_f0))+((x)**(x))'], [0.9912349166163195, '((((one)/(((sqrt(one))+((two)+(sinh(exp(d_x_f0)))))/((one)+(log(one)))))-(one))-((f0)*((cos(two))-((d_x_f0)+(one)))))**(two)'], [0.9936390237985666, '((((one)*((((d_x_f0)/(two))+(two))/(two)))+(((one)/(one))/(((one)-(cos(cos(one))))/((arctan(log(two)))**(one)))))*(d_x_f0))+((x)**(x))'], [1.0022150608684686, '((((cosh(cosh(two)))+((x)/(one)))**(two))-((one)-(two)))*((one)*((one)+(((two)/(two))*(((two)/(x))-((cosh(f0))/(one))))))'], [1.0068680589088257, '(sqrt(one))*((one)*((two)-((log(two))+((tanh(one))-((log(two))/(((one)**(one))+(((two)-(exp(tan(one))))-((f0)*((one)-(two))))))))))']]

time spent (in secs):68.74778723716736

---------------=============================----------------
iteration 30: we have seen 18723 different eqs
QD pool size: 1033, newbins: 9 replacements: 145

new avg training reward: 1.0
best reward: 0.7572362662044679 with validation reward: 0.7572362662044679

best eq: (((x)/(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((arctan(exp(two)))+((arctan(f0))*((x)-(d_x_f0)))))) (((x0)/(np.sinh(x0)))+(d_x0_f0))/((np.arcsin(np.arcsin(x0)))*((np.tan(np.tanh(x0)))/((np.arctan(np.exp(two)))+((np.arctan(f0))*((x0)-(d_x0_f0)))))) []

and bests eqs by free parameter number are:
[[0.7585241404102964, '(((x)/(sinh(cos(x))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((arctan(tanh(x)))+((arctan(f0))*((x)-(d_x_f0))))))'], [0.7572362662044679, '(((x)/(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((arctan(exp(two)))+((arctan(f0))*((x)-(d_x_f0))))))'], [0.7595452826208586, '(((x)/(sinh((one)-(cos(x)))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/(((cos(f0))/((one)**(d_x_f0)))+((arctan(f0))*((x)-(d_x_f0))))))'], [0.9351084270667765, '(((((tanh(sinh(two)))+(arctan(x)))*((tan(f0))*(tanh(tanh(two)))))*(d_x_f0))-(d_x_f0))**(two)'], [0.9343826156589241, '((cosh(tanh(two)))/((x)*(tanh((one)/(tanh(x))))))**((log((sinh(two))-(sinh(f0))))/((exp(f0))/((exp(arcsin(x)))-((log(exp(f0)))*(two)))))'], [0.9462020349774369, '(exp((one)/(tanh(x))))**(((arctan((x)+(((one)/((two)/((cos(x))+((cos(f0))-(f0)))))-(f0))))*(two))-((f0)*(two)))'], [0.9551013948213692, '(exp((one)/(tanh(x))))**(((arctan((x)+(((one)/((two)/(two)))-(f0))))*(two))-((f0)*(two)))'], [0.9688572288862253, '(((((one)/(((sqrt(one))/((d_x_f0)+(f0)))/((two)+(log(two)))))*(f0))-(one))-((exp(cosh(two)))+(x)))**(two)'], [0.9815738849492902, '((one)+(((one)/(((tanh(log((x)*(two))))/((two)+(one)))**((two)/(one))))-(f0)))**(two)'], [0.9911446339939062, '((((one)/(((sqrt(one))*((two)+(sinh(exp(d_x_f0)))))/((one)+(log(one)))))-(one))-((f0)*((cos(two))-((d_x_f0)+(one)))))**(two)'], [0.9936390237985666, '((((one)*((((d_x_f0)/(two))+(two))/(two)))+(((one)/(one))/(((one)-(cos(cos(one))))/((arctan(log(two)))**(one)))))*(d_x_f0))+((x)**(x))'], [1.0022150608684686, '((((cosh(cosh(two)))+((x)/(one)))**(two))-((one)-(two)))*((one)*((one)+(((two)/(two))*(((two)/(x))-((cosh(f0))/(one))))))'], [1.0068680589088257, '(sqrt(one))*((one)*((two)-((log(two))+((tanh(one))-((log(two))/(((one)**(one))+(((two)-(exp(tan(one))))-((f0)*((one)-(two))))))))))']]

time spent (in secs):71.89717221260071

---------------=============================----------------
iteration 31: we have seen 19638 different eqs
QD pool size: 1041, newbins: 8 replacements: 144

new avg training reward: 1.0
best reward: 0.7572362662044679 with validation reward: 0.7572362662044679

best eq: (((x)/(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((arctan(exp(two)))+((arctan(f0))*((x)-(d_x_f0)))))) (((x0)/(np.sinh(x0)))+(d_x0_f0))/((np.arcsin(np.arcsin(x0)))*((np.tan(np.tanh(x0)))/((np.arctan(np.exp(two)))+((np.arctan(f0))*((x0)-(d_x0_f0)))))) []

and bests eqs by free parameter number are:
[[0.7585241404102964, '(((x)/(sinh(cos(x))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((arctan(tanh(x)))+((arctan(f0))*((x)-(d_x_f0))))))'], [0.7572362662044679, '(((x)/(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((arctan(exp(two)))+((arctan(f0))*((x)-(d_x_f0))))))'], [0.7595452826208586, '(((x)/(sinh((one)-(cos(x)))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/(((cos(f0))/((one)**(d_x_f0)))+((arctan(f0))*((x)-(d_x_f0))))))'], [0.9021309497820059, '(exp((cosh(x))/(tanh(x))))**(((arctan(two))*(two))-((f0)*(two)))'], [0.9343826156589241, '((cosh(tanh(two)))/((x)*(tanh((one)/(tanh(x))))))**((log((sinh(two))-(sinh(f0))))/((exp(f0))/((exp(arcsin(x)))-((log(exp(f0)))*(two)))))'], [0.9341731946691172, '(((((two)+(arctan(two)))*((tan(f0))*(tanh(tanh(two)))))*(d_x_f0))-(one))**(two)'], [0.9551013948213692, '(exp((one)/(tanh(x))))**(((arctan((x)+(((one)/((two)/(two)))-(f0))))*(two))-((f0)*(two)))'], [0.9688572288862253, '(((((one)/(((sqrt(one))/((d_x_f0)+(f0)))/((two)+(log(two)))))*(f0))-(one))-((exp(cosh(two)))+(x)))**(two)'], [0.9815738849492902, '((one)+(((one)/(((tanh(log((x)*(two))))/((two)+(one)))**((two)/(one))))-(f0)))**(two)'], [0.9911446339939062, '((((one)/(((sqrt(one))*((two)+(sinh(exp(d_x_f0)))))/((one)+(log(one)))))-(one))-((f0)*((cos(two))-((d_x_f0)+(one)))))**(two)'], [0.9936390237985666, '((((one)*((((d_x_f0)/(two))+(two))/(two)))+(((one)/(one))/(((one)-(cos(cos(one))))/((arctan(log(two)))**(one)))))*(d_x_f0))+((x)**(x))'], [1.0022150608684686, '((((cosh(cosh(two)))+((x)/(one)))**(two))-((one)-(two)))*((one)*((one)+(((two)/(two))*(((two)/(x))-((cosh(f0))/(one))))))'], [1.0068529753084523, '(((two)/(((sqrt(one))/((two)+(two)))/(((one)/((one)*(x)))**(log(one)))))-(two))+((one)/(((x)-(exp(two)))/((log(two))**(one))))']]

time spent (in secs):75.09809851646423

---------------=============================----------------
iteration 32: we have seen 20571 different eqs
QD pool size: 1051, newbins: 10 replacements: 145

new avg training reward: 0.999
best reward: 0.7572362662044679 with validation reward: 0.7572362662044679

best eq: (((x)/(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((arctan(exp(two)))+((arctan(f0))*((x)-(d_x_f0)))))) (((x0)/(np.sinh(x0)))+(d_x0_f0))/((np.arcsin(np.arcsin(x0)))*((np.tan(np.tanh(x0)))/((np.arctan(np.exp(two)))+((np.arctan(f0))*((x0)-(d_x0_f0)))))) []

and bests eqs by free parameter number are:
[[0.7585241404102964, '(((x)/(sinh(cos(x))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((arctan(tanh(x)))+((arctan(f0))*((x)-(d_x_f0))))))'], [0.7572362662044679, '(((x)/(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((arctan(exp(two)))+((arctan(f0))*((x)-(d_x_f0))))))'], [0.7595452826208586, '(((x)/(sinh((one)-(cos(x)))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/(((cos(f0))/((one)**(d_x_f0)))+((arctan(f0))*((x)-(d_x_f0))))))'], [0.7637786795661905, '(((one)**(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/(((tan(two))/((one)**(d_x_f0)))+((arctan(f0))*((x)-(d_x_f0))))))'], [0.9343826156589241, '((cosh(tanh(two)))/((x)*(tanh((one)/(tanh(x))))))**((log((sinh(two))-(sinh(f0))))/((exp(f0))/((exp(arcsin(x)))-((log(exp(f0)))*(two)))))'], [0.896659407779015, '(exp((one)/(tanh(x))))**(((arctan((x)+(((d_x_f0)+(one))*(two))))*(two))-((f0)*(two)))'], [0.930053409045063, '(exp((one)/(tanh(x))))**(((arctan((x)+(((one)/((two)/(exp((f0)/(one)))))**(f0))))*(two))-((f0)*(two)))'], [0.9688572288862253, '(((((one)/(((sqrt(one))/((d_x_f0)+(f0)))/((two)+(log(two)))))*(f0))-(one))-((exp(cosh(two)))+(x)))**(two)'], [0.9814590806553033, '((one)+(((one)/(((arctan(log((x)*(two))))/((two)+(one)))**((two)/(one))))-(f0)))**(two)'], [0.9911446339939062, '((((one)/(((sqrt(one))*((two)+(sinh(exp(d_x_f0)))))/((one)+(log(one)))))-(one))-((f0)*((cos(two))-((d_x_f0)+(one)))))**(two)'], [0.9936390237985666, '((((one)*((((d_x_f0)/(two))+(two))/(two)))+(((one)/(one))/(((one)-(cos(cos(one))))/((arctan(log(two)))**(one)))))*(d_x_f0))+((x)**(x))'], [1.0022150608684686, '((((cosh(cosh(two)))+((x)/(one)))**(two))-((one)-(two)))*((one)*((one)+(((two)/(two))*(((two)/(x))-((cosh(f0))/(one))))))'], [1.0068529753084523, '(((two)/(((sqrt(one))/((two)+(two)))/(((one)/((one)*(x)))**(log(one)))))-(two))+((one)/(((x)-(exp(two)))/((log(two))**(one))))']]

time spent (in secs):78.50515460968018

---------------=============================----------------
iteration 33: we have seen 21503 different eqs
QD pool size: 1062, newbins: 11 replacements: 125

new avg training reward: 0.999
best reward: 0.7572362662044679 with validation reward: 0.7572362662044679

best eq: (((x)/(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((arctan(exp(two)))+((arctan(f0))*((x)-(d_x_f0)))))) (((x0)/(np.sinh(x0)))+(d_x0_f0))/((np.arcsin(np.arcsin(x0)))*((np.tan(np.tanh(x0)))/((np.arctan(np.exp(two)))+((np.arctan(f0))*((x0)-(d_x0_f0)))))) []

and bests eqs by free parameter number are:
[[0.7585241404102964, '(((x)/(sinh(cos(x))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((arctan(tanh(x)))+((arctan(f0))*((x)-(d_x_f0))))))'], [0.7572362662044679, '(((x)/(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((arctan(exp(two)))+((arctan(f0))*((x)-(d_x_f0))))))'], [0.7595452826208586, '(((x)/(sinh((one)-(cos(x)))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/(((cos(f0))/((one)**(d_x_f0)))+((arctan(f0))*((x)-(d_x_f0))))))'], [0.7587072711911128, '(((x)/((two)/((tan(two))**(two))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((arctan(tanh(x)))+((arctan(f0))*((x)-(d_x_f0))))))'], [0.9343826156589241, '((cosh(tanh(two)))/((x)*(tanh((one)/(tanh(x))))))**((log((sinh(two))-(sinh(f0))))/((exp(f0))/((exp(arcsin(x)))-((log(exp(f0)))*(two)))))'], [0.896659407779015, '(exp((one)/(tanh(x))))**(((arctan((x)+(((d_x_f0)+(one))*(two))))*(two))-((f0)*(two)))'], [0.8835537525147981, '(exp((one)/(tanh(x))))**(((arctan((d_x_f0)+(((one)/((two)/(two)))-(f0))))*(two))-((f0)*(two)))'], [0.9688572288862253, '(((((one)/(((sqrt(one))/((d_x_f0)+(f0)))/((two)+(log(two)))))*(f0))-(one))-((exp(cosh(two)))+(x)))**(two)'], [0.9814590806553033, '((one)+(((one)/(((arctan(log((x)*(two))))/((two)+(one)))**((two)/(one))))-(f0)))**(two)'], [0.9911446339939062, '((((one)/(((sqrt(one))*((two)+(sinh(exp(d_x_f0)))))/((one)+(log(one)))))-(one))-((f0)*((cos(two))-((d_x_f0)+(one)))))**(two)'], [0.9936390237985666, '((((one)*((((d_x_f0)/(two))+(two))/(two)))+(((one)/(one))/(((one)-(cos(cos(one))))/((arctan(log(two)))**(one)))))*(d_x_f0))+((x)**(x))'], [1.0022150608684686, '((((cosh(cosh(two)))+((x)/(one)))**(two))-((one)-(two)))*((one)*((one)+(((two)/(two))*(((two)/(x))-((cosh(f0))/(one))))))'], [1.006746504575934, '((((one)/(((sqrt(one))+((two)+(sinh(exp(one)))))/((one)+(log(one)))))-(one))-((f0)*((cos(two))-(((cosh(two))+(one))+(one)))))**(two)']]

time spent (in secs):81.97325801849365

---------------=============================----------------
iteration 34: we have seen 22420 different eqs
QD pool size: 1070, newbins: 8 replacements: 142

new avg training reward: 0.998
best reward: 0.7546494335549073 with validation reward: 0.7546494335549073

best eq: (((x)/(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((arctan(x))+((f0)*((x)-(d_x_f0)))))) (((x0)/(np.sinh(x0)))+(d_x0_f0))/((np.arcsin(np.arcsin(x0)))*((np.tan(np.tanh(x0)))/((np.arctan(x0))+((f0)*((x0)-(d_x0_f0)))))) []

and bests eqs by free parameter number are:
[[0.7546494335549073, '(((x)/(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((arctan(x))+((f0)*((x)-(d_x_f0))))))'], [0.7572362662044679, '(((x)/(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((arctan(exp(two)))+((arctan(f0))*((x)-(d_x_f0))))))'], [0.7595452826208586, '(((x)/(sinh((one)-(cos(x)))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/(((cos(f0))/((one)**(d_x_f0)))+((arctan(f0))*((x)-(d_x_f0))))))'], [0.7587072711911128, '(((x)/((two)/((tan(two))**(two))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((arctan(tanh(x)))+((arctan(f0))*((x)-(d_x_f0))))))'], [0.9343826156589241, '((cosh(tanh(two)))/((x)*(tanh((one)/(tanh(x))))))**((log((sinh(two))-(sinh(f0))))/((exp(f0))/((exp(arcsin(x)))-((log(exp(f0)))*(two)))))'], [0.896659407779015, '(exp((one)/(tanh(x))))**(((arctan((x)+(((d_x_f0)+(one))*(two))))*(two))-((f0)*(two)))'], [0.8835537525147981, '(exp((one)/(tanh(x))))**(((arctan((d_x_f0)+(((one)/((two)/(two)))-(f0))))*(two))-((f0)*(two)))'], [0.9688572288862253, '(((((one)/(((sqrt(one))/((d_x_f0)+(f0)))/((two)+(log(two)))))*(f0))-(one))-((exp(cosh(two)))+(x)))**(two)'], [0.9814590806553033, '((one)+(((one)/(((arctan(log((x)*(two))))/((two)+(one)))**((two)/(one))))-(f0)))**(two)'], [0.9911169205792281, '((((one)*((((d_x_f0)/(two))*(two))/(two)))+(((one)/(one))/(((one)-(cos(x)))/((arctan(log(two)))**(one)))))*(d_x_f0))+((x)**(f0))'], [0.9936390237985666, '((((one)*((((d_x_f0)/(two))+(two))/(two)))+(((one)/(one))/(((one)-(cos(cos(one))))/((arctan(log(two)))**(one)))))*(d_x_f0))+((x)**(x))'], [0.9914157458441882, '((((one)/(((sqrt(one))*((two)+((two)*(two))))/((one)+(log(one)))))-(one))-((f0)*((cos(two))-((d_x_f0)+(one)))))**(two)'], [1.006746504575934, '((((one)/(((sqrt(one))+((two)+(sinh(exp(one)))))/((one)+(log(one)))))-(one))-((f0)*((cos(two))-(((cosh(two))+(one))+(one)))))**(two)']]

time spent (in secs):85.98233342170715

---------------=============================----------------
iteration 35: we have seen 23365 different eqs
QD pool size: 1075, newbins: 5 replacements: 128

new avg training reward: 0.997
best reward: 0.7546494335549073 with validation reward: 0.7546494335549073

best eq: (((x)/(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((arctan(x))+((f0)*((x)-(d_x_f0)))))) (((x0)/(np.sinh(x0)))+(d_x0_f0))/((np.arcsin(np.arcsin(x0)))*((np.tan(np.tanh(x0)))/((np.arctan(x0))+((f0)*((x0)-(d_x0_f0)))))) []

and bests eqs by free parameter number are:
[[0.7546494335549073, '(((x)/(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((arctan(x))+((f0)*((x)-(d_x_f0))))))'], [0.7571081352390038, '(((x)**(f0))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((arctan(exp(two)))+((arctan(f0))*((x)-(d_x_f0))))))'], [0.7595452826208586, '(((x)/(sinh((one)-(cos(x)))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/(((cos(f0))/((one)**(d_x_f0)))+((arctan(f0))*((x)-(d_x_f0))))))'], [0.7567317479520564, '(((one)**(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/(((exp(two))/((one)**(d_x_f0)))+((arctan(f0))*((x)-(d_x_f0))))))'], [0.897494824020798, '(exp((one)/(tanh(x))))**(((arctan((x)+((two)-(f0))))*(two))-((f0)*(two)))'], [0.896659407779015, '(exp((one)/(tanh(x))))**(((arctan((x)+(((d_x_f0)+(one))*(two))))*(two))-((f0)*(two)))'], [0.8835537525147981, '(exp((one)/(tanh(x))))**(((arctan((d_x_f0)+(((one)/((two)/(two)))-(f0))))*(two))-((f0)*(two)))'], [0.9688572288862253, '(((((one)/(((sqrt(one))/((d_x_f0)+(f0)))/((two)+(log(two)))))*(f0))-(one))-((exp(cosh(two)))+(x)))**(two)'], [0.9814590806553033, '((one)+(((one)/(((arctan(log((x)*(two))))/((two)+(one)))**((two)/(one))))-(f0)))**(two)'], [0.9911169205792281, '((((one)*((((d_x_f0)/(two))*(two))/(two)))+(((one)/(one))/(((one)-(cos(x)))/((arctan(log(two)))**(one)))))*(d_x_f0))+((x)**(f0))'], [0.9936390237985666, '((((one)*((((d_x_f0)/(two))+(two))/(two)))+(((one)/(one))/(((one)-(cos(cos(one))))/((arctan(log(two)))**(one)))))*(d_x_f0))+((x)**(x))'], [0.9914157458441882, '((((one)/(((sqrt(one))*((two)+((two)*(two))))/((one)+(log(one)))))-(one))-((f0)*((cos(two))-((d_x_f0)+(one)))))**(two)'], [1.006746504575934, '((((one)/(((sqrt(one))+((two)+(sinh(exp(one)))))/((one)+(log(one)))))-(one))-((f0)*((cos(two))-(((cosh(two))+(one))+(one)))))**(two)']]

time spent (in secs):89.45408630371094

---------------=============================----------------
iteration 36: we have seen 24297 different eqs
QD pool size: 1084, newbins: 9 replacements: 132

new avg training reward: 0.996
best reward: 0.7546494335549073 with validation reward: 0.7546494335549073

best eq: (((x)/(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((arctan(x))+((f0)*((x)-(d_x_f0)))))) (((x0)/(np.sinh(x0)))+(d_x0_f0))/((np.arcsin(np.arcsin(x0)))*((np.tan(np.tanh(x0)))/((np.arctan(x0))+((f0)*((x0)-(d_x0_f0)))))) []

and bests eqs by free parameter number are:
[[0.7546494335549073, '(((x)/(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((arctan(x))+((f0)*((x)-(d_x_f0))))))'], [0.7571081352390038, '(((x)**(f0))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((arctan(exp(two)))+((arctan(f0))*((x)-(d_x_f0))))))'], [0.7592589422980491, '(((x)/(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((x)/(((tan(two))/((one)-(d_x_f0)))+((arctan(f0))*((x)-(d_x_f0))))))'], [0.7567317479520564, '(((one)**(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/(((exp(two))/((one)**(d_x_f0)))+((arctan(f0))*((x)-(d_x_f0))))))'], [0.897494824020798, '(exp((one)/(tanh(x))))**(((arctan((x)+((two)-(f0))))*(two))-((f0)*(two)))'], [0.896659407779015, '(exp((one)/(tanh(x))))**(((arctan((x)+(((d_x_f0)+(one))*(two))))*(two))-((f0)*(two)))'], [0.8835537525147981, '(exp((one)/(tanh(x))))**(((arctan((d_x_f0)+(((one)/((two)/(two)))-(f0))))*(two))-((f0)*(two)))'], [0.9688572288862253, '(((((one)/(((sqrt(one))/((d_x_f0)+(f0)))/((two)+(log(two)))))*(f0))-(one))-((exp(cosh(two)))+(x)))**(two)'], [0.9814590806553033, '((one)+(((one)/(((arctan(log((x)*(two))))/((two)+(one)))**((two)/(one))))-(f0)))**(two)'], [0.9559420047931143, '((((one)*((f0)*(two)))*(d_x_f0))-((x)/(((one)/(((sqrt(one))/((two)*(arctan(x))))/((two)+(log(one)))))-(two))))**(two)'], [0.9936390237985666, '((((one)*((((d_x_f0)/(two))+(two))/(two)))+(((one)/(one))/(((one)-(cos(cos(one))))/((arctan(log(two)))**(one)))))*(d_x_f0))+((x)**(x))'], [0.9914157458441882, '((((one)/(((sqrt(one))*((two)+((two)*(two))))/((one)+(log(one)))))-(one))-((f0)*((cos(two))-((d_x_f0)+(one)))))**(two)'], [1.006746504575934, '((((one)/(((sqrt(one))+((two)+(sinh(exp(one)))))/((one)+(log(one)))))-(one))-((f0)*((cos(two))-(((cosh(two))+(one))+(one)))))**(two)']]

time spent (in secs):92.96496844291687

---------------=============================----------------
iteration 37: we have seen 25253 different eqs
QD pool size: 1088, newbins: 4 replacements: 124

new avg training reward: 0.996
best reward: 0.7546494335549073 with validation reward: 0.7546494335549073

best eq: (((x)/(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((arctan(x))+((f0)*((x)-(d_x_f0)))))) (((x0)/(np.sinh(x0)))+(d_x0_f0))/((np.arcsin(np.arcsin(x0)))*((np.tan(np.tanh(x0)))/((np.arctan(x0))+((f0)*((x0)-(d_x0_f0)))))) []

and bests eqs by free parameter number are:
[[0.7546494335549073, '(((x)/(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((arctan(x))+((f0)*((x)-(d_x_f0))))))'], [0.7571081352390038, '(((x)**(f0))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((arctan(exp(two)))+((arctan(f0))*((x)-(d_x_f0))))))'], [0.7592589422980491, '(((x)/(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((x)/(((tan(two))/((one)-(d_x_f0)))+((arctan(f0))*((x)-(d_x_f0))))))'], [0.7567317479520564, '(((one)**(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/(((exp(two))/((one)**(d_x_f0)))+((arctan(f0))*((x)-(d_x_f0))))))'], [0.76383198083426, '(((x)**(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/(((tan(two))/((one)**(d_x_f0)))+((arctan(f0))*(((two)+(tan(two)))-(d_x_f0))))))'], [0.896659407779015, '(exp((one)/(tanh(x))))**(((arctan((x)+(((d_x_f0)+(one))*(two))))*(two))-((f0)*(two)))'], [0.8835537525147981, '(exp((one)/(tanh(x))))**(((arctan((d_x_f0)+(((one)/((two)/(two)))-(f0))))*(two))-((f0)*(two)))'], [0.9688572288862253, '(((((one)/(((sqrt(one))/((d_x_f0)+(f0)))/((two)+(log(two)))))*(f0))-(one))-((exp(cosh(two)))+(x)))**(two)'], [0.9814590806553033, '((one)+(((one)/(((arctan(log((x)*(two))))/((two)+(one)))**((two)/(one))))-(f0)))**(two)'], [0.9559420047931143, '((((one)*((f0)*(two)))*(d_x_f0))-((x)/(((one)/(((sqrt(one))/((two)*(arctan(x))))/((two)+(log(one)))))-(two))))**(two)'], [0.9936390237985666, '((((one)*((((d_x_f0)/(two))+(two))/(two)))+(((one)/(one))/(((one)-(cos(cos(one))))/((arctan(log(two)))**(one)))))*(d_x_f0))+((x)**(x))'], [0.9914145251900698, '((((one)/(((sqrt(one))-((two)+((cos(one))*(two))))/((one)+(log(one)))))-(one))-((f0)*((cos(two))-((d_x_f0)+(one)))))**(two)'], [1.006746504575934, '((((one)/(((sqrt(one))+((two)+(sinh(exp(one)))))/((one)+(log(one)))))-(one))-((f0)*((cos(two))-(((cosh(two))+(one))+(one)))))**(two)']]

time spent (in secs):96.42068815231323

---------------=============================----------------
iteration 38: we have seen 26213 different eqs
QD pool size: 1091, newbins: 3 replacements: 124

new avg training reward: 0.995
best reward: 0.7542929221544648 with validation reward: 0.7542929221544648

best eq: (((x)/(sinh(exp(two))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((arctan(x))+((f0)*((x)-(d_x_f0)))))) (((x0)/(np.sinh(np.exp(two))))+(d_x0_f0))/((np.arcsin(np.arcsin(x0)))*((np.tan(np.tanh(x0)))/((np.arctan(x0))+((f0)*((x0)-(d_x0_f0)))))) []

and bests eqs by free parameter number are:
[[0.7546494335549073, '(((x)/(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((arctan(x))+((f0)*((x)-(d_x_f0))))))'], [0.7542929221544648, '(((x)/(sinh(exp(two))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((arctan(x))+((f0)*((x)-(d_x_f0))))))'], [0.7575191101240509, '(((two)**(f0))+(d_x_f0))/((arcsin(arcsin(x)))*((tanh(x))/((arctan(exp(two)))+((arctan(f0))*((x)-(d_x_f0))))))'], [0.7567317479520564, '(((one)**(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/(((exp(two))/((one)**(d_x_f0)))+((arctan(f0))*((x)-(d_x_f0))))))'], [0.7565325404091799, '(((x)**(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/(((arctan(two))*(two))+((arctan(f0))*(((two)+(tan(two)))-(d_x_f0))))))'], [0.76383198083426, '(((x)**(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/(((tan(two))/((one)**(one)))+((arctan(f0))*(((two)+(tan(two)))-(d_x_f0))))))'], [0.8835537525147981, '(exp((one)/(tanh(x))))**(((arctan((d_x_f0)+(((one)/((two)/(two)))-(f0))))*(two))-((f0)*(two)))'], [0.9403449323220026, '(((((one)/(((sqrt(tanh((one)/(x))))/((d_x_f0)+(f0)))/((two)+(log(two)))))*(f0))-(two))-((exp(two))+(x)))**(two)'], [0.9559941088053975, '((((one)*((f0)*(two)))*(d_x_f0))-((x)/(((one)/(((sqrt(one))/((tanh(x))*(arctan(x))))/((two)+(log(one)))))-(two))))**(two)'], [0.9559420047931143, '((((one)*((f0)*(two)))*(d_x_f0))-((x)/(((one)/(((sqrt(one))/((two)*(arctan(x))))/((two)+(log(one)))))-(two))))**(two)'], [0.9735730589848303, '((((one)*((f0)*(two)))*(d_x_f0))-((exp(cosh(two)))/(((one)/(((sqrt(one))/((two)*(arctan(x))))/((two)+(log(one)))))-(two))))**(two)'], [0.9914096076160589, '((((one)/(((cosh(two))-((two)+((cos(one))*(two))))/((one)+(tanh(one)))))-(one))-((f0)*((cos(two))-((d_x_f0)+(one)))))**(two)'], [1.006746504575934, '((((one)/(((sqrt(one))+((two)+(sinh(exp(one)))))/((one)+(log(one)))))-(one))-((f0)*((cos(two))-(((cosh(two))+(one))+(one)))))**(two)']]

time spent (in secs):99.99528527259827

---------------=============================----------------
iteration 39: we have seen 27162 different eqs
QD pool size: 1099, newbins: 8 replacements: 116

new avg training reward: 0.994
best reward: 0.7542929221544648 with validation reward: 0.7542929221544648

best eq: (((x)/(sinh(exp(two))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((arctan(x))+((f0)*((x)-(d_x_f0)))))) (((x0)/(np.sinh(np.exp(two))))+(d_x0_f0))/((np.arcsin(np.arcsin(x0)))*((np.tan(np.tanh(x0)))/((np.arctan(x0))+((f0)*((x0)-(d_x0_f0)))))) []

and bests eqs by free parameter number are:
[[0.7546494335549073, '(((x)/(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((arctan(x))+((f0)*((x)-(d_x_f0))))))'], [0.7542929221544648, '(((x)/(sinh(exp(two))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((arctan(x))+((f0)*((x)-(d_x_f0))))))'], [0.7575191101240509, '(((two)**(f0))+(d_x_f0))/((arcsin(arcsin(x)))*((tanh(x))/((arctan(exp(two)))+((arctan(f0))*((x)-(d_x_f0))))))'], [0.7567317479520564, '(((one)**(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/(((exp(two))/((one)**(d_x_f0)))+((arctan(f0))*((x)-(d_x_f0))))))'], [0.7565325404091799, '(((x)**(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/(((arctan(two))*(two))+((arctan(f0))*(((two)+(tan(two)))-(d_x_f0))))))'], [0.76383198083426, '(((x)**(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/(((tan(two))/((one)**(one)))+((arctan(f0))*(((two)+(tan(two)))-(d_x_f0))))))'], [0.8552813651076367, '(exp((one)/(tanh(x))))**(((arctan((x)+(((one)/((two)/(((sinh(two))-(sinh(f0)))+((cosh(f0))-(f0)))))-(f0))))*(two))-((f0)*(two)))'], [0.9403449323220026, '(((((one)/(((sqrt(tanh((one)/(x))))/((d_x_f0)+(f0)))/((two)+(log(two)))))*(f0))-(two))-((exp(two))+(x)))**(two)'], [0.9559941088053975, '((((one)*((f0)*(two)))*(d_x_f0))-((x)/(((one)/(((sqrt(one))/((tanh(x))*(arctan(x))))/((two)+(log(one)))))-(two))))**(two)'], [0.9559420047931143, '((((one)*((f0)*(two)))*(d_x_f0))-((x)/(((one)/(((sqrt(one))/((two)*(arctan(x))))/((two)+(log(one)))))-(two))))**(two)'], [0.9735730589848303, '((((one)*((f0)*(two)))*(d_x_f0))-((exp(cosh(two)))/(((one)/(((sqrt(one))/((two)*(arctan(x))))/((two)+(log(one)))))-(two))))**(two)'], [0.9914096076160589, '((((one)/(((cosh(two))-((two)+((cos(one))*(two))))/((one)+(tanh(one)))))-(one))-((f0)*((cos(two))-((d_x_f0)+(one)))))**(two)'], [1.006746504575934, '((((one)/(((sqrt(one))+((two)+(sinh(exp(one)))))/((one)+(log(one)))))-(one))-((f0)*((cos(two))-(((cosh(two))+(one))+(one)))))**(two)']]

time spent (in secs):103.62556004524231

---------------=============================----------------
iteration 40: we have seen 28129 different eqs
QD pool size: 1104, newbins: 5 replacements: 119

new avg training reward: 0.993
best reward: 0.7542929221544648 with validation reward: 0.7542929221544648

best eq: (((x)/(sinh(exp(two))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((arctan(x))+((f0)*((x)-(d_x_f0)))))) (((x0)/(np.sinh(np.exp(two))))+(d_x0_f0))/((np.arcsin(np.arcsin(x0)))*((np.tan(np.tanh(x0)))/((np.arctan(x0))+((f0)*((x0)-(d_x0_f0)))))) []

and bests eqs by free parameter number are:
[[0.7546494335549073, '(((x)/(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((arctan(x))+((f0)*((x)-(d_x_f0))))))'], [0.7542929221544648, '(((x)/(sinh(exp(two))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((arctan(x))+((f0)*((x)-(d_x_f0))))))'], [0.7575191101240509, '(((two)**(f0))+(d_x_f0))/((arcsin(arcsin(x)))*((tanh(x))/((arctan(exp(two)))+((arctan(f0))*((x)-(d_x_f0))))))'], [0.7567317479520564, '(((one)**(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/(((exp(two))/((one)**(d_x_f0)))+((arctan(f0))*((x)-(d_x_f0))))))'], [0.7565325404091799, '(((x)**(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/(((arctan(two))*(two))+((arctan(f0))*(((two)+(tan(two)))-(d_x_f0))))))'], [0.76383198083426, '(((x)**(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/(((tan(two))/((one)**(one)))+((arctan(f0))*(((two)+(tan(two)))-(d_x_f0))))))'], [0.8552813651076367, '(exp((one)/(tanh(x))))**(((arctan((x)+(((one)/((two)/(((sinh(two))-(sinh(f0)))+((cosh(f0))-(f0)))))-(f0))))*(two))-((f0)*(two)))'], [0.9403449323220026, '(((((one)/(((sqrt(tanh((one)/(x))))/((d_x_f0)+(f0)))/((two)+(log(two)))))*(f0))-(two))-((exp(two))+(x)))**(two)'], [0.9559941088053975, '((((one)*((f0)*(two)))*(d_x_f0))-((x)/(((one)/(((sqrt(one))/((tanh(x))*(arctan(x))))/((two)+(log(one)))))-(two))))**(two)'], [0.8834893922165282, '(exp((one)/(tanh(x))))**(((arctan((d_x_f0)+(((one)/((two)/(two)))-(((one)*((f0)*(two)))-(two)))))*(two))-((f0)*(two)))'], [0.9735730589848303, '((((one)*((f0)*(two)))*(d_x_f0))-((exp(cosh(two)))/(((one)/(((sqrt(one))/((two)*(arctan(x))))/((two)+(log(one)))))-(two))))**(two)'], [0.9914096076160589, '((((one)/(((cosh(two))-((two)+((cos(one))*(two))))/((one)+(tanh(one)))))-(one))-((f0)*((cos(two))-((d_x_f0)+(one)))))**(two)'], [1.006746504575934, '((((one)/(((sqrt(one))+((two)+(sinh(exp(one)))))/((one)+(log(one)))))-(one))-((f0)*((cos(two))-(((cosh(two))+(one))+(one)))))**(two)']]

time spent (in secs):107.28242421150208

---------------=============================----------------
iteration 41: we have seen 29095 different eqs
QD pool size: 1106, newbins: 2 replacements: 111

new avg training reward: 0.992
best reward: 0.7542929221544648 with validation reward: 0.7542929221544648

best eq: (((x)/(sinh(exp(two))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((arctan(x))+((f0)*((x)-(d_x_f0)))))) (((x0)/(np.sinh(np.exp(two))))+(d_x0_f0))/((np.arcsin(np.arcsin(x0)))*((np.tan(np.tanh(x0)))/((np.arctan(x0))+((f0)*((x0)-(d_x0_f0)))))) []

and bests eqs by free parameter number are:
[[0.7546494335549073, '(((x)/(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((arctan(x))+((f0)*((x)-(d_x_f0))))))'], [0.7542929221544648, '(((x)/(sinh(exp(two))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((arctan(x))+((f0)*((x)-(d_x_f0))))))'], [0.7575191101240509, '(((two)**(f0))+(d_x_f0))/((arcsin(arcsin(x)))*((tanh(x))/((arctan(exp(two)))+((arctan(f0))*((x)-(d_x_f0))))))'], [0.7567317479520564, '(((one)**(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/(((exp(two))/((one)**(d_x_f0)))+((arctan(f0))*((x)-(d_x_f0))))))'], [0.7565325404091799, '(((x)**(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/(((arctan(two))*(two))+((arctan(f0))*(((two)+(tan(two)))-(d_x_f0))))))'], [0.76383198083426, '(((x)**(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/(((tan(two))/((one)**(one)))+((arctan(f0))*(((two)+(tan(two)))-(d_x_f0))))))'], [0.8552813651076367, '(exp((one)/(tanh(x))))**(((arctan((x)+(((one)/((two)/(((sinh(two))-(sinh(f0)))+((cosh(f0))-(f0)))))-(f0))))*(two))-((f0)*(two)))'], [0.8472666460613255, '(exp((one)/(tanh(x))))**(((arctan((x)+(((one)/((two)/(((sinh(two))-(sinh(f0)))+((cosh(one))-(f0)))))-(f0))))*(two))-((f0)*(two)))'], [0.9559941088053975, '((((one)*((f0)*(two)))*(d_x_f0))-((x)/(((one)/(((sqrt(one))/((tanh(x))*(arctan(x))))/((two)+(log(one)))))-(two))))**(two)'], [0.8834893922165282, '(exp((one)/(tanh(x))))**(((arctan((d_x_f0)+(((one)/((two)/(two)))-(((one)*((f0)*(two)))-(two)))))*(two))-((f0)*(two)))'], [0.9735730589848303, '((((one)*((f0)*(two)))*(d_x_f0))-((exp(cosh(two)))/(((one)/(((sqrt(one))/((two)*(arctan(x))))/((two)+(log(one)))))-(two))))**(two)'], [0.9914096076160589, '((((one)/(((cosh(two))-((two)+((cos(one))*(two))))/((one)+(tanh(one)))))-(one))-((f0)*((cos(two))-((d_x_f0)+(one)))))**(two)'], [1.00244112019796, '((one)+(((one)+((one)+(((((sqrt(one))/((cos(two))**(one)))/(x))*(((two)**(two))*(two)))-(two))))-(one)))**(two)']]

time spent (in secs):110.90557503700256

---------------=============================----------------
iteration 42: we have seen 30069 different eqs
QD pool size: 1111, newbins: 5 replacements: 114

new avg training reward: 0.991
best reward: 0.7537063279022522 with validation reward: 0.7537063279022522

best eq: (((x)/(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(x))+((f0)*((x)-(d_x_f0)))))) (((x0)/(np.sinh(x0)))+(d_x0_f0))/((np.arcsin(np.arcsin(x0)))*((np.tan(np.tanh(x0)))/((np.cosh(x0))+((f0)*((x0)-(d_x0_f0)))))) []

and bests eqs by free parameter number are:
[[0.7537063279022522, '(((x)/(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(x))+((f0)*((x)-(d_x_f0))))))'], [0.7542929221544648, '(((x)/(sinh(exp(two))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((arctan(x))+((f0)*((x)-(d_x_f0))))))'], [0.7575191101240509, '(((two)**(f0))+(d_x_f0))/((arcsin(arcsin(x)))*((tanh(x))/((arctan(exp(two)))+((arctan(f0))*((x)-(d_x_f0))))))'], [0.7567317479520564, '(((one)**(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/(((exp(two))/((one)**(d_x_f0)))+((arctan(f0))*((x)-(d_x_f0))))))'], [0.7565325404091799, '(((x)**(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/(((arctan(two))*(two))+((arctan(f0))*(((two)+(tan(two)))-(d_x_f0))))))'], [0.76383198083426, '(((x)**(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/(((tan(two))/((one)**(one)))+((arctan(f0))*(((two)+(tan(two)))-(d_x_f0))))))'], [0.8336286282514453, '(exp((one)/(tanh(x))))**(((arctan((x)+(((one)+(one))*(two))))*(two))-((f0)*(two)))'], [0.8472666460613255, '(exp((one)/(tanh(x))))**(((arctan((x)+(((one)/((two)/(((sinh(two))-(sinh(f0)))+((cosh(one))-(f0)))))-(f0))))*(two))-((f0)*(two)))'], [0.9559941088053975, '((((one)*((f0)*(two)))*(d_x_f0))-((x)/(((one)/(((sqrt(one))/((tanh(x))*(arctan(x))))/((two)+(log(one)))))-(two))))**(two)'], [0.8834893922165282, '(exp((one)/(tanh(x))))**(((arctan((d_x_f0)+(((one)/((two)/(two)))-(((one)*((f0)*(two)))-(two)))))*(two))-((f0)*(two)))'], [0.9550035345993065, '((((one)*((f0)*(two)))*(d_x_f0))-((exp(cosh(two)))/(((one)*(((sqrt(one))/((two)*(arctan(x))))/((two)+(log(one)))))-(two))))**(two)'], [0.9914096076160589, '((((one)/(((cosh(two))-((two)+((cos(one))*(two))))/((one)+(tanh(one)))))-(one))-((f0)*((cos(two))-((d_x_f0)+(one)))))**(two)'], [1.00244112019796, '((one)+(((one)+((one)+(((((sqrt(one))/((cos(two))**(one)))/(x))*(((two)**(two))*(two)))-(two))))-(one)))**(two)'], [1.0068394597076478, '(((one)*(two))-((one)-(((arcsin(one))+((one)/(x)))**(two))))*((one)*((one)+(((x)/(two))*(((one)-(two))-((one)/(one))))))']]

time spent (in secs):114.57178902626038

---------------=============================----------------
iteration 43: we have seen 31039 different eqs
QD pool size: 1113, newbins: 2 replacements: 107

new avg training reward: 0.99
best reward: 0.7533285151088746 with validation reward: 0.7533285151088746

best eq: (((x)-(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(x))+((f0)*((x)-(d_x_f0)))))) (((x0)-(np.sinh(x0)))+(d_x0_f0))/((np.arcsin(np.arcsin(x0)))*((np.tan(np.tanh(x0)))/((np.cosh(x0))+((f0)*((x0)-(d_x0_f0)))))) []

and bests eqs by free parameter number are:
[[0.7533285151088746, '(((x)-(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(x))+((f0)*((x)-(d_x_f0))))))'], [0.7539316572588447, '(((x)/(sinh(exp(two))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((sqrt(x))+((f0)*((x)-(d_x_f0))))))'], [0.7575191101240509, '(((two)**(f0))+(d_x_f0))/((arcsin(arcsin(x)))*((tanh(x))/((arctan(exp(two)))+((arctan(f0))*((x)-(d_x_f0))))))'], [0.7567317479520564, '(((one)**(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/(((exp(two))/((one)**(d_x_f0)))+((arctan(f0))*((x)-(d_x_f0))))))'], [0.7565325404091799, '(((x)**(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/(((arctan(two))*(two))+((arctan(f0))*(((two)+(tan(two)))-(d_x_f0))))))'], [0.76383198083426, '(((x)**(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/(((tan(two))/((one)**(one)))+((arctan(f0))*(((two)+(tan(two)))-(d_x_f0))))))'], [0.8336286282514453, '(exp((one)/(tanh(x))))**(((arctan((x)+(((one)+(one))*(two))))*(two))-((f0)*(two)))'], [0.8472666460613255, '(exp((one)/(tanh(x))))**(((arctan((x)+(((one)/((two)/(((sinh(two))-(sinh(f0)))+((cosh(one))-(f0)))))-(f0))))*(two))-((f0)*(two)))'], [0.9559941088053975, '((((one)*((f0)*(two)))*(d_x_f0))-((x)/(((one)/(((sqrt(one))/((tanh(x))*(arctan(x))))/((two)+(log(one)))))-(two))))**(two)'], [0.8833165307542209, '(exp((one)/(tanh(x))))**(((arctan((d_x_f0)+(((arcsin(one))/((two)/(two)))-(((one)*((f0)*(two)))-(two)))))*(two))-((f0)*(two)))'], [0.9550035345993065, '((((one)*((f0)*(two)))*(d_x_f0))-((exp(cosh(two)))/(((one)*(((sqrt(one))/((two)*(arctan(x))))/((two)+(log(one)))))-(two))))**(two)'], [0.9914096076160589, '((((one)/(((cosh(two))-((two)+((cos(one))*(two))))/((one)+(tanh(one)))))-(one))-((f0)*((cos(two))-((d_x_f0)+(one)))))**(two)'], [1.00244112019796, '((one)+(((one)+((one)+(((((sqrt(one))/((cos(two))**(one)))/(x))*(((two)**(two))*(two)))-(two))))-(one)))**(two)'], [1.0068394597076478, '(((one)*(two))-((one)-(((arcsin(one))+((one)/(x)))**(two))))*((one)*((one)+(((x)/(two))*(((one)-(two))-((one)/(one))))))']]

time spent (in secs):118.40245270729065

---------------=============================----------------
iteration 44: we have seen 31991 different eqs
QD pool size: 1116, newbins: 3 replacements: 121

new avg training reward: 0.99
best reward: 0.7533285151088746 with validation reward: 0.7533285151088746

best eq: (((x)-(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(x))+((f0)*((x)-(d_x_f0)))))) (((x0)-(np.sinh(x0)))+(d_x0_f0))/((np.arcsin(np.arcsin(x0)))*((np.tan(np.tanh(x0)))/((np.cosh(x0))+((f0)*((x0)-(d_x0_f0)))))) []

and bests eqs by free parameter number are:
[[0.7533285151088746, '(((x)-(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(x))+((f0)*((x)-(d_x_f0))))))'], [0.7539316572588447, '(((x)/(sinh(exp(two))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((sqrt(x))+((f0)*((x)-(d_x_f0))))))'], [0.7575191101240509, '(((two)**(f0))+(d_x_f0))/((arcsin(arcsin(x)))*((tanh(x))/((arctan(exp(two)))+((arctan(f0))*((x)-(d_x_f0))))))'], [0.7567317479520564, '(((one)**(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/(((exp(two))/((one)**(d_x_f0)))+((arctan(f0))*((x)-(d_x_f0))))))'], [0.7565325404091799, '(((x)**(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/(((arctan(two))*(two))+((arctan(f0))*(((two)+(tan(two)))-(d_x_f0))))))'], [0.762755716762556, '(((two)/(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((x)/(((tan(two))/((one)-((one)-(two))))+((arctan(f0))*((x)-(d_x_f0))))))'], [0.8336286282514453, '(exp((one)/(tanh(x))))**(((arctan((x)+(((one)+(one))*(two))))*(two))-((f0)*(two)))'], [0.8472666460613255, '(exp((one)/(tanh(x))))**(((arctan((x)+(((one)/((two)/(((sinh(two))-(sinh(f0)))+((cosh(one))-(f0)))))-(f0))))*(two))-((f0)*(two)))'], [0.9224774191002335, '((one)+(((two)/(((exp(f0))-(x))/((two)/(((x)**(one))/(((one)+(cos(x)))/((one)**(one)))))))-(f0)))**(two)'], [0.8833165307542209, '(exp((one)/(tanh(x))))**(((arctan((d_x_f0)+(((arcsin(one))/((two)/(two)))-(((one)*((f0)*(two)))-(two)))))*(two))-((f0)*(two)))'], [0.9550035345993065, '((((one)*((f0)*(two)))*(d_x_f0))-((exp(cosh(two)))/(((one)*(((sqrt(one))/((two)*(arctan(x))))/((two)+(log(one)))))-(two))))**(two)'], [0.9914096076160589, '((((one)/(((cosh(two))-((two)+((cos(one))*(two))))/((one)+(tanh(one)))))-(one))-((f0)*((cos(two))-((d_x_f0)+(one)))))**(two)'], [1.00244112019796, '((one)+(((one)+((one)+(((((sqrt(one))/((cos(two))**(one)))/(x))*(((two)**(two))*(two)))-(two))))-(one)))**(two)'], [1.0068394597076478, '(((one)*(two))-((one)-(((arcsin(one))+((one)/(x)))**(two))))*((one)*((one)+(((x)/(two))*(((one)-(two))-((one)/(one))))))']]

time spent (in secs):122.33070206642151

---------------=============================----------------
iteration 45: we have seen 32954 different eqs
QD pool size: 1119, newbins: 3 replacements: 126

new avg training reward: 0.989
best reward: 0.7533285151088746 with validation reward: 0.7533285151088746

best eq: (((x)-(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(x))+((f0)*((x)-(d_x_f0)))))) (((x0)-(np.sinh(x0)))+(d_x0_f0))/((np.arcsin(np.arcsin(x0)))*((np.tan(np.tanh(x0)))/((np.cosh(x0))+((f0)*((x0)-(d_x0_f0)))))) []

and bests eqs by free parameter number are:
[[0.7533285151088746, '(((x)-(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(x))+((f0)*((x)-(d_x_f0))))))'], [0.7539316572588447, '(((x)/(sinh(exp(two))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((sqrt(x))+((f0)*((x)-(d_x_f0))))))'], [0.7575191101240509, '(((two)**(f0))+(d_x_f0))/((arcsin(arcsin(x)))*((tanh(x))/((arctan(exp(two)))+((arctan(f0))*((x)-(d_x_f0))))))'], [0.7567317479520564, '(((one)**(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/(((exp(two))/((one)**(d_x_f0)))+((arctan(f0))*((x)-(d_x_f0))))))'], [0.7565325404091799, '(((x)**(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/(((arctan(two))*(two))+((arctan(f0))*(((two)+(tan(two)))-(d_x_f0))))))'], [0.7567317479520564, '(((one)**(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/(((exp(two))/((one)**((one)*(two))))+((arctan(f0))*((x)-(d_x_f0))))))'], [0.8336286282514453, '(exp((one)/(tanh(x))))**(((arctan((x)+(((one)+(one))*(two))))*(two))-((f0)*(two)))'], [0.8472666460613255, '(exp((one)/(tanh(x))))**(((arctan((x)+(((one)/((two)/(((sinh(two))-(sinh(f0)))+((cosh(one))-(f0)))))-(f0))))*(two))-((f0)*(two)))'], [0.9224774191002335, '((one)+(((two)/(((exp(f0))-(x))/((two)/(((x)**(one))/(((one)+(cos(x)))/((one)**(one)))))))-(f0)))**(two)'], [0.8833165307542209, '(exp((one)/(tanh(x))))**(((arctan((d_x_f0)+(((arcsin(one))/((two)/(two)))-(((one)*((f0)*(two)))-(two)))))*(two))-((f0)*(two)))'], [0.9550035345993065, '((((one)*((f0)*(two)))*(d_x_f0))-((exp(cosh(two)))/(((one)*(((sqrt(one))/((two)*(arctan(x))))/((two)+(log(one)))))-(two))))**(two)'], [0.9914096076160589, '((((one)/(((cosh(two))-((two)+((cos(one))*(two))))/((one)+(tanh(one)))))-(one))-((f0)*((cos(two))-((d_x_f0)+(one)))))**(two)'], [1.00244112019796, '((one)+(((one)+((one)+(((((sqrt(one))/((cos(two))**(one)))/(x))*(((two)**(two))*(two)))-(two))))-(one)))**(two)'], [1.0068394597076478, '(((one)*(two))-((one)-(((arcsin(one))+((one)/(x)))**(two))))*((one)*((one)+(((x)/(two))*(((one)-(two))-((one)/(one))))))']]

time spent (in secs):126.4911584854126

---------------=============================----------------
iteration 46: we have seen 33921 different eqs
QD pool size: 1123, newbins: 4 replacements: 126

new avg training reward: 0.988
best reward: 0.6263391868862178 with validation reward: 0.6263391868862178

best eq: (((f0)/(((sqrt(one))/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(one)))) (((f0)/(((np.sqrt(one))/(np.sinh(np.cosh(two))))/((f0)+(np.sinh(np.cosh(two))))))-(x0))*((two)/(((x0)-(np.tan(x0)))*((np.log(two))**(one)))) []

and bests eqs by free parameter number are:
[[0.7533285151088746, '(((x)-(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(x))+((f0)*((x)-(d_x_f0))))))'], [0.7539316572588447, '(((x)/(sinh(exp(two))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((sqrt(x))+((f0)*((x)-(d_x_f0))))))'], [0.7575191101240509, '(((two)**(f0))+(d_x_f0))/((arcsin(arcsin(x)))*((tanh(x))/((arctan(exp(two)))+((arctan(f0))*((x)-(d_x_f0))))))'], [0.7567317479520564, '(((one)**(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/(((exp(two))/((one)**(d_x_f0)))+((arctan(f0))*((x)-(d_x_f0))))))'], [0.7546914997300564, '(((x)**(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/(((cosh(two))/((one)**(one)))+((arctan(f0))*(((two)+(tan(x)))-(d_x_f0))))))'], [0.7567317479520564, '(((one)**(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/(((exp(two))/((one)**((one)*(two))))+((arctan(f0))*((x)-(d_x_f0))))))'], [0.6263391868862178, '(((f0)/(((sqrt(one))/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(one))))'], [0.8472666460613255, '(exp((one)/(tanh(x))))**(((arctan((x)+(((one)/((two)/(((sinh(two))-(sinh(f0)))+((cosh(one))-(f0)))))-(f0))))*(two))-((f0)*(two)))'], [0.8865273676374404, '((one)+(((two)/(((exp(f0))-(x))/((two)/(((x)**(one))**(((one)+(cos(x)))/((one)**(one)))))))-(f0)))**(two)'], [0.8833165307542209, '(exp((one)/(tanh(x))))**(((arctan((d_x_f0)+(((arcsin(one))/((two)/(two)))-(((one)*((f0)*(two)))-(two)))))*(two))-((f0)*(two)))'], [0.9542781179693954, '((((one)*((f0)*(two)))*((d_x_f0)+(((arcsin(one))/((two)/(two)))-(((one)*((f0)*(two)))-(two)))))**(one))**(two)'], [0.9911366736896425, '((((one)/(((sqrt(x))-((two)+((two)*(two))))/((one)+(log(one)))))-(one))-((f0)*((cos(two))-((d_x_f0)+((two)+(one))))))**(two)'], [1.0011756642387086, '(((one)*(two))-((one)-(((arcsin(one))+((one)/(x)))**(two))))*((one)*((d_x_f0)+(((x)/(two))*(((one)-(two))-((one)/(one))))))'], [1.0068392682313125, '((((two)*(two))*(two))-((x)-(two)))+((one)*((one)+(((((one)-(f0))/(two))/(two))*(((two)/(tanh(two)))-((two)/(one))))))']]

time spent (in secs):130.20496606826782

---------------=============================----------------
iteration 47: we have seen 34888 different eqs
QD pool size: 1126, newbins: 3 replacements: 125

new avg training reward: 0.986
best reward: 0.6263391868862178 with validation reward: 0.6263391868862178

best eq: (((f0)/(((sqrt(one))/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(one)))) (((f0)/(((np.sqrt(one))/(np.sinh(np.cosh(two))))/((f0)+(np.sinh(np.cosh(two))))))-(x0))*((two)/(((x0)-(np.tan(x0)))*((np.log(two))**(one)))) []

and bests eqs by free parameter number are:
[[0.7533285151088746, '(((x)-(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(x))+((f0)*((x)-(d_x_f0))))))'], [0.7539316572588447, '(((x)/(sinh(exp(two))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((sqrt(x))+((f0)*((x)-(d_x_f0))))))'], [0.7575191101240509, '(((two)**(f0))+(d_x_f0))/((arcsin(arcsin(x)))*((tanh(x))/((arctan(exp(two)))+((arctan(f0))*((x)-(d_x_f0))))))'], [0.7567317479520564, '(((one)**(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/(((exp(two))/((one)**(d_x_f0)))+((arctan(f0))*((x)-(d_x_f0))))))'], [0.7546914997300564, '(((x)**(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/(((cosh(two))/((one)**(one)))+((arctan(f0))*(((two)+(tan(x)))-(d_x_f0))))))'], [0.6830385009589955, '(((f0)/(((sqrt(one))/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(x))))'], [0.6263391868862178, '(((f0)/(((sqrt(one))/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(one))))'], [0.8472666460613255, '(exp((one)/(tanh(x))))**(((arctan((x)+(((one)/((two)/(((sinh(two))-(sinh(f0)))+((cosh(one))-(f0)))))-(f0))))*(two))-((f0)*(two)))'], [0.8831726803737949, '(exp((one)/(tanh(x))))**(((arctan((d_x_f0)+(((one)/((x)/(two)))-(((one)*((f0)*(two)))-(two)))))*(two))-((f0)*(two)))'], [0.8833165307542209, '(exp((one)/(tanh(x))))**(((arctan((d_x_f0)+(((arcsin(one))/((two)/(two)))-(((one)*((f0)*(two)))-(two)))))*(two))-((f0)*(two)))'], [0.9535828504353376, '((((one)*((f0)*(two)))*((d_x_f0)+(((arcsin(one))/((one)/(two)))-(((one)*((f0)*(two)))-(two)))))**(one))**(two)'], [0.9911366736896425, '((((one)/(((sqrt(x))-((two)+((two)*(two))))/((one)+(log(one)))))-(one))-((f0)*((cos(two))-((d_x_f0)+((two)+(one))))))**(two)'], [1.0011756642387086, '(((one)*(two))-((one)-(((arcsin(one))+((one)/(x)))**(two))))*((one)*((d_x_f0)+(((x)/(two))*(((one)-(two))-((one)/(one))))))'], [1.0067910767444712, '(((two)*(two))-((one)-(((arcsin(one))+((one)/(x)))**(two))))*((one)*((one)+((((one)+(one))/(two))*((x)-((one)-(one))))))']]

time spent (in secs):134.25261092185974

---------------=============================----------------
iteration 48: we have seen 35843 different eqs
QD pool size: 1128, newbins: 2 replacements: 103

new avg training reward: 0.986
best reward: 0.6263391868862178 with validation reward: 0.6263391868862178

best eq: (((f0)/(((sqrt(one))/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(one)))) (((f0)/(((np.sqrt(one))/(np.sinh(np.cosh(two))))/((f0)+(np.sinh(np.cosh(two))))))-(x0))*((two)/(((x0)-(np.tan(x0)))*((np.log(two))**(one)))) []

and bests eqs by free parameter number are:
[[0.7533285151088746, '(((x)-(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(x))+((f0)*((x)-(d_x_f0))))))'], [0.7539316572588447, '(((x)/(sinh(exp(two))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((sqrt(x))+((f0)*((x)-(d_x_f0))))))'], [0.7575191101240509, '(((two)**(f0))+(d_x_f0))/((arcsin(arcsin(x)))*((tanh(x))/((arctan(exp(two)))+((arctan(f0))*((x)-(d_x_f0))))))'], [0.7567317479520564, '(((one)**(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/(((exp(two))/((one)**(d_x_f0)))+((arctan(f0))*((x)-(d_x_f0))))))'], [0.7546914997300564, '(((x)**(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/(((cosh(two))/((one)**(one)))+((arctan(f0))*(((two)+(tan(x)))-(d_x_f0))))))'], [0.6830385009589955, '(((f0)/(((sqrt(one))/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(x))))'], [0.6263391868862178, '(((f0)/(((sqrt(one))/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(one))))'], [0.8472666460613255, '(exp((one)/(tanh(x))))**(((arctan((x)+(((one)/((two)/(((sinh(two))-(sinh(f0)))+((cosh(one))-(f0)))))-(f0))))*(two))-((f0)*(two)))'], [0.8831726803737949, '(exp((one)/(tanh(x))))**(((arctan((d_x_f0)+(((one)/((x)/(two)))-(((one)*((f0)*(two)))-(two)))))*(two))-((f0)*(two)))'], [0.8833165307542209, '(exp((one)/(tanh(x))))**(((arctan((d_x_f0)+(((arcsin(one))/((two)/(two)))-(((one)*((f0)*(two)))-(two)))))*(two))-((f0)*(two)))'], [0.9408072721725357, '((((one)/(((sqrt(x))-((two)+((two)*(two))))/((one)-(log(one)))))-(d_x_f0))-((f0)*((cos(two))-((d_x_f0)+((two)+(one))))))**(two)'], [0.9911366736896425, '((((one)/(((sqrt(x))-((two)+((two)*(two))))/((one)+(log(one)))))-(one))-((f0)*((cos(two))-((d_x_f0)+((two)+(one))))))**(two)'], [0.993890468695861, '(((((((one)/((one)/((two)+(log(one)))))-(x))-((two)+(two)))**(one))+(d_x_f0))*(two))+(((one)*(((d_x_f0)**(two))/(two)))**(one))'], [1.0067910767444712, '(((two)*(two))-((one)-(((arcsin(one))+((one)/(x)))**(two))))*((one)*((one)+((((one)+(one))/(two))*((x)-((one)-(one))))))']]

time spent (in secs):138.17002987861633

---------------=============================----------------
iteration 49: we have seen 36818 different eqs
QD pool size: 1132, newbins: 4 replacements: 97

new avg training reward: 0.985
best reward: 0.6263391868862178 with validation reward: 0.6263391868862178

best eq: (((f0)/(((sqrt(one))/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(one)))) (((f0)/(((np.sqrt(one))/(np.sinh(np.cosh(two))))/((f0)+(np.sinh(np.cosh(two))))))-(x0))*((two)/(((x0)-(np.tan(x0)))*((np.log(two))**(one)))) []

and bests eqs by free parameter number are:
[[0.7533285151088746, '(((x)-(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(x))+((f0)*((x)-(d_x_f0))))))'], [0.7539316572588447, '(((x)/(sinh(exp(two))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((sqrt(x))+((f0)*((x)-(d_x_f0))))))'], [0.7575191101240509, '(((two)**(f0))+(d_x_f0))/((arcsin(arcsin(x)))*((tanh(x))/((arctan(exp(two)))+((arctan(f0))*((x)-(d_x_f0))))))'], [0.7567317479520564, '(((one)**(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/(((exp(two))/((one)**(d_x_f0)))+((arctan(f0))*((x)-(d_x_f0))))))'], [0.7546914997300564, '(((x)**(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/(((cosh(two))/((one)**(one)))+((arctan(f0))*(((two)+(tan(x)))-(d_x_f0))))))'], [0.6830385009589955, '(((f0)/(((sqrt(one))/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(x))))'], [0.6263391868862178, '(((f0)/(((sqrt(one))/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(one))))'], [0.8472666460613255, '(exp((one)/(tanh(x))))**(((arctan((x)+(((one)/((two)/(((sinh(two))-(sinh(f0)))+((cosh(one))-(f0)))))-(f0))))*(two))-((f0)*(two)))'], [0.8831726803737949, '(exp((one)/(tanh(x))))**(((arctan((d_x_f0)+(((one)/((x)/(two)))-(((one)*((f0)*(two)))-(two)))))*(two))-((f0)*(two)))'], [0.8831721445224922, '(exp((one)/(tanh(x))))**(((arctan((d_x_f0)+(((arcsin(one))+((two)/(two)))-(((one)*((f0)*(two)))-(two)))))*(two))-((f0)*(two)))'], [0.9408072721725357, '((((one)/(((sqrt(x))-((two)+((two)*(two))))/((one)-(log(one)))))-(d_x_f0))-((f0)*((cos(two))-((d_x_f0)+((two)+(one))))))**(two)'], [0.9911366736896425, '((((one)/(((sqrt(x))-((two)+((two)*(two))))/((one)+(log(one)))))-(one))-((f0)*((cos(two))-((d_x_f0)+((two)+(one))))))**(two)'], [0.993890468695861, '(((((((one)/((one)/((two)+(log(one)))))-(x))-((two)+(two)))**(one))+(d_x_f0))*(two))+(((one)*(((d_x_f0)**(two))/(two)))**(one))'], [1.0067910767444712, '(((two)*(two))-((one)-(((arcsin(one))+((one)/(x)))**(two))))*((one)*((one)+((((one)+(one))/(two))*((x)-((one)-(one))))))']]

time spent (in secs):141.8555064201355

---------------=============================----------------
iteration 50: we have seen 37790 different eqs
QD pool size: 1135, newbins: 3 replacements: 115

new avg training reward: 0.984
best reward: 0.6263391868862178 with validation reward: 0.6263391868862178

best eq: (((f0)/(((sqrt(one))/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(one)))) (((f0)/(((np.sqrt(one))/(np.sinh(np.cosh(two))))/((f0)+(np.sinh(np.cosh(two))))))-(x0))*((two)/(((x0)-(np.tan(x0)))*((np.log(two))**(one)))) []

and bests eqs by free parameter number are:
[[0.7533285151088746, '(((x)-(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(x))+((f0)*((x)-(d_x_f0))))))'], [0.7539316572588447, '(((x)/(sinh(exp(two))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((sqrt(x))+((f0)*((x)-(d_x_f0))))))'], [0.7566486447903802, '(((one)**(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((two)+((arctan(f0))*((x)-(d_x_f0))))))'], [0.7567317479520564, '(((one)**(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/(((exp(two))/((one)**(d_x_f0)))+((arctan(f0))*((x)-(d_x_f0))))))'], [0.7546914997300564, '(((x)**(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/(((cosh(two))/((one)**(one)))+((arctan(f0))*(((two)+(tan(x)))-(d_x_f0))))))'], [0.6830385009589955, '(((f0)/(((sqrt(one))/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(x))))'], [0.6263391868862178, '(((f0)/(((sqrt(one))/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(one))))'], [0.8472666460613255, '(exp((one)/(tanh(x))))**(((arctan((x)+(((one)/((two)/(((sinh(two))-(sinh(f0)))+((cosh(one))-(f0)))))-(f0))))*(two))-((f0)*(two)))'], [0.8831726803737949, '(exp((one)/(tanh(x))))**(((arctan((d_x_f0)+(((one)/((x)/(two)))-(((one)*((f0)*(two)))-(two)))))*(two))-((f0)*(two)))'], [0.8831721445224922, '(exp((one)/(tanh(x))))**(((arctan((d_x_f0)+(((arcsin(one))+((two)/(two)))-(((one)*((f0)*(two)))-(two)))))*(two))-((f0)*(two)))'], [0.9188589214764469, '(exp((one)/(tanh(x))))**(((arctan(((((one)/(two))*(two))/(((one)**(one))/((two)/(d_x_f0))))+((two)-(f0))))*(two))-((f0)*(two)))'], [0.9911366736896425, '((((one)/(((sqrt(x))-((two)+((two)*(two))))/((one)+(log(one)))))-(one))-((f0)*((cos(two))-((d_x_f0)+((two)+(one))))))**(two)'], [0.993890468695861, '(((((((one)/((one)/((two)+(log(one)))))-(x))-((two)+(two)))**(one))+(d_x_f0))*(two))+(((one)*(((d_x_f0)**(two))/(two)))**(one))'], [1.0067910767444712, '(((two)*(two))-((one)-(((arcsin(one))+((one)/(x)))**(two))))*((one)*((one)+((((one)+(one))/(two))*((x)-((one)-(one))))))']]

time spent (in secs):145.50974225997925

---------------=============================----------------
iteration 51: we have seen 38784 different eqs
QD pool size: 1138, newbins: 3 replacements: 106

new avg training reward: 0.983
best reward: 0.6263391868862178 with validation reward: 0.6263391868862178

best eq: (((f0)/(((sqrt(one))/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(one)))) (((f0)/(((np.sqrt(one))/(np.sinh(np.cosh(two))))/((f0)+(np.sinh(np.cosh(two))))))-(x0))*((two)/(((x0)-(np.tan(x0)))*((np.log(two))**(one)))) []

and bests eqs by free parameter number are:
[[0.7533285151088746, '(((x)-(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(x))+((f0)*((x)-(d_x_f0))))))'], [0.7539316572588447, '(((x)/(sinh(exp(two))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((sqrt(x))+((f0)*((x)-(d_x_f0))))))'], [0.7566486447903802, '(((one)**(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((two)+((arctan(f0))*((x)-(d_x_f0))))))'], [0.7567317479520564, '(((one)**(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/(((exp(two))/((one)**(d_x_f0)))+((arctan(f0))*((x)-(d_x_f0))))))'], [0.7546914997300564, '(((x)**(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/(((cosh(two))/((one)**(one)))+((arctan(f0))*(((two)+(tan(x)))-(d_x_f0))))))'], [0.6830385009589955, '(((f0)/(((sqrt(one))/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(x))))'], [0.6263391868862178, '(((f0)/(((sqrt(one))/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(one))))'], [0.8472666460613255, '(exp((one)/(tanh(x))))**(((arctan((x)+(((one)/((two)/(((sinh(two))-(sinh(f0)))+((cosh(one))-(f0)))))-(f0))))*(two))-((f0)*(two)))'], [0.8345551176222202, '((((cosh(cosh(two)))+(two))*(two))-((one)-(two)))*((two)*((d_x_f0)+((arcsin(one))+(cosh(cosh((two)-(f0)))))))'], [0.8641776186044434, '(exp((one)/(tanh(x))))**(((arctan((two)+(((arcsin(one))/((two)/(two)))-((two)-(two)))))*(two))-((f0)*(two)))'], [0.9188589214764469, '(exp((one)/(tanh(x))))**(((arctan(((((one)/(two))*(two))/(((one)**(one))/((two)/(d_x_f0))))+((two)-(f0))))*(two))-((f0)*(two)))'], [0.9911366736896425, '((((one)/(((sqrt(x))-((two)+((two)*(two))))/((one)+(log(one)))))-(one))-((f0)*((cos(two))-((d_x_f0)+((two)+(one))))))**(two)'], [0.993890468695861, '(((((((one)/((one)/((two)+(log(one)))))-(x))-((two)+(two)))**(one))+(d_x_f0))*(two))+(((one)*(((d_x_f0)**(two))/(two)))**(one))'], [1.0067910767444712, '(((two)*(two))-((one)-(((arcsin(one))+((one)/(x)))**(two))))*((one)*((one)+((((one)+(one))/(two))*((x)-((one)-(one))))))']]

time spent (in secs):149.21246552467346

---------------=============================----------------
iteration 52: we have seen 39771 different eqs
QD pool size: 1143, newbins: 5 replacements: 113

new avg training reward: 0.982
best reward: 0.6263391868862178 with validation reward: 0.6263391868862178

best eq: (((f0)/(((sqrt(one))/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(one)))) (((f0)/(((np.sqrt(one))/(np.sinh(np.cosh(two))))/((f0)+(np.sinh(np.cosh(two))))))-(x0))*((two)/(((x0)-(np.tan(x0)))*((np.log(two))**(one)))) []

and bests eqs by free parameter number are:
[[0.7533285151088746, '(((x)-(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(x))+((f0)*((x)-(d_x_f0))))))'], [0.7539316572588447, '(((x)/(sinh(exp(two))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((sqrt(x))+((f0)*((x)-(d_x_f0))))))'], [0.7566486447903802, '(((one)**(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((two)+((arctan(f0))*((x)-(d_x_f0))))))'], [0.7567317479520564, '(((one)**(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/(((exp(two))/((one)**(d_x_f0)))+((arctan(f0))*((x)-(d_x_f0))))))'], [0.7546914997300564, '(((x)**(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/(((cosh(two))/((one)**(one)))+((arctan(f0))*(((two)+(tan(x)))-(d_x_f0))))))'], [0.6830385009589955, '(((f0)/(((sqrt(one))/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(x))))'], [0.6263391868862178, '(((f0)/(((sqrt(one))/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(one))))'], [0.8472666460613255, '(exp((one)/(tanh(x))))**(((arctan((x)+(((one)/((two)/(((sinh(two))-(sinh(f0)))+((cosh(one))-(f0)))))-(f0))))*(two))-((f0)*(two)))'], [0.8345551176222202, '((((cosh(cosh(two)))+(two))*(two))-((one)-(two)))*((two)*((d_x_f0)+((arcsin(one))+(cosh(cosh((two)-(f0)))))))'], [0.7916096568132341, '(((f0)/(((sqrt(one))/((two)+(cos(one))))/((two)+(cosh((two)+(two))))))/(x))*((two)/(((x)-(tan(x)))*((tanh(log(two)))**(one))))'], [0.9188589214764469, '(exp((one)/(tanh(x))))**(((arctan(((((one)/(two))*(two))/(((one)**(one))/((two)/(d_x_f0))))+((two)-(f0))))*(two))-((f0)*(two)))'], [0.9906177609697441, '((((two)/(((sqrt(one))/((two)+(sinh(exp(one)))))/((one)+(two))))-(one))-((f0)*((two)-(((cosh(two))+(d_x_f0))+(one)))))**(two)'], [0.993890468695861, '(((((((one)/((one)/((two)+(log(one)))))-(x))-((two)+(two)))**(one))+(d_x_f0))*(two))+(((one)*(((d_x_f0)**(two))/(two)))**(one))'], [0.9914309416109551, '((one)+(((one)+((one)+(((((two)/((((f0)-(one))+(two))**(one)))/(x))*(((two)**(one))*(two)))-(two))))-(one)))**(two)']]

time spent (in secs):152.98084831237793

---------------=============================----------------
iteration 53: we have seen 40734 different eqs
QD pool size: 1148, newbins: 5 replacements: 100

new avg training reward: 0.982
best reward: 0.6263391868862178 with validation reward: 0.6263391868862178

best eq: (((f0)/(((sqrt(one))/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(one)))) (((f0)/(((np.sqrt(one))/(np.sinh(np.cosh(two))))/((f0)+(np.sinh(np.cosh(two))))))-(x0))*((two)/(((x0)-(np.tan(x0)))*((np.log(two))**(one)))) []

and bests eqs by free parameter number are:
[[0.7533285151088746, '(((x)-(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(x))+((f0)*((x)-(d_x_f0))))))'], [0.7539316572588447, '(((x)/(sinh(exp(two))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((sqrt(x))+((f0)*((x)-(d_x_f0))))))'], [0.7566486447903802, '(((one)**(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((two)+((arctan(f0))*((x)-(d_x_f0))))))'], [0.7567317479520564, '(((one)**(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/(((exp(two))/((one)**(d_x_f0)))+((arctan(f0))*((x)-(d_x_f0))))))'], [0.7522375696505877, '((two)+(d_x_f0))/((arcsin(arcsin(x)))*((x)/(((tan(two))/((one)-(exp(x))))+((f0)*(((sinh(f0))*(two))-(d_x_f0))))))'], [0.6830385009589955, '(((f0)/(((sqrt(one))/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(x))))'], [0.6263391868862178, '(((f0)/(((sqrt(one))/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(one))))'], [0.8472666460613255, '(exp((one)/(tanh(x))))**(((arctan((x)+(((one)/((two)/(((sinh(two))-(sinh(f0)))+((cosh(one))-(f0)))))-(f0))))*(two))-((f0)*(two)))'], [0.8345551176222202, '((((cosh(cosh(two)))+(two))*(two))-((one)-(two)))*((two)*((d_x_f0)+((arcsin(one))+(cosh(cosh((two)-(f0)))))))'], [0.7916096568132341, '(((f0)/(((sqrt(one))/((two)+(cos(one))))/((two)+(cosh((two)+(two))))))/(x))*((two)/(((x)-(tan(x)))*((tanh(log(two)))**(one))))'], [0.8838179919870681, '(exp((one)/(tanh(x))))**(((arctan((d_x_f0)+(((one)/((two)/(two)))-(((one)*((two)*(two)))-(two)))))*(two))-((f0)*(two)))'], [0.9303455051188454, '((((one)/(((sqrt(one))+((two)+(sinh(exp(one)))))/((one)+(two))))-(one))-((f0)*((((one)-((f0)*(two)))*(d_x_f0))-(cosh(one)))))**(two)'], [0.993890468695861, '(((((((one)/((one)/((two)+(log(one)))))-(x))-((two)+(two)))**(one))+(d_x_f0))*(two))+(((one)*(((d_x_f0)**(two))/(two)))**(one))'], [0.9914309416109551, '((one)+(((one)+((one)+(((((two)/((((f0)-(one))+(two))**(one)))/(x))*(((two)**(one))*(two)))-(two))))-(one)))**(two)'], [1.0068584488620522, '(((one)+(two))-((one)-(two)))*((one)**((one)+((((one)/(two))/(two))*(((two)/(two))-((cosh(one))/((x)-((one)/(one))))))))']]

time spent (in secs):156.93181896209717

---------------=============================----------------
iteration 54: we have seen 41714 different eqs
QD pool size: 1150, newbins: 2 replacements: 100

new avg training reward: 0.981
best reward: 0.6263391868862178 with validation reward: 0.6263391868862178

best eq: (((f0)/(((sqrt(one))/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(one)))) (((f0)/(((np.sqrt(one))/(np.sinh(np.cosh(two))))/((f0)+(np.sinh(np.cosh(two))))))-(x0))*((two)/(((x0)-(np.tan(x0)))*((np.log(two))**(one)))) []

and bests eqs by free parameter number are:
[[0.7533285151088746, '(((x)-(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(x))+((f0)*((x)-(d_x_f0))))))'], [0.7539316572588447, '(((x)/(sinh(exp(two))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((sqrt(x))+((f0)*((x)-(d_x_f0))))))'], [0.7566486447903802, '(((one)**(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((two)+((arctan(f0))*((x)-(d_x_f0))))))'], [0.7567317479520564, '(((one)**(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/(((exp(two))/((one)**(d_x_f0)))+((arctan(f0))*((x)-(d_x_f0))))))'], [0.7522375696505877, '((two)+(d_x_f0))/((arcsin(arcsin(x)))*((x)/(((tan(two))/((one)-(exp(x))))+((f0)*(((sinh(f0))*(two))-(d_x_f0))))))'], [0.6830385009589955, '(((f0)/(((sqrt(one))/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(x))))'], [0.6263391868862178, '(((f0)/(((sqrt(one))/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(one))))'], [0.8472666460613255, '(exp((one)/(tanh(x))))**(((arctan((x)+(((one)/((two)/(((sinh(two))-(sinh(f0)))+((cosh(one))-(f0)))))-(f0))))*(two))-((f0)*(two)))'], [0.8345551176222202, '((((cosh(cosh(two)))+(two))*(two))-((one)-(two)))*((two)*((d_x_f0)+((arcsin(one))+(cosh(cosh((two)-(f0)))))))'], [0.7916096568132341, '(((f0)/(((sqrt(one))/((two)+(cos(one))))/((two)+(cosh((two)+(two))))))/(x))*((two)/(((x)-(tan(x)))*((tanh(log(two)))**(one))))'], [0.8836548018713589, '(exp((one)/(tanh(x))))**(((arctan((d_x_f0)+(((one)/((two)/(two)))-(((one)*((one)*(two)))-(two)))))*(two))-((f0)*(two)))'], [0.9303455051188454, '((((one)/(((sqrt(one))+((two)+(sinh(exp(one)))))/((one)+(two))))-(one))-((f0)*((((one)-((f0)*(two)))*(d_x_f0))-(cosh(one)))))**(two)'], [0.993890468695861, '(((((((one)/((one)/((two)+(log(one)))))-(x))-((two)+(two)))**(one))+(d_x_f0))*(two))+(((one)*(((d_x_f0)**(two))/(two)))**(one))'], [0.9914309416109551, '((one)+(((one)+((one)+(((((two)/((((f0)-(one))+(two))**(one)))/(x))*(((two)**(one))*(two)))-(two))))-(one)))**(two)'], [1.0068584488620522, '(((one)+(two))-((one)-(two)))*((one)**((one)+((((one)/(two))/(two))*(((two)/(two))-((cosh(one))/((x)-((one)/(one))))))))']]

time spent (in secs):161.32782196998596

---------------=============================----------------
iteration 55: we have seen 42674 different eqs
QD pool size: 1152, newbins: 2 replacements: 106

new avg training reward: 0.98
best reward: 0.6263391868862178 with validation reward: 0.6263391868862178

best eq: (((f0)/(((sqrt(one))/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(one)))) (((f0)/(((np.sqrt(one))/(np.sinh(np.cosh(two))))/((f0)+(np.sinh(np.cosh(two))))))-(x0))*((two)/(((x0)-(np.tan(x0)))*((np.log(two))**(one)))) []

and bests eqs by free parameter number are:
[[0.7533285151088746, '(((x)-(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(x))+((f0)*((x)-(d_x_f0))))))'], [0.7539316572588447, '(((x)/(sinh(exp(two))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((sqrt(x))+((f0)*((x)-(d_x_f0))))))'], [0.7556989314485087, '(((two)/(sinh(cos(x))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(two))+((arctan(f0))*((cos(x))-(d_x_f0))))))'], [0.7552449247885685, '(((x)**(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/(((cosh(two))/((one)**(one)))+((arctan(f0))*(((x)+(tan(x)))-(d_x_f0))))))'], [0.7522375696505877, '((two)+(d_x_f0))/((arcsin(arcsin(x)))*((x)/(((tan(two))/((one)-(exp(x))))+((f0)*(((sinh(f0))*(two))-(d_x_f0))))))'], [0.6830385009589955, '(((f0)/(((sqrt(one))/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(x))))'], [0.6263391868862178, '(((f0)/(((sqrt(one))/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(one))))'], [0.8099023823871662, '(exp((one)/(tanh(x))))**(((arctan((two)+(((one)/((two)/(((sinh(two))-(sinh(f0)))+((cosh(f0))-(f0)))))-(f0))))*(two))-((f0)*(two)))'], [0.8345551176222202, '((((cosh(cosh(two)))+(two))*(two))-((one)-(two)))*((two)*((d_x_f0)+((arcsin(one))+(cosh(cosh((two)-(f0)))))))'], [0.7916096568132341, '(((f0)/(((sqrt(one))/((two)+(cos(one))))/((two)+(cosh((two)+(two))))))/(x))*((two)/(((x)-(tan(x)))*((tanh(log(two)))**(one))))'], [0.8836548018713589, '(exp((one)/(tanh(x))))**(((arctan((d_x_f0)+(((one)/((two)/(two)))-(((one)*((one)*(two)))-(two)))))*(two))-((f0)*(two)))'], [0.9303455051188454, '((((one)/(((sqrt(one))+((two)+(sinh(exp(one)))))/((one)+(two))))-(one))-((f0)*((((one)-((f0)*(two)))*(d_x_f0))-(cosh(one)))))**(two)'], [0.993890468695861, '(((((((one)/((one)/((two)+(log(one)))))-(x))-((two)+(two)))**(one))+(d_x_f0))*(two))+(((one)*(((d_x_f0)**(two))/(two)))**(one))'], [0.9914309416109551, '((one)+(((one)+((one)+(((((two)/((((f0)-(one))+(two))**(one)))/(x))*(((two)**(one))*(two)))-(two))))-(one)))**(two)'], [1.0068584488620522, '(((one)+(two))-((one)-(two)))*((one)**((one)+((((one)/(two))/(two))*(((two)/(two))-((cosh(one))/((x)-((one)/(one))))))))']]

time spent (in secs):165.68314409255981

---------------=============================----------------
iteration 56: we have seen 43660 different eqs
QD pool size: 1155, newbins: 3 replacements: 97

new avg training reward: 0.98
best reward: 0.6263391868862178 with validation reward: 0.6263391868862178

best eq: (((f0)/(((sqrt(one))/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(one)))) (((f0)/(((np.sqrt(one))/(np.sinh(np.cosh(two))))/((f0)+(np.sinh(np.cosh(two))))))-(x0))*((two)/(((x0)-(np.tan(x0)))*((np.log(two))**(one)))) []

and bests eqs by free parameter number are:
[[0.7533285151088746, '(((x)-(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(x))+((f0)*((x)-(d_x_f0))))))'], [0.7539316572588447, '(((x)/(sinh(exp(two))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((sqrt(x))+((f0)*((x)-(d_x_f0))))))'], [0.7556989314485087, '(((two)/(sinh(cos(x))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(two))+((arctan(f0))*((cos(x))-(d_x_f0))))))'], [0.7552449247885685, '(((x)**(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/(((cosh(two))/((one)**(one)))+((arctan(f0))*(((x)+(tan(x)))-(d_x_f0))))))'], [0.7522375696505877, '((two)+(d_x_f0))/((arcsin(arcsin(x)))*((x)/(((tan(two))/((one)-(exp(x))))+((f0)*(((sinh(f0))*(two))-(d_x_f0))))))'], [0.6830385009589955, '(((f0)/(((sqrt(one))/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(x))))'], [0.6263391868862178, '(((f0)/(((sqrt(one))/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(one))))'], [0.8099023823871662, '(exp((one)/(tanh(x))))**(((arctan((two)+(((one)/((two)/(((sinh(two))-(sinh(f0)))+((cosh(f0))-(f0)))))-(f0))))*(two))-((f0)*(two)))'], [0.8345551176222202, '((((cosh(cosh(two)))+(two))*(two))-((one)-(two)))*((two)*((d_x_f0)+((arcsin(one))+(cosh(cosh((two)-(f0)))))))'], [0.7916096568132341, '(((f0)/(((sqrt(one))/((two)+(cos(one))))/((two)+(cosh((two)+(two))))))/(x))*((two)/(((x)-(tan(x)))*((tanh(log(two)))**(one))))'], [0.8836548018713589, '(exp((one)/(tanh(x))))**(((arctan((d_x_f0)+(((one)/((two)/(two)))-(((one)*((one)*(two)))-(two)))))*(two))-((f0)*(two)))'], [0.9303455051188454, '((((one)/(((sqrt(one))+((two)+(sinh(exp(one)))))/((one)+(two))))-(one))-((f0)*((((one)-((f0)*(two)))*(d_x_f0))-(cosh(one)))))**(two)'], [0.993890468695861, '(((((((one)/((one)/((two)+(log(one)))))-(x))-((two)+(two)))**(one))+(d_x_f0))*(two))+(((one)*(((d_x_f0)**(two))/(two)))**(one))'], [0.9914309416109551, '((one)+(((one)+((one)+(((((two)/((((f0)-(one))+(two))**(one)))/(x))*(((two)**(one))*(two)))-(two))))-(one)))**(two)'], [1.0068584488620522, '(((one)+(two))-((one)-(two)))*((one)**((one)+((((one)/(two))/(two))*(((two)/(two))-((cosh(one))/((x)-((one)/(one))))))))']]

time spent (in secs):169.73836827278137

---------------=============================----------------
iteration 57: we have seen 44658 different eqs
QD pool size: 1157, newbins: 2 replacements: 115

new avg training reward: 0.979
best reward: 0.6263391868862178 with validation reward: 0.6263391868862178

best eq: (((f0)/(((sqrt(one))/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(one)))) (((f0)/(((np.sqrt(one))/(np.sinh(np.cosh(two))))/((f0)+(np.sinh(np.cosh(two))))))-(x0))*((two)/(((x0)-(np.tan(x0)))*((np.log(two))**(one)))) []

and bests eqs by free parameter number are:
[[0.7533285151088746, '(((x)-(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(x))+((f0)*((x)-(d_x_f0))))))'], [0.7539316572588447, '(((x)/(sinh(exp(two))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((sqrt(x))+((f0)*((x)-(d_x_f0))))))'], [0.7534425888649685, '(((two)-(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(one))+((f0)*((x)-(d_x_f0))))))'], [0.7552449247885685, '(((x)**(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/(((cosh(two))/((one)**(one)))+((arctan(f0))*(((x)+(tan(x)))-(d_x_f0))))))'], [0.7522375696505877, '((two)+(d_x_f0))/((arcsin(arcsin(x)))*((x)/(((tan(two))/((one)-(exp(x))))+((f0)*(((sinh(f0))*(two))-(d_x_f0))))))'], [0.6830385009589955, '(((f0)/(((sqrt(one))/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(x))))'], [0.6263391868862178, '(((f0)/(((sqrt(one))/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(one))))'], [0.8099023823871662, '(exp((one)/(tanh(x))))**(((arctan((two)+(((one)/((two)/(((sinh(two))-(sinh(f0)))+((cosh(f0))-(f0)))))-(f0))))*(two))-((f0)*(two)))'], [0.8345551176222202, '((((cosh(cosh(two)))+(two))*(two))-((one)-(two)))*((two)*((d_x_f0)+((arcsin(one))+(cosh(cosh((two)-(f0)))))))'], [0.7916096568132341, '(((f0)/(((sqrt(one))/((two)+(cos(one))))/((two)+(cosh((two)+(two))))))/(x))*((two)/(((x)-(tan(x)))*((tanh(log(two)))**(one))))'], [0.8836548018713589, '(exp((one)/(tanh(x))))**(((arctan((d_x_f0)+(((one)/((two)/(two)))-(((one)*((one)*(two)))-(two)))))*(two))-((f0)*(two)))'], [0.930333495890787, '((((one)/(((sqrt(one))+((two)+(sinh(exp(one)))))/((two)+(two))))-(one))-((f0)*((((one)-((f0)*(two)))*(d_x_f0))-(cosh(one)))))**(two)'], [0.9853912263128338, '(((((one)/((((x)**(two))/((two)+(one)))/(((f0)*(two))+(log((one)+(one))))))*(one))-(one))-((exp(cosh(two)))+(one)))**(two)'], [0.9914309416109551, '((one)+(((one)+((one)+(((((two)/((((f0)-(one))+(two))**(one)))/(x))*(((two)**(one))*(two)))-(two))))-(one)))**(two)'], [1.0068584488620522, '(((one)+(two))-((one)-(two)))*((one)**((one)+((((one)/(two))/(two))*(((two)/(two))-((cosh(one))/((x)-((one)/(one))))))))']]

time spent (in secs):173.70476150512695

---------------=============================----------------
iteration 58: we have seen 45647 different eqs
QD pool size: 1159, newbins: 2 replacements: 95

new avg training reward: 0.978
best reward: 0.6263391868862178 with validation reward: 0.6263391868862178

best eq: (((f0)/(((sqrt(one))/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(one)))) (((f0)/(((np.sqrt(one))/(np.sinh(np.cosh(two))))/((f0)+(np.sinh(np.cosh(two))))))-(x0))*((two)/(((x0)-(np.tan(x0)))*((np.log(two))**(one)))) []

and bests eqs by free parameter number are:
[[0.7533285151088746, '(((x)-(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(x))+((f0)*((x)-(d_x_f0))))))'], [0.7539316572588447, '(((x)/(sinh(exp(two))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((sqrt(x))+((f0)*((x)-(d_x_f0))))))'], [0.7534425888649685, '(((two)-(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(one))+((f0)*((x)-(d_x_f0))))))'], [0.7552299632749506, '((arcsin(f0))+(d_x_f0))/((arcsin(x))*((tan(tanh(x)))/(((cosh(two))/((one)**(one)))+((arctan(f0))*(((x)+(tan(x)))-(d_x_f0))))))'], [0.7522375696505877, '((two)+(d_x_f0))/((arcsin(arcsin(x)))*((x)/(((tan(two))/((one)-(exp(x))))+((f0)*(((sinh(f0))*(two))-(d_x_f0))))))'], [0.6830385009589955, '(((f0)/(((sqrt(one))/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(x))))'], [0.6263391868862178, '(((f0)/(((sqrt(one))/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(one))))'], [0.8099023823871662, '(exp((one)/(tanh(x))))**(((arctan((two)+(((one)/((two)/(((sinh(two))-(sinh(f0)))+((cosh(f0))-(f0)))))-(f0))))*(two))-((f0)*(two)))'], [0.8087611146554523, '(exp((one)/(tanh(x))))**(((arctan((tan(two))+(((one)/((x)/(two)))-(((tan(x))*((f0)*(two)))-(two)))))*(two))-((f0)*(two)))'], [0.7916096568132341, '(((f0)/(((sqrt(one))/((two)+(cos(one))))/((two)+(cosh((two)+(two))))))/(x))*((two)/(((x)-(tan(x)))*((tanh(log(two)))**(one))))'], [0.8836548018713589, '(exp((one)/(tanh(x))))**(((arctan((d_x_f0)+(((one)/((two)/(two)))-(((one)*((one)*(two)))-(two)))))*(two))-((f0)*(two)))'], [0.930333495890787, '((((one)/(((sqrt(one))+((two)+(sinh(exp(one)))))/((two)+(two))))-(one))-((f0)*((((one)-((f0)*(two)))*(d_x_f0))-(cosh(one)))))**(two)'], [0.9853912263128338, '(((((one)/((((x)**(two))/((two)+(one)))/(((f0)*(two))+(log((one)+(one))))))*(one))-(one))-((exp(cosh(two)))+(one)))**(two)'], [0.9914309416109551, '((one)+(((one)+((one)+(((((two)/((((f0)-(one))+(two))**(one)))/(x))*(((two)**(one))*(two)))-(two))))-(one)))**(two)'], [1.0061153317923401, '((((cosh((one)/(two)))+(d_x_f0))*(two))-((two)/(((one)*((((one)/(two))*(two))-(((two)**(one))/((two)/(two)))))/(two))))+(two)']]

time spent (in secs):178.46983528137207

---------------=============================----------------
iteration 59: we have seen 46614 different eqs
QD pool size: 1163, newbins: 4 replacements: 96

new avg training reward: 0.978
best reward: 0.5806468945305109 with validation reward: 0.5806468945305109

best eq: (((f0)/(((sqrt(x))/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(one)))) (((f0)/(((np.sqrt(x0))/(np.sinh(np.cosh(two))))/((f0)+(np.sinh(np.cosh(two))))))-(x0))*((two)/(((x0)-(np.tan(x0)))*((np.log(two))**(one)))) []

and bests eqs by free parameter number are:
[[0.7533285151088746, '(((x)-(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(x))+((f0)*((x)-(d_x_f0))))))'], [0.7539316572588447, '(((x)/(sinh(exp(two))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((sqrt(x))+((f0)*((x)-(d_x_f0))))))'], [0.7534425888649685, '(((two)-(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(one))+((f0)*((x)-(d_x_f0))))))'], [0.7552299632749506, '((arcsin(f0))+(d_x_f0))/((arcsin(x))*((tan(tanh(x)))/(((cosh(two))/((one)**(one)))+((arctan(f0))*(((x)+(tan(x)))-(d_x_f0))))))'], [0.7522375696505877, '((two)+(d_x_f0))/((arcsin(arcsin(x)))*((x)/(((tan(two))/((one)-(exp(x))))+((f0)*(((sinh(f0))*(two))-(d_x_f0))))))'], [0.5806468945305109, '(((f0)/(((sqrt(x))/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(one))))'], [0.6263391868862178, '(((f0)/(((sqrt(one))/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(one))))'], [0.8099023823871662, '(exp((one)/(tanh(x))))**(((arctan((two)+(((one)/((two)/(((sinh(two))-(sinh(f0)))+((cosh(f0))-(f0)))))-(f0))))*(two))-((f0)*(two)))'], [0.7974862876763371, '(exp((one)/(x)))**(((arctan(((d_x_f0)**(two))+(((two)/((two)/(two)))-((f0)-(two)))))*(two))-((f0)*(two)))'], [0.7916096568132341, '(((f0)/(((sqrt(one))/((two)+(cos(one))))/((two)+(cosh((two)+(two))))))/(x))*((two)/(((x)-(tan(x)))*((tanh(log(two)))**(one))))'], [0.8836548018713589, '(exp((one)/(tanh(x))))**(((arctan((d_x_f0)+(((one)/((two)/(two)))-(((one)*((one)*(two)))-(two)))))*(two))-((f0)*(two)))'], [0.930333495890787, '((((one)/(((sqrt(one))+((two)+(sinh(exp(one)))))/((two)+(two))))-(one))-((f0)*((((one)-((f0)*(two)))*(d_x_f0))-(cosh(one)))))**(two)'], [0.9853912263128338, '(((((one)/((((x)**(two))/((two)+(one)))/(((f0)*(two))+(log((one)+(one))))))*(one))-(one))-((exp(cosh(two)))+(one)))**(two)'], [0.9914309416109551, '((one)+(((one)+((one)+(((((two)/((((f0)-(one))+(two))**(one)))/(x))*(((two)**(one))*(two)))-(two))))-(one)))**(two)'], [1.0061153317923401, '((((cosh((one)/(two)))+(d_x_f0))*(two))-((two)/(((one)*((((one)/(two))*(two))-(((two)**(one))/((two)/(two)))))/(two))))+(two)']]

time spent (in secs):182.91456699371338

---------------=============================----------------
iteration 60: we have seen 47598 different eqs
QD pool size: 1167, newbins: 4 replacements: 98

new avg training reward: 0.977
best reward: 0.5806468945305109 with validation reward: 0.5806468945305109

best eq: (((f0)/(((sqrt(x))/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(one)))) (((f0)/(((np.sqrt(x0))/(np.sinh(np.cosh(two))))/((f0)+(np.sinh(np.cosh(two))))))-(x0))*((two)/(((x0)-(np.tan(x0)))*((np.log(two))**(one)))) []

and bests eqs by free parameter number are:
[[0.7533285151088746, '(((x)-(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(x))+((f0)*((x)-(d_x_f0))))))'], [0.7539316572588447, '(((x)/(sinh(exp(two))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((sqrt(x))+((f0)*((x)-(d_x_f0))))))'], [0.7534425888649685, '(((two)-(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(one))+((f0)*((x)-(d_x_f0))))))'], [0.7552299632749506, '((arcsin(f0))+(d_x_f0))/((arcsin(x))*((tan(tanh(x)))/(((cosh(two))/((one)**(one)))+((arctan(f0))*(((x)+(tan(x)))-(d_x_f0))))))'], [0.7522375696505877, '((two)+(d_x_f0))/((arcsin(arcsin(x)))*((x)/(((tan(two))/((one)-(exp(x))))+((f0)*(((sinh(f0))*(two))-(d_x_f0))))))'], [0.5806468945305109, '(((f0)/(((sqrt(x))/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(one))))'], [0.6263391868862178, '(((f0)/(((sqrt(one))/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(one))))'], [0.8099023823871662, '(exp((one)/(tanh(x))))**(((arctan((two)+(((one)/((two)/(((sinh(two))-(sinh(f0)))+((cosh(f0))-(f0)))))-(f0))))*(two))-((f0)*(two)))'], [0.7974862876763371, '(exp((one)/(x)))**(((arctan(((d_x_f0)**(two))+(((two)/((two)/(two)))-((f0)-(two)))))*(two))-((f0)*(two)))'], [0.7916096568132341, '(((f0)/(((sqrt(one))/((two)+(cos(one))))/((two)+(cosh((two)+(two))))))/(x))*((two)/(((x)-(tan(x)))*((tanh(log(two)))**(one))))'], [0.8836548018713589, '(exp((one)/(tanh(x))))**(((arctan((d_x_f0)+(((one)/((two)/(two)))-(((one)*((one)*(two)))-(two)))))*(two))-((f0)*(two)))'], [0.9298982482217721, '((((one)/(((sqrt(one))+((two)+(sinh(exp(one)))))/((two)+(two))))-(one))-((f0)*((((one)-((f0)*(two)))*(d_x_f0))+(cosh(one)))))**(two)'], [0.9853912263128338, '(((((one)/((((x)**(two))/((two)+(one)))/(((f0)*(two))+(log((one)+(one))))))*(one))-(one))-((exp(cosh(two)))+(one)))**(two)'], [0.9914309416109551, '((one)+(((one)+((one)+(((((two)/((((f0)-(one))+(two))**(one)))/(x))*(((two)**(one))*(two)))-(two))))-(one)))**(two)'], [1.0061153317923401, '((((cosh((one)/(two)))+(d_x_f0))*(two))-((two)/(((one)*((((one)/(two))*(two))-(((two)**(one))/((two)/(two)))))/(two))))+(two)']]

time spent (in secs):186.94564938545227

---------------=============================----------------
iteration 61: we have seen 48585 different eqs
QD pool size: 1170, newbins: 3 replacements: 105

new avg training reward: 0.976
best reward: 0.5806468945305109 with validation reward: 0.5806468945305109

best eq: (((f0)/(((sqrt(x))/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(one)))) (((f0)/(((np.sqrt(x0))/(np.sinh(np.cosh(two))))/((f0)+(np.sinh(np.cosh(two))))))-(x0))*((two)/(((x0)-(np.tan(x0)))*((np.log(two))**(one)))) []

and bests eqs by free parameter number are:
[[0.7533196880139491, '(((f0)-(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(x))+((f0)*((x)-(d_x_f0))))))'], [0.7539316572588447, '(((x)/(sinh(exp(two))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((sqrt(x))+((f0)*((x)-(d_x_f0))))))'], [0.7534425888649685, '(((two)-(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(one))+((f0)*((x)-(d_x_f0))))))'], [0.7549320990018733, '(((one)/(sinh(cos(x))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(two))+((arctan(f0))*((two)-(d_x_f0))))))'], [0.7522375696505877, '((two)+(d_x_f0))/((arcsin(arcsin(x)))*((x)/(((tan(two))/((one)-(exp(x))))+((f0)*(((sinh(f0))*(two))-(d_x_f0))))))'], [0.5806468945305109, '(((f0)/(((sqrt(x))/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(one))))'], [0.6263391868862178, '(((f0)/(((sqrt(one))/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(one))))'], [0.8099023823871662, '(exp((one)/(tanh(x))))**(((arctan((two)+(((one)/((two)/(((sinh(two))-(sinh(f0)))+((cosh(f0))-(f0)))))-(f0))))*(two))-((f0)*(two)))'], [0.7974862876763371, '(exp((one)/(x)))**(((arctan(((d_x_f0)**(two))+(((two)/((two)/(two)))-((f0)-(two)))))*(two))-((f0)*(two)))'], [0.7916096568132341, '(((f0)/(((sqrt(one))/((two)+(cos(one))))/((two)+(cosh((two)+(two))))))/(x))*((two)/(((x)-(tan(x)))*((tanh(log(two)))**(one))))'], [0.8836548018713589, '(exp((one)/(tanh(x))))**(((arctan((d_x_f0)+(((one)/((two)/(two)))-(((one)*((one)*(two)))-(two)))))*(two))-((f0)*(two)))'], [0.9298982482217721, '((((one)/(((sqrt(one))+((two)+(sinh(exp(one)))))/((two)+(two))))-(one))-((f0)*((((one)-((f0)*(two)))*(d_x_f0))+(cosh(one)))))**(two)'], [0.9730007197766054, '((two)+(((d_x_f0)/(((one)/((one)*((one)+((((one)+(one))/(two))*((x)-((one)-(one)))))))/((f0)*(arctan(two)))))-(one)))**(two)'], [0.9914309416109551, '((one)+(((one)+((one)+(((((two)/((((f0)-(one))+(two))**(one)))/(x))*(((two)**(one))*(two)))-(two))))-(one)))**(two)'], [1.0061153317923401, '((((cosh((one)/(two)))+(d_x_f0))*(two))-((two)/(((one)*((((one)/(two))*(two))-(((two)**(one))/((two)/(two)))))/(two))))+(two)']]

time spent (in secs):190.84010100364685

---------------=============================----------------
iteration 62: we have seen 49587 different eqs
QD pool size: 1171, newbins: 1 replacements: 94

new avg training reward: 0.976
best reward: 0.5806468945305109 with validation reward: 0.5806468945305109

best eq: (((f0)/(((sqrt(x))/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(one)))) (((f0)/(((np.sqrt(x0))/(np.sinh(np.cosh(two))))/((f0)+(np.sinh(np.cosh(two))))))-(x0))*((two)/(((x0)-(np.tan(x0)))*((np.log(two))**(one)))) []

and bests eqs by free parameter number are:
[[0.7531275466054564, '(((f0)-(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh((f0)+(x)))+((f0)*((x)-(d_x_f0))))))'], [0.7539316572588447, '(((x)/(sinh(exp(two))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((sqrt(x))+((f0)*((x)-(d_x_f0))))))'], [0.7534425888649685, '(((two)-(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(one))+((f0)*((x)-(d_x_f0))))))'], [0.750912111002328, '((cosh(f0))+(d_x_f0))/((arcsin(arcsin(x)))*((x)/(((tan(two))/((one)-(exp(x))))+((f0)*((two)-(d_x_f0))))))'], [0.7522375696505877, '((two)+(d_x_f0))/((arcsin(arcsin(x)))*((x)/(((tan(two))/((one)-(exp(x))))+((f0)*(((sinh(f0))*(two))-(d_x_f0))))))'], [0.5806468945305109, '(((f0)/(((sqrt(x))/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(one))))'], [0.6263391868862178, '(((f0)/(((sqrt(one))/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(one))))'], [0.8099023823871662, '(exp((one)/(tanh(x))))**(((arctan((two)+(((one)/((two)/(((sinh(two))-(sinh(f0)))+((cosh(f0))-(f0)))))-(f0))))*(two))-((f0)*(two)))'], [0.7974862876763371, '(exp((one)/(x)))**(((arctan(((d_x_f0)**(two))+(((two)/((two)/(two)))-((f0)-(two)))))*(two))-((f0)*(two)))'], [0.7916096568132341, '(((f0)/(((sqrt(one))/((two)+(cos(one))))/((two)+(cosh((two)+(two))))))/(x))*((two)/(((x)-(tan(x)))*((tanh(log(two)))**(one))))'], [0.8836548018713589, '(exp((one)/(tanh(x))))**(((arctan((d_x_f0)+(((one)/((two)/(two)))-(((one)*((one)*(two)))-(two)))))*(two))-((f0)*(two)))'], [0.9298161954574643, '((((one)/(((sqrt(one))+((two)+(sinh(sinh(one)))))/((two)+(two))))-(one))-((f0)*((((one)-((f0)*(two)))*(d_x_f0))+(cosh(one)))))**(two)'], [0.9730007197766054, '((two)+(((d_x_f0)/(((one)/((one)*((one)+((((one)+(one))/(two))*((x)-((one)-(one)))))))/((f0)*(arctan(two)))))-(one)))**(two)'], [0.9914309416109551, '((one)+(((one)+((one)+(((((two)/((((f0)-(one))+(two))**(one)))/(x))*(((two)**(one))*(two)))-(two))))-(one)))**(two)'], [1.0061153317923401, '((((cosh((one)/(two)))+(d_x_f0))*(two))-((two)/(((one)*((((one)/(two))*(two))-(((two)**(one))/((two)/(two)))))/(two))))+(two)']]

time spent (in secs):195.1600410938263

---------------=============================----------------
iteration 63: we have seen 50592 different eqs
QD pool size: 1173, newbins: 2 replacements: 93

new avg training reward: 0.975
best reward: 0.5806468945305109 with validation reward: 0.5806468945305109

best eq: (((f0)/(((sqrt(x))/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(one)))) (((f0)/(((np.sqrt(x0))/(np.sinh(np.cosh(two))))/((f0)+(np.sinh(np.cosh(two))))))-(x0))*((two)/(((x0)-(np.tan(x0)))*((np.log(two))**(one)))) []

and bests eqs by free parameter number are:
[[0.7531275466054564, '(((f0)-(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh((f0)+(x)))+((f0)*((x)-(d_x_f0))))))'], [0.752594102493197, '((f0)+(d_x_f0))/((arcsin(arcsin(x)))*((tan(x))/((sqrt(x))+((f0)*(((cosh(sinh(two)))*(arcsin(arcsin(x))))-(d_x_f0))))))'], [0.7534425888649685, '(((two)-(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(one))+((f0)*((x)-(d_x_f0))))))'], [0.750912111002328, '((cosh(f0))+(d_x_f0))/((arcsin(arcsin(x)))*((x)/(((tan(two))/((one)-(exp(x))))+((f0)*((two)-(d_x_f0))))))'], [0.7522243274076486, '((two)+(d_x_f0))/((arcsin(arcsin(x)))*((x)/(((tan(two))/((one)-(exp(x))))+((f0)*(((sinh(f0))/(two))-(d_x_f0))))))'], [0.5806468945305109, '(((f0)/(((sqrt(x))/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(one))))'], [0.6263391868862178, '(((f0)/(((sqrt(one))/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(one))))'], [0.8099023823871662, '(exp((one)/(tanh(x))))**(((arctan((two)+(((one)/((two)/(((sinh(two))-(sinh(f0)))+((cosh(f0))-(f0)))))-(f0))))*(two))-((f0)*(two)))'], [0.7974862876763371, '(exp((one)/(x)))**(((arctan(((d_x_f0)**(two))+(((two)/((two)/(two)))-((f0)-(two)))))*(two))-((f0)*(two)))'], [0.7916096568132341, '(((f0)/(((sqrt(one))/((two)+(cos(one))))/((two)+(cosh((two)+(two))))))/(x))*((two)/(((x)-(tan(x)))*((tanh(log(two)))**(one))))'], [0.8836548018713589, '(exp((one)/(tanh(x))))**(((arctan((d_x_f0)+(((one)/((two)/(two)))-(((one)*((one)*(two)))-(two)))))*(two))-((f0)*(two)))'], [0.9298063594766558, '((((one)/(((sqrt(one))+((two)+(sinh(one))))/((two)+(two))))-(one))-((f0)*((((one)-((f0)*(two)))*(d_x_f0))+(cosh(one)))))**(two)'], [0.9730007197766054, '((two)+(((d_x_f0)/(((one)/((one)*((one)+((((one)+(one))/(two))*((x)-((one)-(one)))))))/((f0)*(arctan(two)))))-(one)))**(two)'], [0.9914309416109551, '((one)+(((one)+((one)+(((((two)/((((f0)-(one))+(two))**(one)))/(x))*(((two)**(one))*(two)))-(two))))-(one)))**(two)'], [0.9948320990365526, '(((((((one)/((two)/((two)+(log(one)))))-(one))-((two)+(two)))**(one))+(log(one)))*(two))+(((one)*(((d_x_f0)**(two))/(two)))**(one))']]

time spent (in secs):199.20725893974304

---------------=============================----------------
iteration 64: we have seen 51581 different eqs
QD pool size: 1174, newbins: 1 replacements: 93

new avg training reward: 0.975
best reward: 0.5806468945305109 with validation reward: 0.5806468945305109

best eq: (((f0)/(((sqrt(x))/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(one)))) (((f0)/(((np.sqrt(x0))/(np.sinh(np.cosh(two))))/((f0)+(np.sinh(np.cosh(two))))))-(x0))*((two)/(((x0)-(np.tan(x0)))*((np.log(two))**(one)))) []

and bests eqs by free parameter number are:
[[0.7531275466054564, '(((f0)-(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh((f0)+(x)))+((f0)*((x)-(d_x_f0))))))'], [0.7525228775349978, '((f0)+(d_x_f0))/((arcsin(arcsin(x)))*((tan(x))/((sqrt(x))+((f0)*(((cosh(sinh(two)))-(arcsin(arcsin(x))))-(d_x_f0))))))'], [0.7534378318385162, '(((two)-(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(x))+((f0)*((two)-(d_x_f0))))))'], [0.750912111002328, '((cosh(f0))+(d_x_f0))/((arcsin(arcsin(x)))*((x)/(((tan(two))/((one)-(exp(x))))+((f0)*((two)-(d_x_f0))))))'], [0.75185894654046, '((two)+(d_x_f0))/((arcsin(arcsin(x)))*((x)/((two)+((f0)*((((two)/(cos(arctan(x))))**(two))-(d_x_f0))))))'], [0.5806468945305109, '(((f0)/(((sqrt(x))/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(one))))'], [0.6263391868862178, '(((f0)/(((sqrt(one))/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(one))))'], [0.8099023823871662, '(exp((one)/(tanh(x))))**(((arctan((two)+(((one)/((two)/(((sinh(two))-(sinh(f0)))+((cosh(f0))-(f0)))))-(f0))))*(two))-((f0)*(two)))'], [0.7974862876763371, '(exp((one)/(x)))**(((arctan(((d_x_f0)**(two))+(((two)/((two)/(two)))-((f0)-(two)))))*(two))-((f0)*(two)))'], [0.7916096568132341, '(((f0)/(((sqrt(one))/((two)+(cos(one))))/((two)+(cosh((two)+(two))))))/(x))*((two)/(((x)-(tan(x)))*((tanh(log(two)))**(one))))'], [0.8836548018713589, '(exp((one)/(tanh(x))))**(((arctan((d_x_f0)+(((one)/((two)/(two)))-(((one)*((one)*(two)))-(two)))))*(two))-((f0)*(two)))'], [0.9298063594766558, '((((one)/(((sqrt(one))+((two)+(sinh(one))))/((two)+(two))))-(one))-((f0)*((((one)-((f0)*(two)))*(d_x_f0))+(cosh(one)))))**(two)'], [0.9730007197766054, '((two)+(((d_x_f0)/(((one)/((one)*((one)+((((one)+(one))/(two))*((x)-((one)-(one)))))))/((f0)*(arctan(two)))))-(one)))**(two)'], [0.9914309416109551, '((one)+(((one)+((one)+(((((two)/((((f0)-(one))+(two))**(one)))/(x))*(((two)**(one))*(two)))-(two))))-(one)))**(two)'], [0.9948320990365526, '(((((((one)/((two)/((two)+(log(one)))))-(one))-((two)+(two)))**(one))+(log(one)))*(two))+(((one)*(((d_x_f0)**(two))/(two)))**(one))']]

time spent (in secs):203.0906343460083

---------------=============================----------------
iteration 65: we have seen 52558 different eqs
QD pool size: 1174, newbins: 0 replacements: 88

new avg training reward: 0.974
best reward: 0.5806468945305109 with validation reward: 0.5806468945305109

best eq: (((f0)/(((sqrt(x))/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(one)))) (((f0)/(((np.sqrt(x0))/(np.sinh(np.cosh(two))))/((f0)+(np.sinh(np.cosh(two))))))-(x0))*((two)/(((x0)-(np.tan(x0)))*((np.log(two))**(one)))) []

and bests eqs by free parameter number are:
[[0.7528129445448043, '(((f0)-(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh((f0)+((f0)+(x))))+((f0)*((x)-(d_x_f0))))))'], [0.7525228775349978, '((f0)+(d_x_f0))/((arcsin(arcsin(x)))*((tan(x))/((sqrt(x))+((f0)*(((cosh(sinh(two)))-(arcsin(arcsin(x))))-(d_x_f0))))))'], [0.7534378318385162, '(((two)-(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(x))+((f0)*((two)-(d_x_f0))))))'], [0.750912111002328, '((cosh(f0))+(d_x_f0))/((arcsin(arcsin(x)))*((x)/(((tan(two))/((one)-(exp(x))))+((f0)*((two)-(d_x_f0))))))'], [0.75185894654046, '((two)+(d_x_f0))/((arcsin(arcsin(x)))*((x)/((two)+((f0)*((((two)/(cos(arctan(x))))**(two))-(d_x_f0))))))'], [0.5806468945305109, '(((f0)/(((sqrt(x))/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(one))))'], [0.626079857997421, '(((f0)/(((sqrt(one))/(cosh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(one))))'], [0.8099023823871662, '(exp((one)/(tanh(x))))**(((arctan((two)+(((one)/((two)/(((sinh(two))-(sinh(f0)))+((cosh(f0))-(f0)))))-(f0))))*(two))-((f0)*(two)))'], [0.7974862876763371, '(exp((one)/(x)))**(((arctan(((d_x_f0)**(two))+(((two)/((two)/(two)))-((f0)-(two)))))*(two))-((f0)*(two)))'], [0.7916096568132341, '(((f0)/(((sqrt(one))/((two)+(cos(one))))/((two)+(cosh((two)+(two))))))/(x))*((two)/(((x)-(tan(x)))*((tanh(log(two)))**(one))))'], [0.8591820955387632, '(((((one)/(((sqrt(one))/(f0))/((cosh(sinh((two)**(one))))+((one)/(tanh(x))))))**(one))-(two))*((exp(two))+(exp(two))))**(two)'], [0.9298063594766558, '((((one)/(((sqrt(one))+((two)+(sinh(one))))/((two)+(two))))-(one))-((f0)*((((one)-((f0)*(two)))*(d_x_f0))+(cosh(one)))))**(two)'], [0.9730007197766054, '((two)+(((d_x_f0)/(((one)/((one)*((one)+((((one)+(one))/(two))*((x)-((one)-(one)))))))/((f0)*(arctan(two)))))-(one)))**(two)'], [0.9914309416109551, '((one)+(((one)+((one)+(((((two)/((((f0)-(one))+(two))**(one)))/(x))*(((two)**(one))*(two)))-(two))))-(one)))**(two)'], [0.9948320990365526, '(((((((one)/((two)/((two)+(log(one)))))-(one))-((two)+(two)))**(one))+(log(one)))*(two))+(((one)*(((d_x_f0)**(two))/(two)))**(one))']]

time spent (in secs):206.9681875705719

---------------=============================----------------
iteration 66: we have seen 53573 different eqs
QD pool size: 1175, newbins: 1 replacements: 81

new avg training reward: 0.973
best reward: 0.5806468945305109 with validation reward: 0.5806468945305109

best eq: (((f0)/(((sqrt(x))/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(one)))) (((f0)/(((np.sqrt(x0))/(np.sinh(np.cosh(two))))/((f0)+(np.sinh(np.cosh(two))))))-(x0))*((two)/(((x0)-(np.tan(x0)))*((np.log(two))**(one)))) []

and bests eqs by free parameter number are:
[[0.7527112549998835, '(((f0)-(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh((x)+((f0)+(x))))+((f0)*((x)-(d_x_f0))))))'], [0.7525228775349978, '((f0)+(d_x_f0))/((arcsin(arcsin(x)))*((tan(x))/((sqrt(x))+((f0)*(((cosh(sinh(two)))-(arcsin(arcsin(x))))-(d_x_f0))))))'], [0.7534378318385162, '(((two)-(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(x))+((f0)*((two)-(d_x_f0))))))'], [0.750912111002328, '((cosh(f0))+(d_x_f0))/((arcsin(arcsin(x)))*((x)/(((tan(two))/((one)-(exp(x))))+((f0)*((two)-(d_x_f0))))))'], [0.75185894654046, '((two)+(d_x_f0))/((arcsin(arcsin(x)))*((x)/((two)+((f0)*((((two)/(cos(arctan(x))))**(two))-(d_x_f0))))))'], [0.5806468945305109, '(((f0)/(((sqrt(x))/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(one))))'], [0.626079857997421, '(((f0)/(((sqrt(one))/(cosh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(one))))'], [0.7903129443854604, '(exp((one)/(tanh(x))))**(((arctan((tan(x))+(((one)/((x)/(two)))-(((tan(x))*((f0)-(two)))-(two)))))*(two))-((f0)*(two)))'], [0.7974862876763371, '(exp((one)/(x)))**(((arctan(((d_x_f0)**(two))+(((two)/((two)/(two)))-((f0)-(two)))))*(two))-((f0)*(two)))'], [0.7916096568132341, '(((f0)/(((sqrt(one))/((two)+(cos(one))))/((two)+(cosh((two)+(two))))))/(x))*((two)/(((x)-(tan(x)))*((tanh(log(two)))**(one))))'], [0.8591820955387632, '(((((one)/(((sqrt(one))/(f0))/((cosh(sinh((two)**(one))))+((one)/(tanh(x))))))**(one))-(two))*((exp(two))+(exp(two))))**(two)'], [0.8757638213483964, '((((one)/(((sqrt(one))+((two)+(sinh(one))))/((two)+(two))))-(one))-((f0)*((((two)-((f0)*(two)))*(d_x_f0))+(cosh(one)))))**(two)'], [0.9363972985348953, '((two)+(((d_x_f0)/(((one)/((one)*((one)+((((one)+(one))/(two))*((x)-((one)-(two)))))))/((f0)*(arctan(two)))))-(one)))**(two)'], [0.9914309416109551, '((one)+(((one)+((one)+(((((two)/((((f0)-(one))+(two))**(one)))/(x))*(((two)**(one))*(two)))-(two))))-(one)))**(two)'], [0.9948320990365526, '(((((((one)/((two)/((two)+(log(one)))))-(one))-((two)+(two)))**(one))+(log(one)))*(two))+(((one)*(((d_x_f0)**(two))/(two)))**(one))']]

time spent (in secs):210.86951875686646

---------------=============================----------------
iteration 67: we have seen 54590 different eqs
QD pool size: 1177, newbins: 2 replacements: 73

new avg training reward: 0.973
best reward: 0.5806468945305109 with validation reward: 0.5806468945305109

best eq: (((f0)/(((sqrt(x))/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(one)))) (((f0)/(((np.sqrt(x0))/(np.sinh(np.cosh(two))))/((f0)+(np.sinh(np.cosh(two))))))-(x0))*((two)/(((x0)-(np.tan(x0)))*((np.log(two))**(one)))) []

and bests eqs by free parameter number are:
[[0.7527112549998835, '(((f0)-(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh((x)+((f0)+(x))))+((f0)*((x)-(d_x_f0))))))'], [0.7525228775349978, '((f0)+(d_x_f0))/((arcsin(arcsin(x)))*((tan(x))/((sqrt(x))+((f0)*(((cosh(sinh(two)))-(arcsin(arcsin(x))))-(d_x_f0))))))'], [0.7534378318385162, '(((two)-(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(x))+((f0)*((two)-(d_x_f0))))))'], [0.750912111002328, '((cosh(f0))+(d_x_f0))/((arcsin(arcsin(x)))*((x)/(((tan(two))/((one)-(exp(x))))+((f0)*((two)-(d_x_f0))))))'], [0.7511707077118867, '((cosh(one))+(d_x_f0))/((arcsin(arcsin(x)))*((x)/(((tan(two))/((one)-(exp(x))))+((f0)*((two)-(d_x_f0))))))'], [0.5806468945305109, '(((f0)/(((sqrt(x))/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(one))))'], [0.626079857997421, '(((f0)/(((sqrt(one))/(cosh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(one))))'], [0.7903129443854604, '(exp((one)/(tanh(x))))**(((arctan((tan(x))+(((one)/((x)/(two)))-(((tan(x))*((f0)-(two)))-(two)))))*(two))-((f0)*(two)))'], [0.7974862876763371, '(exp((one)/(x)))**(((arctan(((d_x_f0)**(two))+(((two)/((two)/(two)))-((f0)-(two)))))*(two))-((f0)*(two)))'], [0.7916096568132341, '(((f0)/(((sqrt(one))/((two)+(cos(one))))/((two)+(cosh((two)+(two))))))/(x))*((two)/(((x)-(tan(x)))*((tanh(log(two)))**(one))))'], [0.8591820955387632, '(((((one)/(((sqrt(one))/(f0))/((cosh(sinh((two)**(one))))+((one)/(tanh(x))))))**(one))-(two))*((exp(two))+(exp(two))))**(two)'], [0.8757638213483964, '((((one)/(((sqrt(one))+((two)+(sinh(one))))/((two)+(two))))-(one))-((f0)*((((two)-((f0)*(two)))*(d_x_f0))+(cosh(one)))))**(two)'], [0.9363972985348953, '((two)+(((d_x_f0)/(((one)/((one)*((one)+((((one)+(one))/(two))*((x)-((one)-(two)))))))/((f0)*(arctan(two)))))-(one)))**(two)'], [0.9914309416109551, '((one)+(((one)+((one)+(((((two)/((((f0)-(one))+(two))**(one)))/(x))*(((two)**(one))*(two)))-(two))))-(one)))**(two)'], [0.9948320990365526, '(((((((one)/((two)/((two)+(log(one)))))-(one))-((two)+(two)))**(one))+(log(one)))*(two))+(((one)*(((d_x_f0)**(two))/(two)))**(one))']]

time spent (in secs):215.05862045288086

---------------=============================----------------
iteration 68: we have seen 55596 different eqs
QD pool size: 1177, newbins: 0 replacements: 84

new avg training reward: 0.972
best reward: 0.5806468945305109 with validation reward: 0.5806468945305109

best eq: (((f0)/(((sqrt(x))/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(one)))) (((f0)/(((np.sqrt(x0))/(np.sinh(np.cosh(two))))/((f0)+(np.sinh(np.cosh(two))))))-(x0))*((two)/(((x0)-(np.tan(x0)))*((np.log(two))**(one)))) []

and bests eqs by free parameter number are:
[[0.7527112549998835, '(((f0)-(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh((x)+((f0)+(x))))+((f0)*((x)-(d_x_f0))))))'], [0.7491533746177934, '(((x)/(sinh(cos(x))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(two))+((arcsin(f0))*((cos(x))-(d_x_f0))))))'], [0.7534378318385162, '(((two)-(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(x))+((f0)*((two)-(d_x_f0))))))'], [0.750912111002328, '((cosh(f0))+(d_x_f0))/((arcsin(arcsin(x)))*((x)/(((tan(two))/((one)-(exp(x))))+((f0)*((two)-(d_x_f0))))))'], [0.6209810791141268, '(((f0)/(((one)/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*(x)))'], [0.5806468945305109, '(((f0)/(((sqrt(x))/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(one))))'], [0.626079857997421, '(((f0)/(((sqrt(one))/(cosh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(one))))'], [0.7903129443854604, '(exp((one)/(tanh(x))))**(((arctan((tan(x))+(((one)/((x)/(two)))-(((tan(x))*((f0)-(two)))-(two)))))*(two))-((f0)*(two)))'], [0.7974862876763371, '(exp((one)/(x)))**(((arctan(((d_x_f0)**(two))+(((two)/((two)/(two)))-((f0)-(two)))))*(two))-((f0)*(two)))'], [0.7916096568132341, '(((f0)/(((sqrt(one))/((two)+(cos(one))))/((two)+(cosh((two)+(two))))))/(x))*((two)/(((x)-(tan(x)))*((tanh(log(two)))**(one))))'], [0.8591820955387632, '(((((one)/(((sqrt(one))/(f0))/((cosh(sinh((two)**(one))))+((one)/(tanh(x))))))**(one))-(two))*((exp(two))+(exp(two))))**(two)'], [0.8757638213483964, '((((one)/(((sqrt(one))+((two)+(sinh(one))))/((two)+(two))))-(one))-((f0)*((((two)-((f0)*(two)))*(d_x_f0))+(cosh(one)))))**(two)'], [0.9363972985348953, '((two)+(((d_x_f0)/(((one)/((one)*((one)+((((one)+(one))/(two))*((x)-((one)-(two)))))))/((f0)*(arctan(two)))))-(one)))**(two)'], [0.9914309416109551, '((one)+(((one)+((one)+(((((two)/((((f0)-(one))+(two))**(one)))/(x))*(((two)**(one))*(two)))-(two))))-(one)))**(two)'], [0.9948320990365526, '(((((((one)/((two)/((two)+(log(one)))))-(one))-((two)+(two)))**(one))+(log(one)))*(two))+(((one)*(((d_x_f0)**(two))/(two)))**(one))']]

time spent (in secs):218.79420828819275

---------------=============================----------------
iteration 69: we have seen 56591 different eqs
QD pool size: 1182, newbins: 5 replacements: 93

new avg training reward: 0.971
best reward: 0.5806468945305109 with validation reward: 0.5806468945305109

best eq: (((f0)/(((sqrt(x))/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(one)))) (((f0)/(((np.sqrt(x0))/(np.sinh(np.cosh(two))))/((f0)+(np.sinh(np.cosh(two))))))-(x0))*((two)/(((x0)-(np.tan(x0)))*((np.log(two))**(one)))) []

and bests eqs by free parameter number are:
[[0.7527112549998835, '(((f0)-(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh((x)+((f0)+(x))))+((f0)*((x)-(d_x_f0))))))'], [0.7491533746177934, '(((x)/(sinh(cos(x))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(two))+((arcsin(f0))*((cos(x))-(d_x_f0))))))'], [0.7534378318385162, '(((two)-(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(x))+((f0)*((two)-(d_x_f0))))))'], [0.750912111002328, '((cosh(f0))+(d_x_f0))/((arcsin(arcsin(x)))*((x)/(((tan(two))/((one)-(exp(x))))+((f0)*((two)-(d_x_f0))))))'], [0.6209810791141268, '(((f0)/(((one)/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*(x)))'], [0.5806468945305109, '(((f0)/(((sqrt(x))/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(one))))'], [0.5884558642163389, '(((f0)/(((sqrt(x))/(sinh(cosh(two))))/((one)+(sinh(cosh(two))))))-(d_x_f0))*((two)/(((x)-(tan(x)))*((one)**(one))))'], [0.7903129443854604, '(exp((one)/(tanh(x))))**(((arctan((tan(x))+(((one)/((x)/(two)))-(((tan(x))*((f0)-(two)))-(two)))))*(two))-((f0)*(two)))'], [0.7974862876763371, '(exp((one)/(x)))**(((arctan(((d_x_f0)**(two))+(((two)/((two)/(two)))-((f0)-(two)))))*(two))-((f0)*(two)))'], [0.7916096568132341, '(((f0)/(((sqrt(one))/((two)+(cos(one))))/((two)+(cosh((two)+(two))))))/(x))*((two)/(((x)-(tan(x)))*((tanh(log(two)))**(one))))'], [0.8591820955387632, '(((((one)/(((sqrt(one))/(f0))/((cosh(sinh((two)**(one))))+((one)/(tanh(x))))))**(one))-(two))*((exp(two))+(exp(two))))**(two)'], [0.8756207493794101, '((((one)-(((sqrt(one))+((two)+(sinh(one))))/((two)+(two))))-(one))-((f0)*((((two)-((f0)*(two)))*(d_x_f0))+(cosh(one)))))**(two)'], [0.9363972985348953, '((two)+(((d_x_f0)/(((one)/((one)*((one)+((((one)+(one))/(two))*((x)-((one)-(two)))))))/((f0)*(arctan(two)))))-(one)))**(two)'], [0.9914309416109551, '((one)+(((one)+((one)+(((((two)/((((f0)-(one))+(two))**(one)))/(x))*(((two)**(one))*(two)))-(two))))-(one)))**(two)'], [0.9948318439048904, '(((((((one)/((two)/((two)+(log(one)))))-(one))-((two)+(two)))-(one))+(log(one)))*(two))+(((one)*(((d_x_f0)**(two))/(two)))**(one))']]

time spent (in secs):222.91335773468018

---------------=============================----------------
iteration 70: we have seen 57584 different eqs
QD pool size: 1184, newbins: 2 replacements: 77

new avg training reward: 0.97
best reward: 0.5806468945305109 with validation reward: 0.5806468945305109

best eq: (((f0)/(((sqrt(x))/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(one)))) (((f0)/(((np.sqrt(x0))/(np.sinh(np.cosh(two))))/((f0)+(np.sinh(np.cosh(two))))))-(x0))*((two)/(((x0)-(np.tan(x0)))*((np.log(two))**(one)))) []

and bests eqs by free parameter number are:
[[0.7527112549998835, '(((f0)-(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh((x)+((f0)+(x))))+((f0)*((x)-(d_x_f0))))))'], [0.7491533746177934, '(((x)/(sinh(cos(x))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(two))+((arcsin(f0))*((cos(x))-(d_x_f0))))))'], [0.7534099531333095, '(((two)-(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((x)/((cosh(x))+((f0)*((two)-(d_x_f0))))))'], [0.750912111002328, '((cosh(f0))+(d_x_f0))/((arcsin(arcsin(x)))*((x)/(((tan(two))/((one)-(exp(x))))+((f0)*((two)-(d_x_f0))))))'], [0.6209810791141268, '(((f0)/(((one)/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*(x)))'], [0.5806468945305109, '(((f0)/(((sqrt(x))/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(one))))'], [0.5884558642163389, '(((f0)/(((sqrt(x))/(sinh(cosh(two))))/((one)+(sinh(cosh(two))))))-(d_x_f0))*((two)/(((x)-(tan(x)))*((one)**(one))))'], [0.7903129443854604, '(exp((one)/(tanh(x))))**(((arctan((tan(x))+(((one)/((x)/(two)))-(((tan(x))*((f0)-(two)))-(two)))))*(two))-((f0)*(two)))'], [0.7974862876763371, '(exp((one)/(x)))**(((arctan(((d_x_f0)**(two))+(((two)/((two)/(two)))-((f0)-(two)))))*(two))-((f0)*(two)))'], [0.7916096568132341, '(((f0)/(((sqrt(one))/((two)+(cos(one))))/((two)+(cosh((two)+(two))))))/(x))*((two)/(((x)-(tan(x)))*((tanh(log(two)))**(one))))'], [0.8591820955387632, '(((((one)/(((sqrt(one))/(f0))/((cosh(sinh((two)**(one))))+((one)/(tanh(x))))))**(one))-(two))*((exp(two))+(exp(two))))**(two)'], [0.8756207493794101, '((((one)-(((sqrt(one))+((two)+(sinh(one))))/((two)+(two))))-(one))-((f0)*((((two)-((f0)*(two)))*(d_x_f0))+(cosh(one)))))**(two)'], [0.9363972985348953, '((two)+(((d_x_f0)/(((one)/((one)*((one)+((((one)+(one))/(two))*((x)-((one)-(two)))))))/((f0)*(arctan(two)))))-(one)))**(two)'], [0.9914309416109551, '((one)+(((one)+((one)+(((((two)/((((f0)-(one))+(two))**(one)))/(x))*(((two)**(one))*(two)))-(two))))-(one)))**(two)'], [0.9948318439048904, '(((((((one)/((two)/((two)+(log(one)))))-(one))-((two)+(two)))-(one))+(log(one)))*(two))+(((one)*(((d_x_f0)**(two))/(two)))**(one))']]

time spent (in secs):227.103937625885

---------------=============================----------------
iteration 71: we have seen 58586 different eqs
QD pool size: 1186, newbins: 2 replacements: 76

new avg training reward: 0.969
best reward: 0.5806468945305109 with validation reward: 0.5806468945305109

best eq: (((f0)/(((sqrt(x))/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(one)))) (((f0)/(((np.sqrt(x0))/(np.sinh(np.cosh(two))))/((f0)+(np.sinh(np.cosh(two))))))-(x0))*((two)/(((x0)-(np.tan(x0)))*((np.log(two))**(one)))) []

and bests eqs by free parameter number are:
[[0.7527112549998835, '(((f0)-(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh((x)+((f0)+(x))))+((f0)*((x)-(d_x_f0))))))'], [0.7491533746177934, '(((x)/(sinh(cos(x))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(two))+((arcsin(f0))*((cos(x))-(d_x_f0))))))'], [0.7534099531333095, '(((two)-(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((x)/((cosh(x))+((f0)*((two)-(d_x_f0))))))'], [0.750912111002328, '((cosh(f0))+(d_x_f0))/((arcsin(arcsin(x)))*((x)/(((tan(two))/((one)-(exp(x))))+((f0)*((two)-(d_x_f0))))))'], [0.6209810791141268, '(((f0)/(((one)/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*(x)))'], [0.5806468945305109, '(((f0)/(((sqrt(x))/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(one))))'], [0.5884558642163389, '(((f0)/(((sqrt(x))/(sinh(cosh(two))))/((one)+(sinh(cosh(two))))))-(d_x_f0))*((two)/(((x)-(tan(x)))*((one)**(one))))'], [0.7903129443854604, '(exp((one)/(tanh(x))))**(((arctan((tan(x))+(((one)/((x)/(two)))-(((tan(x))*((f0)-(two)))-(two)))))*(two))-((f0)*(two)))'], [0.7974862876763371, '(exp((one)/(x)))**(((arctan(((d_x_f0)**(two))+(((two)/((two)/(two)))-((f0)-(two)))))*(two))-((f0)*(two)))'], [0.7916096568132341, '(((f0)/(((sqrt(one))/((two)+(cos(one))))/((two)+(cosh((two)+(two))))))/(x))*((two)/(((x)-(tan(x)))*((tanh(log(two)))**(one))))'], [0.8591820955387632, '(((((one)/(((sqrt(one))/(f0))/((cosh(sinh((two)**(one))))+((one)/(tanh(x))))))**(one))-(two))*((exp(two))+(exp(two))))**(two)'], [0.8756207493794101, '((((one)-(((sqrt(one))+((two)+(sinh(one))))/((two)+(two))))-(one))-((f0)*((((two)-((f0)*(two)))*(d_x_f0))+(cosh(one)))))**(two)'], [0.9363972985348953, '((two)+(((d_x_f0)/(((one)/((one)*((one)+((((one)+(one))/(two))*((x)-((one)-(two)))))))/((f0)*(arctan(two)))))-(one)))**(two)'], [0.9914309416109551, '((one)+(((one)+((one)+(((((two)/((((f0)-(one))+(two))**(one)))/(x))*(((two)**(one))*(two)))-(two))))-(one)))**(two)'], [0.9948318439048904, '(((((((one)/((two)/((two)+(log(one)))))-(one))-((two)+(two)))-(one))+(log(one)))*(two))+(((one)*(((d_x_f0)**(two))/(two)))**(one))']]

time spent (in secs):230.8532280921936

---------------=============================----------------
iteration 72: we have seen 59628 different eqs
QD pool size: 1188, newbins: 2 replacements: 86

new avg training reward: 0.968
best reward: 0.5768718837460335 with validation reward: 0.5768718837460335

best eq: (((f0)/(((sqrt((cosh(f0))+(two)))/(exp(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(two)))) (((f0)/(((np.sqrt((np.cosh(f0))+(two)))/(np.exp(np.cosh(two))))/((f0)+(np.sinh(np.cosh(two))))))-(x0))*((two)/(((x0)-(np.tan(x0)))*((np.log(two))**(two)))) []

and bests eqs by free parameter number are:
[[0.7527112549998835, '(((f0)-(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh((x)+((f0)+(x))))+((f0)*((x)-(d_x_f0))))))'], [0.7491533746177934, '(((x)/(sinh(cos(x))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(two))+((arcsin(f0))*((cos(x))-(d_x_f0))))))'], [0.7494359544670213, '((((one)**(x))/(sinh(cos(x))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(two))+((arcsin(f0))*((cos(x))-(d_x_f0))))))'], [0.750912111002328, '((cosh(f0))+(d_x_f0))/((arcsin(arcsin(x)))*((x)/(((tan(two))/((one)-(exp(x))))+((f0)*((two)-(d_x_f0))))))'], [0.6209810791141268, '(((f0)/(((one)/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*(x)))'], [0.5806468945305109, '(((f0)/(((sqrt(x))/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(one))))'], [0.5768718837460335, '(((f0)/(((sqrt((cosh(f0))+(two)))/(exp(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(two))))'], [0.7903129443854604, '(exp((one)/(tanh(x))))**(((arctan((tan(x))+(((one)/((x)/(two)))-(((tan(x))*((f0)-(two)))-(two)))))*(two))-((f0)*(two)))'], [0.7974862876763371, '(exp((one)/(x)))**(((arctan(((d_x_f0)**(two))+(((two)/((two)/(two)))-((f0)-(two)))))*(two))-((f0)*(two)))'], [0.7916096568132341, '(((f0)/(((sqrt(one))/((two)+(cos(one))))/((two)+(cosh((two)+(two))))))/(x))*((two)/(((x)-(tan(x)))*((tanh(log(two)))**(one))))'], [0.8591820955387632, '(((((one)/(((sqrt(one))/(f0))/((cosh(sinh((two)**(one))))+((one)/(tanh(x))))))**(one))-(two))*((exp(two))+(exp(two))))**(two)'], [0.8756207493794101, '((((one)-(((sqrt(one))+((two)+(sinh(one))))/((two)+(two))))-(one))-((f0)*((((two)-((f0)*(two)))*(d_x_f0))+(cosh(one)))))**(two)'], [0.9363972985348953, '((two)+(((d_x_f0)/(((one)/((one)*((one)+((((one)+(one))/(two))*((x)-((one)-(two)))))))/((f0)*(arctan(two)))))-(one)))**(two)'], [0.9914309416109551, '((one)+(((one)+((one)+(((((two)/((((f0)-(one))+(two))**(one)))/(x))*(((two)**(one))*(two)))-(two))))-(one)))**(two)'], [0.9948318439048904, '(((((((one)/((two)/((two)+(log(one)))))-(one))-((two)+(two)))-(one))+(log(one)))*(two))+(((one)*(((d_x_f0)**(two))/(two)))**(one))']]

time spent (in secs):234.82174444198608

---------------=============================----------------
iteration 73: we have seen 60635 different eqs
QD pool size: 1190, newbins: 2 replacements: 76

new avg training reward: 0.968
best reward: 0.5768718837460335 with validation reward: 0.5768718837460335

best eq: (((f0)/(((sqrt((cosh(f0))+(two)))/(exp(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(two)))) (((f0)/(((np.sqrt((np.cosh(f0))+(two)))/(np.exp(np.cosh(two))))/((f0)+(np.sinh(np.cosh(two))))))-(x0))*((two)/(((x0)-(np.tan(x0)))*((np.log(two))**(two)))) []

and bests eqs by free parameter number are:
[[0.7527112549998835, '(((f0)-(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh((x)+((f0)+(x))))+((f0)*((x)-(d_x_f0))))))'], [0.749137741313484, '(((x)/(sinh(cos(f0))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(two))+((arcsin(f0))*((cos(x))-(d_x_f0))))))'], [0.7494359544670213, '((((one)**(x))/(sinh(cos(x))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(two))+((arcsin(f0))*((cos(x))-(d_x_f0))))))'], [0.750912111002328, '((cosh(f0))+(d_x_f0))/((arcsin(arcsin(x)))*((x)/(((tan(two))/((one)-(exp(x))))+((f0)*((two)-(d_x_f0))))))'], [0.6209810791141268, '(((f0)/(((one)/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*(x)))'], [0.5806468945305109, '(((f0)/(((sqrt(x))/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(one))))'], [0.5768718837460335, '(((f0)/(((sqrt((cosh(f0))+(two)))/(exp(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(two))))'], [0.7903129443854604, '(exp((one)/(tanh(x))))**(((arctan((tan(x))+(((one)/((x)/(two)))-(((tan(x))*((f0)-(two)))-(two)))))*(two))-((f0)*(two)))'], [0.7974862876763371, '(exp((one)/(x)))**(((arctan(((d_x_f0)**(two))+(((two)/((two)/(two)))-((f0)-(two)))))*(two))-((f0)*(two)))'], [0.7916096568132341, '(((f0)/(((sqrt(one))/((two)+(cos(one))))/((two)+(cosh((two)+(two))))))/(x))*((two)/(((x)-(tan(x)))*((tanh(log(two)))**(one))))'], [0.8591820955387632, '(((((one)/(((sqrt(one))/(f0))/((cosh(sinh((two)**(one))))+((one)/(tanh(x))))))**(one))-(two))*((exp(two))+(exp(two))))**(two)'], [0.8756207493794101, '((((one)-(((sqrt(one))+((two)+(sinh(one))))/((two)+(two))))-(one))-((f0)*((((two)-((f0)*(two)))*(d_x_f0))+(cosh(one)))))**(two)'], [0.9363972985348953, '((two)+(((d_x_f0)/(((one)/((one)*((one)+((((one)+(one))/(two))*((x)-((one)-(two)))))))/((f0)*(arctan(two)))))-(one)))**(two)'], [0.9914309416109551, '((one)+(((one)+((one)+(((((two)/((((f0)-(one))+(two))**(one)))/(x))*(((two)**(one))*(two)))-(two))))-(one)))**(two)'], [0.9948318439048904, '(((((((one)/((two)/((two)+(log(one)))))-(one))-((two)+(two)))-(one))+(log(one)))*(two))+(((one)*(((d_x_f0)**(two))/(two)))**(one))']]

time spent (in secs):238.70059823989868

---------------=============================----------------
iteration 74: we have seen 61642 different eqs
QD pool size: 1191, newbins: 1 replacements: 75

new avg training reward: 0.967
best reward: 0.5768718837460335 with validation reward: 0.5768718837460335

best eq: (((f0)/(((sqrt((cosh(f0))+(two)))/(exp(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(two)))) (((f0)/(((np.sqrt((np.cosh(f0))+(two)))/(np.exp(np.cosh(two))))/((f0)+(np.sinh(np.cosh(two))))))-(x0))*((two)/(((x0)-(np.tan(x0)))*((np.log(two))**(two)))) []

and bests eqs by free parameter number are:
[[0.7527112549998835, '(((f0)-(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh((x)+((f0)+(x))))+((f0)*((x)-(d_x_f0))))))'], [0.749137741313484, '(((x)/(sinh(cos(f0))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(two))+((arcsin(f0))*((cos(x))-(d_x_f0))))))'], [0.7494359544670213, '((((one)**(x))/(sinh(cos(x))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(two))+((arcsin(f0))*((cos(x))-(d_x_f0))))))'], [0.750912111002328, '((cosh(f0))+(d_x_f0))/((arcsin(arcsin(x)))*((x)/(((tan(two))/((one)-(exp(x))))+((f0)*((two)-(d_x_f0))))))'], [0.6209810791141268, '(((f0)/(((one)/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*(x)))'], [0.5806468945305109, '(((f0)/(((sqrt(x))/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(one))))'], [0.5768718837460335, '(((f0)/(((sqrt((cosh(f0))+(two)))/(exp(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(two))))'], [0.7903129443854604, '(exp((one)/(tanh(x))))**(((arctan((tan(x))+(((one)/((x)/(two)))-(((tan(x))*((f0)-(two)))-(two)))))*(two))-((f0)*(two)))'], [0.7974862876763371, '(exp((one)/(x)))**(((arctan(((d_x_f0)**(two))+(((two)/((two)/(two)))-((f0)-(two)))))*(two))-((f0)*(two)))'], [0.7916096568132341, '(((f0)/(((sqrt(one))/((two)+(cos(one))))/((two)+(cosh((two)+(two))))))/(x))*((two)/(((x)-(tan(x)))*((tanh(log(two)))**(one))))'], [0.8591820955387632, '(((((one)/(((sqrt(one))/(f0))/((cosh(sinh((two)**(one))))+((one)/(tanh(x))))))**(one))-(two))*((exp(two))+(exp(two))))**(two)'], [0.8756207493794101, '((((one)-(((sqrt(one))+((two)+(sinh(one))))/((two)+(two))))-(one))-((f0)*((((two)-((f0)*(two)))*(d_x_f0))+(cosh(one)))))**(two)'], [0.9363972985348953, '((two)+(((d_x_f0)/(((one)/((one)*((one)+((((one)+(one))/(two))*((x)-((one)-(two)))))))/((f0)*(arctan(two)))))-(one)))**(two)'], [0.9914309416109551, '((one)+(((one)+((one)+(((((two)/((((f0)-(one))+(two))**(one)))/(x))*(((two)**(one))*(two)))-(two))))-(one)))**(two)'], [0.9948318439048904, '(((((((one)/((two)/((two)+(log(one)))))-(one))-((two)+(two)))-(one))+(log(one)))*(two))+(((one)*(((d_x_f0)**(two))/(two)))**(one))']]

time spent (in secs):243.0069136619568

---------------=============================----------------
iteration 75: we have seen 62622 different eqs
QD pool size: 1192, newbins: 1 replacements: 111

new avg training reward: 0.966
best reward: 0.5768718837460335 with validation reward: 0.5768718837460335

best eq: (((f0)/(((sqrt((cosh(f0))+(two)))/(exp(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(two)))) (((f0)/(((np.sqrt((np.cosh(f0))+(two)))/(np.exp(np.cosh(two))))/((f0)+(np.sinh(np.cosh(two))))))-(x0))*((two)/(((x0)-(np.tan(x0)))*((np.log(two))**(two)))) []

and bests eqs by free parameter number are:
[[0.7527112549998835, '(((f0)-(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh((x)+((f0)+(x))))+((f0)*((x)-(d_x_f0))))))'], [0.749137741313484, '(((x)/(sinh(cos(f0))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(two))+((arcsin(f0))*((cos(x))-(d_x_f0))))))'], [0.7494359544670213, '((((one)**(x))/(sinh(cos(x))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(two))+((arcsin(f0))*((cos(x))-(d_x_f0))))))'], [0.750912111002328, '((cosh(f0))+(d_x_f0))/((arcsin(arcsin(x)))*((x)/(((tan(two))/((one)-(exp(x))))+((f0)*((two)-(d_x_f0))))))'], [0.6209810791141268, '(((f0)/(((one)/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*(x)))'], [0.5806468945305109, '(((f0)/(((sqrt(x))/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(one))))'], [0.5768718837460335, '(((f0)/(((sqrt((cosh(f0))+(two)))/(exp(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(two))))'], [0.7903129443854604, '(exp((one)/(tanh(x))))**(((arctan((tan(x))+(((one)/((x)/(two)))-(((tan(x))*((f0)-(two)))-(two)))))*(two))-((f0)*(two)))'], [0.7974862876763371, '(exp((one)/(x)))**(((arctan(((d_x_f0)**(two))+(((two)/((two)/(two)))-((f0)-(two)))))*(two))-((f0)*(two)))'], [0.7916096568132341, '(((f0)/(((sqrt(one))/((two)+(cos(one))))/((two)+(cosh((two)+(two))))))/(x))*((two)/(((x)-(tan(x)))*((tanh(log(two)))**(one))))'], [0.8591820955387632, '(((((one)/(((sqrt(one))/(f0))/((cosh(sinh((two)**(one))))+((one)/(tanh(x))))))**(one))-(two))*((exp(two))+(exp(two))))**(two)'], [0.8464557783459985, '(exp((one)/(tanh(x))))**(((arctan((two)+(((one)/((two)/(two)))-((((one)+(f0))*((one)*(two)))-(two)))))*(two))-((f0)*(two)))'], [0.9363972985348953, '((two)+(((d_x_f0)/(((one)/((one)*((one)+((((one)+(one))/(two))*((x)-((one)-(two)))))))/((f0)*(arctan(two)))))-(one)))**(two)'], [0.9914309416109551, '((one)+(((one)+((one)+(((((two)/((((f0)-(one))+(two))**(one)))/(x))*(((two)**(one))*(two)))-(two))))-(one)))**(two)'], [0.9948318439048904, '(((((((one)/((two)/((two)+(log(one)))))-(one))-((two)+(two)))-(one))+(log(one)))*(two))+(((one)*(((d_x_f0)**(two))/(two)))**(one))']]

time spent (in secs):247.02912592887878

---------------=============================----------------
iteration 76: we have seen 63642 different eqs
QD pool size: 1192, newbins: 0 replacements: 93

new avg training reward: 0.966
best reward: 0.5768718837460335 with validation reward: 0.5768718837460335

best eq: (((f0)/(((sqrt((cosh(f0))+(two)))/(exp(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(two)))) (((f0)/(((np.sqrt((np.cosh(f0))+(two)))/(np.exp(np.cosh(two))))/((f0)+(np.sinh(np.cosh(two))))))-(x0))*((two)/(((x0)-(np.tan(x0)))*((np.log(two))**(two)))) []

and bests eqs by free parameter number are:
[[0.7527112549998835, '(((f0)-(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh((x)+((f0)+(x))))+((f0)*((x)-(d_x_f0))))))'], [0.749137741313484, '(((x)/(sinh(cos(f0))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(two))+((arcsin(f0))*((cos(x))-(d_x_f0))))))'], [0.7494359544670213, '((((one)**(x))/(sinh(cos(x))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(two))+((arcsin(f0))*((cos(x))-(d_x_f0))))))'], [0.750912111002328, '((cosh(f0))+(d_x_f0))/((arcsin(arcsin(x)))*((x)/(((tan(two))/((one)-(exp(x))))+((f0)*((two)-(d_x_f0))))))'], [0.6209810791141268, '(((f0)/(((one)/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*(x)))'], [0.5806468945305109, '(((f0)/(((sqrt(x))/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(one))))'], [0.5768718837460335, '(((f0)/(((sqrt((cosh(f0))+(two)))/(exp(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(two))))'], [0.7903129443854604, '(exp((one)/(tanh(x))))**(((arctan((tan(x))+(((one)/((x)/(two)))-(((tan(x))*((f0)-(two)))-(two)))))*(two))-((f0)*(two)))'], [0.7974862876763371, '(exp((one)/(x)))**(((arctan(((d_x_f0)**(two))+(((two)/((two)/(two)))-((f0)-(two)))))*(two))-((f0)*(two)))'], [0.7916096568132341, '(((f0)/(((sqrt(one))/((two)+(cos(one))))/((two)+(cosh((two)+(two))))))/(x))*((two)/(((x)-(tan(x)))*((tanh(log(two)))**(one))))'], [0.8591820955387632, '(((((one)/(((sqrt(one))/(f0))/((cosh(sinh((two)**(one))))+((one)/(tanh(x))))))**(one))-(two))*((exp(two))+(exp(two))))**(two)'], [0.8464557783459985, '(exp((one)/(tanh(x))))**(((arctan((two)+(((one)/((two)/(two)))-((((one)+(f0))*((one)*(two)))-(two)))))*(two))-((f0)*(two)))'], [0.9363972985348953, '((two)+(((d_x_f0)/(((one)/((one)*((one)+((((one)+(one))/(two))*((x)-((one)-(two)))))))/((f0)*(arctan(two)))))-(one)))**(two)'], [0.9914309416109551, '((one)+(((one)+((one)+(((((two)/((((f0)-(one))+(two))**(one)))/(x))*(((two)**(one))*(two)))-(two))))-(one)))**(two)'], [0.9948318439048904, '(((((((one)/((two)/((two)+(log(one)))))-(one))-((two)+(two)))-(one))+(log(one)))*(two))+(((one)*(((d_x_f0)**(two))/(two)))**(one))']]

time spent (in secs):251.5957269668579

---------------=============================----------------
iteration 77: we have seen 64661 different eqs
QD pool size: 1193, newbins: 1 replacements: 69

new avg training reward: 0.966
best reward: 0.567216179660296 with validation reward: 0.567216179660296

best eq: (((f0)/(((sqrt(one))/(cosh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(two)))) (((f0)/(((np.sqrt(one))/(np.cosh(np.cosh(two))))/((f0)+(np.sinh(np.cosh(two))))))-(x0))*((two)/(((x0)-(np.tan(x0)))*((np.log(two))**(two)))) []

and bests eqs by free parameter number are:
[[0.7521131143942071, '(((tanh(d_x_f0))-(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(x))+((f0)*((x)-(d_x_f0))))))'], [0.749137741313484, '(((x)/(sinh(cos(f0))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(two))+((arcsin(f0))*((cos(x))-(d_x_f0))))))'], [0.7494359544670213, '((((one)**(x))/(sinh(cos(x))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(two))+((arcsin(f0))*((cos(x))-(d_x_f0))))))'], [0.7490708679708695, '(((x)/((two)+(log(one))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(two))+((arcsin(f0))*((cos(x))-(d_x_f0))))))'], [0.6209810791141268, '(((f0)/(((one)/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*(x)))'], [0.5806468945305109, '(((f0)/(((sqrt(x))/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(one))))'], [0.567216179660296, '(((f0)/(((sqrt(one))/(cosh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(two))))'], [0.7903129443854604, '(exp((one)/(tanh(x))))**(((arctan((tan(x))+(((one)/((x)/(two)))-(((tan(x))*((f0)-(two)))-(two)))))*(two))-((f0)*(two)))'], [0.7974862876763371, '(exp((one)/(x)))**(((arctan(((d_x_f0)**(two))+(((two)/((two)/(two)))-((f0)-(two)))))*(two))-((f0)*(two)))'], [0.7916096568132341, '(((f0)/(((sqrt(one))/((two)+(cos(one))))/((two)+(cosh((two)+(two))))))/(x))*((two)/(((x)-(tan(x)))*((tanh(log(two)))**(one))))'], [0.8591820955387632, '(((((one)/(((sqrt(one))/(f0))/((cosh(sinh((two)**(one))))+((one)/(tanh(x))))))**(one))-(two))*((exp(two))+(exp(two))))**(two)'], [0.8464557783459985, '(exp((one)/(tanh(x))))**(((arctan((two)+(((one)/((two)/(two)))-((((one)+(f0))*((one)*(two)))-(two)))))*(two))-((f0)*(two)))'], [0.9363972985348953, '((two)+(((d_x_f0)/(((one)/((one)*((one)+((((one)+(one))/(two))*((x)-((one)-(two)))))))/((f0)*(arctan(two)))))-(one)))**(two)'], [0.9914309416109551, '((one)+(((one)+((one)+(((((two)/((((f0)-(one))+(two))**(one)))/(x))*(((two)**(one))*(two)))-(two))))-(one)))**(two)'], [0.9948318439048904, '(((((((one)/((two)/((two)+(log(one)))))-(one))-((two)+(two)))-(one))+(log(one)))*(two))+(((one)*(((d_x_f0)**(two))/(two)))**(one))']]

time spent (in secs):256.0332918167114

---------------=============================----------------
iteration 78: we have seen 65658 different eqs
QD pool size: 1195, newbins: 2 replacements: 88

new avg training reward: 0.965
best reward: 0.567216179660296 with validation reward: 0.567216179660296

best eq: (((f0)/(((sqrt(one))/(cosh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(two)))) (((f0)/(((np.sqrt(one))/(np.cosh(np.cosh(two))))/((f0)+(np.sinh(np.cosh(two))))))-(x0))*((two)/(((x0)-(np.tan(x0)))*((np.log(two))**(two)))) []

and bests eqs by free parameter number are:
[[0.7521131143942071, '(((tanh(d_x_f0))-(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(x))+((f0)*((x)-(d_x_f0))))))'], [0.749137741313484, '(((x)/(sinh(cos(f0))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(two))+((arcsin(f0))*((cos(x))-(d_x_f0))))))'], [0.7494359544670213, '((((one)**(x))/(sinh(cos(x))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(two))+((arcsin(f0))*((cos(x))-(d_x_f0))))))'], [0.7490708679708695, '(((x)/((two)+(log(one))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(two))+((arcsin(f0))*((cos(x))-(d_x_f0))))))'], [0.6209810791141268, '(((f0)/(((one)/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*(x)))'], [0.5806468945305109, '(((f0)/(((sqrt(x))/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(one))))'], [0.567216179660296, '(((f0)/(((sqrt(one))/(cosh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(two))))'], [0.7903129443854604, '(exp((one)/(tanh(x))))**(((arctan((tan(x))+(((one)/((x)/(two)))-(((tan(x))*((f0)-(two)))-(two)))))*(two))-((f0)*(two)))'], [0.7859909541087691, '((((cosh(two))+(two))**(two))+(d_x_f0))/((x)*((x)/(((tan(two))/((one)-(exp(x))))+((f0)*((((two)/(two))**(two))-(d_x_f0))))))'], [0.7916096568132341, '(((f0)/(((sqrt(one))/((two)+(cos(one))))/((two)+(cosh((two)+(two))))))/(x))*((two)/(((x)-(tan(x)))*((tanh(log(two)))**(one))))'], [0.8591820955387632, '(((((one)/(((sqrt(one))/(f0))/((cosh(sinh((two)**(one))))+((one)/(tanh(x))))))**(one))-(two))*((exp(two))+(exp(two))))**(two)'], [0.8464557783459985, '(exp((one)/(tanh(x))))**(((arctan((two)+(((one)/((two)/(two)))-((((one)+(f0))*((one)*(two)))-(two)))))*(two))-((f0)*(two)))'], [0.9363972985348953, '((two)+(((d_x_f0)/(((one)/((one)*((one)+((((one)+(one))/(two))*((x)-((one)-(two)))))))/((f0)*(arctan(two)))))-(one)))**(two)'], [0.9903289690159258, '((one)+(((one)+((one)+(((((two)/((((f0)-(one))+(two))**(one)))/(x))*(((two)**(one))*(two)))-(two))))+(one)))**(two)'], [0.9948318439048904, '(((((((one)/((two)/((two)+(log(one)))))-(one))-((two)+(two)))-(one))+(log(one)))*(two))+(((one)*(((d_x_f0)**(two))/(two)))**(one))']]

time spent (in secs):260.5863106250763

---------------=============================----------------
iteration 79: we have seen 66672 different eqs
QD pool size: 1197, newbins: 2 replacements: 76

new avg training reward: 0.964
best reward: 0.567216179660296 with validation reward: 0.567216179660296

best eq: (((f0)/(((sqrt(one))/(cosh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(two)))) (((f0)/(((np.sqrt(one))/(np.cosh(np.cosh(two))))/((f0)+(np.sinh(np.cosh(two))))))-(x0))*((two)/(((x0)-(np.tan(x0)))*((np.log(two))**(two)))) []

and bests eqs by free parameter number are:
[[0.7521131143942071, '(((tanh(d_x_f0))-(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(x))+((f0)*((x)-(d_x_f0))))))'], [0.749137741313484, '(((x)/(sinh(cos(f0))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(two))+((arcsin(f0))*((cos(x))-(d_x_f0))))))'], [0.7494359544670213, '((((one)**(x))/(sinh(cos(x))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(two))+((arcsin(f0))*((cos(x))-(d_x_f0))))))'], [0.7490708679708695, '(((x)/((two)+(log(one))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(two))+((arcsin(f0))*((cos(x))-(d_x_f0))))))'], [0.6209810791141268, '(((f0)/(((one)/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*(x)))'], [0.5806468945305109, '(((f0)/(((sqrt(x))/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(one))))'], [0.567216179660296, '(((f0)/(((sqrt(one))/(cosh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(two))))'], [0.7903129443854604, '(exp((one)/(tanh(x))))**(((arctan((tan(x))+(((one)/((x)/(two)))-(((tan(x))*((f0)-(two)))-(two)))))*(two))-((f0)*(two)))'], [0.7859909541087691, '((((cosh(two))+(two))**(two))+(d_x_f0))/((x)*((x)/(((tan(two))/((one)-(exp(x))))+((f0)*((((two)/(two))**(two))-(d_x_f0))))))'], [0.7916096568132341, '(((f0)/(((sqrt(one))/((two)+(cos(one))))/((two)+(cosh((two)+(two))))))/(x))*((two)/(((x)-(tan(x)))*((tanh(log(two)))**(one))))'], [0.8591820955387632, '(((((one)/(((sqrt(one))/(f0))/((cosh(sinh((two)**(one))))+((one)/(tanh(x))))))**(one))-(two))*((exp(two))+(exp(two))))**(two)'], [0.8464557783459985, '(exp((one)/(tanh(x))))**(((arctan((two)+(((one)/((two)/(two)))-((((one)+(f0))*((one)*(two)))-(two)))))*(two))-((f0)*(two)))'], [0.9363972985348953, '((two)+(((d_x_f0)/(((one)/((one)*((one)+((((one)+(one))/(two))*((x)-((one)-(two)))))))/((f0)*(arctan(two)))))-(one)))**(two)'], [0.9903289690159258, '((one)+(((one)+((one)+(((((two)/((((f0)-(one))+(two))**(one)))/(x))*(((two)**(one))*(two)))-(two))))+(one)))**(two)'], [0.9948318439048904, '(((((((one)/((two)/((two)+(log(one)))))-(one))-((two)+(two)))-(one))+(log(one)))*(two))+(((one)*(((d_x_f0)**(two))/(two)))**(one))']]

time spent (in secs):265.1237049102783

---------------=============================----------------
iteration 80: we have seen 67688 different eqs
QD pool size: 1197, newbins: 0 replacements: 95

new avg training reward: 0.964
best reward: 0.567216179660296 with validation reward: 0.567216179660296

best eq: (((f0)/(((sqrt(one))/(cosh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(two)))) (((f0)/(((np.sqrt(one))/(np.cosh(np.cosh(two))))/((f0)+(np.sinh(np.cosh(two))))))-(x0))*((two)/(((x0)-(np.tan(x0)))*((np.log(two))**(two)))) []

and bests eqs by free parameter number are:
[[0.7521131143942071, '(((tanh(d_x_f0))-(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(x))+((f0)*((x)-(d_x_f0))))))'], [0.749137741313484, '(((x)/(sinh(cos(f0))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(two))+((arcsin(f0))*((cos(x))-(d_x_f0))))))'], [0.7494359544670213, '((((one)**(x))/(sinh(cos(x))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(two))+((arcsin(f0))*((cos(x))-(d_x_f0))))))'], [0.7490708679708695, '(((x)/((two)+(log(one))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(two))+((arcsin(f0))*((cos(x))-(d_x_f0))))))'], [0.6209810791141268, '(((f0)/(((one)/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*(x)))'], [0.5806468945305109, '(((f0)/(((sqrt(x))/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(one))))'], [0.567216179660296, '(((f0)/(((sqrt(one))/(cosh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(two))))'], [0.7591334563124039, '((((cosh(x))+(two))**(two))+(d_x_f0))/((x)*((x)/(((tan(two))/((one)-(exp(x))))+((f0)*((((two)/(two))**(two))-(d_x_f0))))))'], [0.7859909541087691, '((((cosh(two))+(two))**(two))+(d_x_f0))/((x)*((x)/(((tan(two))/((one)-(exp(x))))+((f0)*((((two)/(two))**(two))-(d_x_f0))))))'], [0.7916096568132341, '(((f0)/(((sqrt(one))/((two)+(cos(one))))/((two)+(cosh((two)+(two))))))/(x))*((two)/(((x)-(tan(x)))*((tanh(log(two)))**(one))))'], [0.8591820955387632, '(((((one)/(((sqrt(one))/(f0))/((cosh(sinh((two)**(one))))+((one)/(tanh(x))))))**(one))-(two))*((exp(two))+(exp(two))))**(two)'], [0.8464557783459985, '(exp((one)/(tanh(x))))**(((arctan((two)+(((one)/((two)/(two)))-((((one)+(f0))*((one)*(two)))-(two)))))*(two))-((f0)*(two)))'], [0.9363972985348953, '((two)+(((d_x_f0)/(((one)/((one)*((one)+((((one)+(one))/(two))*((x)-((one)-(two)))))))/((f0)*(arctan(two)))))-(one)))**(two)'], [0.9903289690159258, '((one)+(((one)+((one)+(((((two)/((((f0)-(one))+(two))**(one)))/(x))*(((two)**(one))*(two)))-(two))))+(one)))**(two)'], [0.9948318439048904, '(((((((one)/((two)/((two)+(log(one)))))-(one))-((two)+(two)))-(one))+(log(one)))*(two))+(((one)*(((d_x_f0)**(two))/(two)))**(one))']]

time spent (in secs):269.26398515701294

---------------=============================----------------
iteration 81: we have seen 68692 different eqs
QD pool size: 1198, newbins: 1 replacements: 74

new avg training reward: 0.963
best reward: 0.567216179660296 with validation reward: 0.567216179660296

best eq: (((f0)/(((sqrt(one))/(cosh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(two)))) (((f0)/(((np.sqrt(one))/(np.cosh(np.cosh(two))))/((f0)+(np.sinh(np.cosh(two))))))-(x0))*((two)/(((x0)-(np.tan(x0)))*((np.log(two))**(two)))) []

and bests eqs by free parameter number are:
[[0.7521131143942071, '(((tanh(d_x_f0))-(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(x))+((f0)*((x)-(d_x_f0))))))'], [0.749137741313484, '(((x)/(sinh(cos(f0))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(two))+((arcsin(f0))*((cos(x))-(d_x_f0))))))'], [0.7494359544670213, '((((one)**(x))/(sinh(cos(x))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(two))+((arcsin(f0))*((cos(x))-(d_x_f0))))))'], [0.7490708679708695, '(((x)/((two)+(log(one))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(two))+((arcsin(f0))*((cos(x))-(d_x_f0))))))'], [0.6209810791141268, '(((f0)/(((one)/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*(x)))'], [0.5806468945305109, '(((f0)/(((sqrt(x))/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(one))))'], [0.567216179660296, '(((f0)/(((sqrt(one))/(cosh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(two))))'], [0.7591334563124039, '((((cosh(x))+(two))**(two))+(d_x_f0))/((x)*((x)/(((tan(two))/((one)-(exp(x))))+((f0)*((((two)/(two))**(two))-(d_x_f0))))))'], [0.7859909541087691, '((((cosh(two))+(two))**(two))+(d_x_f0))/((x)*((x)/(((tan(two))/((one)-(exp(x))))+((f0)*((((two)/(two))**(two))-(d_x_f0))))))'], [0.7916096568132341, '(((f0)/(((sqrt(one))/((two)+(cos(one))))/((two)+(cosh((two)+(two))))))/(x))*((two)/(((x)-(tan(x)))*((tanh(log(two)))**(one))))'], [0.8358566435154835, '((((cosh(cosh(two)))+(two))*(two))-(cosh(arctan(one))))*((two)*(((one)/((one)+(two)))+((arcsin(one))*(cosh(cosh((two)-(f0)))))))'], [0.8464557783459985, '(exp((one)/(tanh(x))))**(((arctan((two)+(((one)/((two)/(two)))-((((one)+(f0))*((one)*(two)))-(two)))))*(two))-((f0)*(two)))'], [0.9363972985348953, '((two)+(((d_x_f0)/(((one)/((one)*((one)+((((one)+(one))/(two))*((x)-((one)-(two)))))))/((f0)*(arctan(two)))))-(one)))**(two)'], [0.9903289690159258, '((one)+(((one)+((one)+(((((two)/((((f0)-(one))+(two))**(one)))/(x))*(((two)**(one))*(two)))-(two))))+(one)))**(two)'], [0.9948318439048904, '(((((((one)/((two)/((two)+(log(one)))))-(one))-((two)+(two)))-(one))+(log(one)))*(two))+(((one)*(((d_x_f0)**(two))/(two)))**(one))']]

time spent (in secs):273.1762111186981

---------------=============================----------------
iteration 82: we have seen 69688 different eqs
QD pool size: 1199, newbins: 1 replacements: 78

new avg training reward: 0.962
best reward: 0.567216179660296 with validation reward: 0.567216179660296

best eq: (((f0)/(((sqrt(one))/(cosh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(two)))) (((f0)/(((np.sqrt(one))/(np.cosh(np.cosh(two))))/((f0)+(np.sinh(np.cosh(two))))))-(x0))*((two)/(((x0)-(np.tan(x0)))*((np.log(two))**(two)))) []

and bests eqs by free parameter number are:
[[0.7521131143942071, '(((tanh(d_x_f0))-(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(x))+((f0)*((x)-(d_x_f0))))))'], [0.749137741313484, '(((x)/(sinh(cos(f0))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(two))+((arcsin(f0))*((cos(x))-(d_x_f0))))))'], [0.7494359544670213, '((((one)**(x))/(sinh(cos(x))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(two))+((arcsin(f0))*((cos(x))-(d_x_f0))))))'], [0.7490708679708695, '(((x)/((two)+(log(one))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(two))+((arcsin(f0))*((cos(x))-(d_x_f0))))))'], [0.6209810791141268, '(((f0)/(((one)/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*(x)))'], [0.5806468945305109, '(((f0)/(((sqrt(x))/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(one))))'], [0.567216179660296, '(((f0)/(((sqrt(one))/(cosh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(two))))'], [0.7591334563124039, '((((cosh(x))+(two))**(two))+(d_x_f0))/((x)*((x)/(((tan(two))/((one)-(exp(x))))+((f0)*((((two)/(two))**(two))-(d_x_f0))))))'], [0.7859909541087691, '((((cosh(two))+(two))**(two))+(d_x_f0))/((x)*((x)/(((tan(two))/((one)-(exp(x))))+((f0)*((((two)/(two))**(two))-(d_x_f0))))))'], [0.7916096568132341, '(((f0)/(((sqrt(one))/((two)+(cos(one))))/((two)+(cosh((two)+(two))))))/(x))*((two)/(((x)-(tan(x)))*((tanh(log(two)))**(one))))'], [0.834383793609911, '((((cosh(cosh(two)))-(two))*(two))-(cosh(arctan(one))))*((two)*(((one)/((exp(two))+(two)))+((arcsin(one))*(cosh(cosh((two)-(f0)))))))'], [0.8464557783459985, '(exp((one)/(tanh(x))))**(((arctan((two)+(((one)/((two)/(two)))-((((one)+(f0))*((one)*(two)))-(two)))))*(two))-((f0)*(two)))'], [0.9363972985348953, '((two)+(((d_x_f0)/(((one)/((one)*((one)+((((one)+(one))/(two))*((x)-((one)-(two)))))))/((f0)*(arctan(two)))))-(one)))**(two)'], [0.9903289690159258, '((one)+(((one)+((one)+(((((two)/((((f0)-(one))+(two))**(one)))/(x))*(((two)**(one))*(two)))-(two))))+(one)))**(two)'], [0.9948318439048904, '(((((((one)/((two)/((two)+(log(one)))))-(one))-((two)+(two)))-(one))+(log(one)))*(two))+(((one)*(((d_x_f0)**(two))/(two)))**(one))']]

time spent (in secs):277.32127261161804

---------------=============================----------------
iteration 83: we have seen 70666 different eqs
QD pool size: 1199, newbins: 0 replacements: 78

new avg training reward: 0.962
best reward: 0.567216179660296 with validation reward: 0.567216179660296

best eq: (((f0)/(((sqrt(one))/(cosh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(two)))) (((f0)/(((np.sqrt(one))/(np.cosh(np.cosh(two))))/((f0)+(np.sinh(np.cosh(two))))))-(x0))*((two)/(((x0)-(np.tan(x0)))*((np.log(two))**(two)))) []

and bests eqs by free parameter number are:
[[0.7521131143942071, '(((tanh(d_x_f0))-(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(x))+((f0)*((x)-(d_x_f0))))))'], [0.749137741313484, '(((x)/(sinh(cos(f0))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(two))+((arcsin(f0))*((cos(x))-(d_x_f0))))))'], [0.7494359544670213, '((((one)**(x))/(sinh(cos(x))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(two))+((arcsin(f0))*((cos(x))-(d_x_f0))))))'], [0.7490708679708695, '(((x)/((two)+(log(one))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(two))+((arcsin(f0))*((cos(x))-(d_x_f0))))))'], [0.6209810791141268, '(((f0)/(((one)/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*(x)))'], [0.5806468945305109, '(((f0)/(((sqrt(x))/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(one))))'], [0.567216179660296, '(((f0)/(((sqrt(one))/(cosh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(two))))'], [0.7591334563124039, '((((cosh(x))+(two))**(two))+(d_x_f0))/((x)*((x)/(((tan(two))/((one)-(exp(x))))+((f0)*((((two)/(two))**(two))-(d_x_f0))))))'], [0.7859909541087691, '((((cosh(two))+(two))**(two))+(d_x_f0))/((x)*((x)/(((tan(two))/((one)-(exp(x))))+((f0)*((((two)/(two))**(two))-(d_x_f0))))))'], [0.7916096568132341, '(((f0)/(((sqrt(one))/((two)+(cos(one))))/((two)+(cosh((two)+(two))))))/(x))*((two)/(((x)-(tan(x)))*((tanh(log(two)))**(one))))'], [0.834383793609911, '((((cosh(cosh(two)))-(two))*(two))-(cosh(arctan(one))))*((two)*(((one)/((exp(two))+(two)))+((arcsin(one))*(cosh(cosh((two)-(f0)))))))'], [0.8343984513705502, '((((cosh(cosh(two)))-(two))*(two))-(cosh(arctan(one))))*((two)*(((one)/(((one)-(two))+(exp(two))))+((arcsin(one))*(cosh(cosh((two)-(f0)))))))'], [0.9363972985348953, '((two)+(((d_x_f0)/(((one)/((one)*((one)+((((one)+(one))/(two))*((x)-((one)-(two)))))))/((f0)*(arctan(two)))))-(one)))**(two)'], [0.9903289690159258, '((one)+(((one)+((one)+(((((two)/((((f0)-(one))+(two))**(one)))/(x))*(((two)**(one))*(two)))-(two))))+(one)))**(two)'], [0.9948318439048904, '(((((((one)/((two)/((two)+(log(one)))))-(one))-((two)+(two)))-(one))+(log(one)))*(two))+(((one)*(((d_x_f0)**(two))/(two)))**(one))']]

time spent (in secs):281.34331154823303

---------------=============================----------------
iteration 84: we have seen 71684 different eqs
QD pool size: 1200, newbins: 1 replacements: 87

new avg training reward: 0.961
best reward: 0.567216179660296 with validation reward: 0.567216179660296

best eq: (((f0)/(((sqrt(one))/(cosh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(two)))) (((f0)/(((np.sqrt(one))/(np.cosh(np.cosh(two))))/((f0)+(np.sinh(np.cosh(two))))))-(x0))*((two)/(((x0)-(np.tan(x0)))*((np.log(two))**(two)))) []

and bests eqs by free parameter number are:
[[0.7521131143942071, '(((tanh(d_x_f0))-(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(x))+((f0)*((x)-(d_x_f0))))))'], [0.749137741313484, '(((x)/(sinh(cos(f0))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(two))+((arcsin(f0))*((cos(x))-(d_x_f0))))))'], [0.7494359544670213, '((((one)**(x))/(sinh(cos(x))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(two))+((arcsin(f0))*((cos(x))-(d_x_f0))))))'], [0.7490708679708695, '(((x)/((two)+(log(one))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(two))+((arcsin(f0))*((cos(x))-(d_x_f0))))))'], [0.6209810791141268, '(((f0)/(((one)/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*(x)))'], [0.5806468945305109, '(((f0)/(((sqrt(x))/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(one))))'], [0.567216179660296, '(((f0)/(((sqrt(one))/(cosh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(two))))'], [0.7020574173512898, '(((f0)/(((sqrt(one))/(sinh(cosh(two))))/((one)+(sinh(cosh(two))))))-(d_x_f0))*((two)/(((x)-(tan(x)))*((one)**(one))))'], [0.7859909541087691, '((((cosh(two))+(two))**(two))+(d_x_f0))/((x)*((x)/(((tan(two))/((one)-(exp(x))))+((f0)*((((two)/(two))**(two))-(d_x_f0))))))'], [0.7916096568132341, '(((f0)/(((sqrt(one))/((two)+(cos(one))))/((two)+(cosh((two)+(two))))))/(x))*((two)/(((x)-(tan(x)))*((tanh(log(two)))**(one))))'], [0.8343694906836925, '((((cosh(cosh(two)))-(two))*(two))-(cosh(arctan(one))))*((two)*(((x)/(((one)-(two))+(exp(two))))+((arcsin(one))*(cosh(cosh((two)-(f0)))))))'], [0.8343984513705502, '((((cosh(cosh(two)))-(two))*(two))-(cosh(arctan(one))))*((two)*(((one)/(((one)-(two))+(exp(two))))+((arcsin(one))*(cosh(cosh((two)-(f0)))))))'], [0.9363972985348953, '((two)+(((d_x_f0)/(((one)/((one)*((one)+((((one)+(one))/(two))*((x)-((one)-(two)))))))/((f0)*(arctan(two)))))-(one)))**(two)'], [0.9903289690159258, '((one)+(((one)+((one)+(((((two)/((((f0)-(one))+(two))**(one)))/(x))*(((two)**(one))*(two)))-(two))))+(one)))**(two)'], [0.9948318439048904, '(((((((one)/((two)/((two)+(log(one)))))-(one))-((two)+(two)))-(one))+(log(one)))*(two))+(((one)*(((d_x_f0)**(two))/(two)))**(one))']]

time spent (in secs):285.80429220199585

---------------=============================----------------
iteration 85: we have seen 72697 different eqs
QD pool size: 1200, newbins: 0 replacements: 73

new avg training reward: 0.96
best reward: 0.567216179660296 with validation reward: 0.567216179660296

best eq: (((f0)/(((sqrt(one))/(cosh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(two)))) (((f0)/(((np.sqrt(one))/(np.cosh(np.cosh(two))))/((f0)+(np.sinh(np.cosh(two))))))-(x0))*((two)/(((x0)-(np.tan(x0)))*((np.log(two))**(two)))) []

and bests eqs by free parameter number are:
[[0.7521131143942071, '(((tanh(d_x_f0))-(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(x))+((f0)*((x)-(d_x_f0))))))'], [0.749137741313484, '(((x)/(sinh(cos(f0))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(two))+((arcsin(f0))*((cos(x))-(d_x_f0))))))'], [0.7494359544670213, '((((one)**(x))/(sinh(cos(x))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(two))+((arcsin(f0))*((cos(x))-(d_x_f0))))))'], [0.7490708679708695, '(((x)/((two)+(log(one))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(two))+((arcsin(f0))*((cos(x))-(d_x_f0))))))'], [0.6209810791141268, '(((f0)/(((one)/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*(x)))'], [0.5806468945305109, '(((f0)/(((sqrt(x))/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(one))))'], [0.567216179660296, '(((f0)/(((sqrt(one))/(cosh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(two))))'], [0.7020574173512898, '(((f0)/(((sqrt(one))/(sinh(cosh(two))))/((one)+(sinh(cosh(two))))))-(d_x_f0))*((two)/(((x)-(tan(x)))*((one)**(one))))'], [0.7859909541087691, '((((cosh(two))+(two))**(two))+(d_x_f0))/((x)*((x)/(((tan(two))/((one)-(exp(x))))+((f0)*((((two)/(two))**(two))-(d_x_f0))))))'], [0.7916096568132341, '(((f0)/(((sqrt(one))/((two)+(cos(one))))/((two)+(cosh((two)+(two))))))/(x))*((two)/(((x)-(tan(x)))*((tanh(log(two)))**(one))))'], [0.8343694906836925, '((((cosh(cosh(two)))-(two))*(two))-(cosh(arctan(one))))*((two)*(((x)/(((one)-(two))+(exp(two))))+((arcsin(one))*(cosh(cosh((two)-(f0)))))))'], [0.8343984513705502, '((((cosh(cosh(two)))-(two))*(two))-(cosh(arctan(one))))*((two)*(((one)/(((one)-(two))+(exp(two))))+((arcsin(one))*(cosh(cosh((two)-(f0)))))))'], [0.9363972985348953, '((two)+(((d_x_f0)/(((one)/((one)*((one)+((((one)+(one))/(two))*((x)-((one)-(two)))))))/((f0)*(arctan(two)))))-(one)))**(two)'], [0.9903289690159258, '((one)+(((one)+((one)+(((((two)/((((f0)-(one))+(two))**(one)))/(x))*(((two)**(one))*(two)))-(two))))+(one)))**(two)'], [0.9948318439048904, '(((((((one)/((two)/((two)+(log(one)))))-(one))-((two)+(two)))-(one))+(log(one)))*(two))+(((one)*(((d_x_f0)**(two))/(two)))**(one))']]

time spent (in secs):289.7549045085907

---------------=============================----------------
iteration 86: we have seen 73695 different eqs
QD pool size: 1204, newbins: 4 replacements: 84

new avg training reward: 0.96
best reward: 0.567216179660296 with validation reward: 0.567216179660296

best eq: (((f0)/(((sqrt(one))/(cosh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(two)))) (((f0)/(((np.sqrt(one))/(np.cosh(np.cosh(two))))/((f0)+(np.sinh(np.cosh(two))))))-(x0))*((two)/(((x0)-(np.tan(x0)))*((np.log(two))**(two)))) []

and bests eqs by free parameter number are:
[[0.7521131143942071, '(((tanh(d_x_f0))-(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(x))+((f0)*((x)-(d_x_f0))))))'], [0.749137741313484, '(((x)/(sinh(cos(f0))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(two))+((arcsin(f0))*((cos(x))-(d_x_f0))))))'], [0.7494359544670213, '((((one)**(x))/(sinh(cos(x))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(two))+((arcsin(f0))*((cos(x))-(d_x_f0))))))'], [0.7490469580139392, '(((x)/((two)+(log(two))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(two))+((arcsin(f0))*((cos(x))-(d_x_f0))))))'], [0.6209810791141268, '(((f0)/(((one)/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*(x)))'], [0.5806468945305109, '(((f0)/(((sqrt(x))/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(one))))'], [0.567216179660296, '(((f0)/(((sqrt(one))/(cosh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(two))))'], [0.7020574173512898, '(((f0)/(((sqrt(one))/(sinh(cosh(two))))/((one)+(sinh(cosh(two))))))-(d_x_f0))*((two)/(((x)-(tan(x)))*((one)**(one))))'], [0.7617160414312815, '((((cosh(one))+(two))**(two))+(d_x_f0))/((x)*((x)/(((tan(two))/((one)-(exp(x))))+((f0)*((((two)/(two))**(two))-(d_x_f0))))))'], [0.7916096568132341, '(((f0)/(((sqrt(one))/((two)+(cos(one))))/((two)+(cosh((two)+(two))))))/(x))*((two)/(((x)-(tan(x)))*((tanh(log(two)))**(one))))'], [0.8343694906836925, '((((cosh(cosh(two)))-(two))*(two))-(cosh(arctan(one))))*((two)*(((x)/(((one)-(two))+(exp(two))))+((arcsin(one))*(cosh(cosh((two)-(f0)))))))'], [0.8343984513705502, '((((cosh(cosh(two)))-(two))*(two))-(cosh(arctan(one))))*((two)*(((one)/(((one)-(two))+(exp(two))))+((arcsin(one))*(cosh(cosh((two)-(f0)))))))'], [0.9363972985348953, '((two)+(((d_x_f0)/(((one)/((one)*((one)+((((one)+(one))/(two))*((x)-((one)-(two)))))))/((f0)*(arctan(two)))))-(one)))**(two)'], [0.9903289690159258, '((one)+(((one)+((one)+(((((two)/((((f0)-(one))+(two))**(one)))/(x))*(((two)**(one))*(two)))-(two))))+(one)))**(two)'], [0.9948318439048904, '(((((((one)/((two)/((two)+(log(one)))))-(one))-((two)+(two)))-(one))+(log(one)))*(two))+(((one)*(((d_x_f0)**(two))/(two)))**(one))']]

time spent (in secs):293.7011637687683

---------------=============================----------------
iteration 87: we have seen 74708 different eqs
QD pool size: 1206, newbins: 2 replacements: 72

new avg training reward: 0.959
best reward: 0.567216179660296 with validation reward: 0.567216179660296

best eq: (((f0)/(((sqrt(one))/(cosh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(two)))) (((f0)/(((np.sqrt(one))/(np.cosh(np.cosh(two))))/((f0)+(np.sinh(np.cosh(two))))))-(x0))*((two)/(((x0)-(np.tan(x0)))*((np.log(two))**(two)))) []

and bests eqs by free parameter number are:
[[0.7521131143942071, '(((tanh(d_x_f0))-(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(x))+((f0)*((x)-(d_x_f0))))))'], [0.749137741313484, '(((x)/(sinh(cos(f0))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(two))+((arcsin(f0))*((cos(x))-(d_x_f0))))))'], [0.7494359544670213, '((((one)**(x))/(sinh(cos(x))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(two))+((arcsin(f0))*((cos(x))-(d_x_f0))))))'], [0.7490469580139392, '(((x)/((two)+(log(two))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(two))+((arcsin(f0))*((cos(x))-(d_x_f0))))))'], [0.6209810791141268, '(((f0)/(((one)/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*(x)))'], [0.5806468945305109, '(((f0)/(((sqrt(x))/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(one))))'], [0.567216179660296, '(((f0)/(((sqrt(one))/(cosh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(two))))'], [0.7020574173512898, '(((f0)/(((sqrt(one))/(sinh(cosh(two))))/((one)+(sinh(cosh(two))))))-(d_x_f0))*((two)/(((x)-(tan(x)))*((one)**(one))))'], [0.7617160414312815, '((((cosh(one))+(two))**(two))+(d_x_f0))/((x)*((x)/(((tan(two))/((one)-(exp(x))))+((f0)*((((two)/(two))**(two))-(d_x_f0))))))'], [0.7916096568132341, '(((f0)/(((sqrt(one))/((two)+(cos(one))))/((two)+(cosh((two)+(two))))))/(x))*((two)/(((x)-(tan(x)))*((tanh(log(two)))**(one))))'], [0.8343694906836925, '((((cosh(cosh(two)))-(two))*(two))-(cosh(arctan(one))))*((two)*(((x)/(((one)-(two))+(exp(two))))+((arcsin(one))*(cosh(cosh((two)-(f0)))))))'], [0.8074837625993722, '(exp((one)/(tanh(x))))**(((arctan((two)+(((one)/((two)/(two)))-((((one)+(f0))*((one)-(two)))-(two)))))*(two))-((f0)*(two)))'], [0.9363972985348953, '((two)+(((d_x_f0)/(((one)/((one)*((one)+((((one)+(one))/(two))*((x)-((one)-(two)))))))/((f0)*(arctan(two)))))-(one)))**(two)'], [0.9903289690159258, '((one)+(((one)+((one)+(((((two)/((((f0)-(one))+(two))**(one)))/(x))*(((two)**(one))*(two)))-(two))))+(one)))**(two)'], [0.9948318439048904, '(((((((one)/((two)/((two)+(log(one)))))-(one))-((two)+(two)))-(one))+(log(one)))*(two))+(((one)*(((d_x_f0)**(two))/(two)))**(one))']]

time spent (in secs):297.97355031967163

---------------=============================----------------
iteration 88: we have seen 75693 different eqs
QD pool size: 1207, newbins: 1 replacements: 76

new avg training reward: 0.958
best reward: 0.567216179660296 with validation reward: 0.567216179660296

best eq: (((f0)/(((sqrt(one))/(cosh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(two)))) (((f0)/(((np.sqrt(one))/(np.cosh(np.cosh(two))))/((f0)+(np.sinh(np.cosh(two))))))-(x0))*((two)/(((x0)-(np.tan(x0)))*((np.log(two))**(two)))) []

and bests eqs by free parameter number are:
[[0.7521131143942071, '(((tanh(d_x_f0))-(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(x))+((f0)*((x)-(d_x_f0))))))'], [0.749137741313484, '(((x)/(sinh(cos(f0))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(two))+((arcsin(f0))*((cos(x))-(d_x_f0))))))'], [0.7494359544670213, '((((one)**(x))/(sinh(cos(x))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(two))+((arcsin(f0))*((cos(x))-(d_x_f0))))))'], [0.7490469580139392, '(((x)/((two)+(log(two))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(two))+((arcsin(f0))*((cos(x))-(d_x_f0))))))'], [0.6209810791141268, '(((f0)/(((one)/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*(x)))'], [0.5806468945305109, '(((f0)/(((sqrt(x))/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(one))))'], [0.567216179660296, '(((f0)/(((sqrt(one))/(cosh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(two))))'], [0.7020574173512898, '(((f0)/(((sqrt(one))/(sinh(cosh(two))))/((one)+(sinh(cosh(two))))))-(d_x_f0))*((two)/(((x)-(tan(x)))*((one)**(one))))'], [0.7617160414312815, '((((cosh(one))+(two))**(two))+(d_x_f0))/((x)*((x)/(((tan(two))/((one)-(exp(x))))+((f0)*((((two)/(two))**(two))-(d_x_f0))))))'], [0.7916096568132341, '(((f0)/(((sqrt(one))/((two)+(cos(one))))/((two)+(cosh((two)+(two))))))/(x))*((two)/(((x)-(tan(x)))*((tanh(log(two)))**(one))))'], [0.8343694906836925, '((((cosh(cosh(two)))-(two))*(two))-(cosh(arctan(one))))*((two)*(((x)/(((one)-(two))+(exp(two))))+((arcsin(one))*(cosh(cosh((two)-(f0)))))))'], [0.8074837625993722, '(exp((one)/(tanh(x))))**(((arctan((two)+(((one)/((two)/(two)))-((((one)+(f0))*((one)-(two)))-(two)))))*(two))-((f0)*(two)))'], [0.9363972985348953, '((two)+(((d_x_f0)/(((one)/((one)*((one)+((((one)+(one))/(two))*((x)-((one)-(two)))))))/((f0)*(arctan(two)))))-(one)))**(two)'], [0.9903289690159258, '((one)+(((one)+((one)+(((((two)/((((f0)-(one))+(two))**(one)))/(x))*(((two)**(one))*(two)))-(two))))+(one)))**(two)'], [0.9948318439048904, '(((((((one)/((two)/((two)+(log(one)))))-(one))-((two)+(two)))-(one))+(log(one)))*(two))+(((one)*(((d_x_f0)**(two))/(two)))**(one))']]

time spent (in secs):302.21571230888367

---------------=============================----------------
iteration 89: we have seen 76679 different eqs
QD pool size: 1209, newbins: 2 replacements: 77

new avg training reward: 0.958
best reward: 0.567216179660296 with validation reward: 0.567216179660296

best eq: (((f0)/(((sqrt(one))/(cosh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(two)))) (((f0)/(((np.sqrt(one))/(np.cosh(np.cosh(two))))/((f0)+(np.sinh(np.cosh(two))))))-(x0))*((two)/(((x0)-(np.tan(x0)))*((np.log(two))**(two)))) []

and bests eqs by free parameter number are:
[[0.7521131143942071, '(((tanh(d_x_f0))-(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(x))+((f0)*((x)-(d_x_f0))))))'], [0.749137741313484, '(((x)/(sinh(cos(f0))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(two))+((arcsin(f0))*((cos(x))-(d_x_f0))))))'], [0.7494359544670213, '((((one)**(x))/(sinh(cos(x))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(two))+((arcsin(f0))*((cos(x))-(d_x_f0))))))'], [0.7490469580139392, '(((x)/((two)+(log(two))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(two))+((arcsin(f0))*((cos(x))-(d_x_f0))))))'], [0.6209810791141268, '(((f0)/(((one)/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*(x)))'], [0.5806468945305109, '(((f0)/(((sqrt(x))/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(one))))'], [0.567216179660296, '(((f0)/(((sqrt(one))/(cosh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(two))))'], [0.7020574173512898, '(((f0)/(((sqrt(one))/(sinh(cosh(two))))/((one)+(sinh(cosh(two))))))-(d_x_f0))*((two)/(((x)-(tan(x)))*((one)**(one))))'], [0.7617160414312815, '((((cosh(one))+(two))**(two))+(d_x_f0))/((x)*((x)/(((tan(two))/((one)-(exp(x))))+((f0)*((((two)/(two))**(two))-(d_x_f0))))))'], [0.7916096568132341, '(((f0)/(((sqrt(one))/((two)+(cos(one))))/((two)+(cosh((two)+(two))))))/(x))*((two)/(((x)-(tan(x)))*((tanh(log(two)))**(one))))'], [0.8343694906836925, '((((cosh(cosh(two)))-(two))*(two))-(cosh(arctan(one))))*((two)*(((x)/(((one)-(two))+(exp(two))))+((arcsin(one))*(cosh(cosh((two)-(f0)))))))'], [0.8074837625993722, '(exp((one)/(tanh(x))))**(((arctan((two)+(((one)/((two)/(two)))-((((one)+(f0))*((one)-(two)))-(two)))))*(two))-((f0)*(two)))'], [0.9363972985348953, '((two)+(((d_x_f0)/(((one)/((one)*((one)+((((one)+(one))/(two))*((x)-((one)-(two)))))))/((f0)*(arctan(two)))))-(one)))**(two)'], [0.9903289690159258, '((one)+(((one)+((one)+(((((two)/((((f0)-(one))+(two))**(one)))/(x))*(((two)**(one))*(two)))-(two))))+(one)))**(two)'], [0.9948318439048904, '(((((((one)/((two)/((two)+(log(one)))))-(one))-((two)+(two)))-(one))+(log(one)))*(two))+(((one)*(((d_x_f0)**(two))/(two)))**(one))']]

time spent (in secs):306.5280086994171

---------------=============================----------------
iteration 90: we have seen 77713 different eqs
QD pool size: 1211, newbins: 2 replacements: 75

new avg training reward: 0.957
best reward: 0.567216179660296 with validation reward: 0.567216179660296

best eq: (((f0)/(((sqrt(one))/(cosh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(two)))) (((f0)/(((np.sqrt(one))/(np.cosh(np.cosh(two))))/((f0)+(np.sinh(np.cosh(two))))))-(x0))*((two)/(((x0)-(np.tan(x0)))*((np.log(two))**(two)))) []

and bests eqs by free parameter number are:
[[0.7516820455977478, '(((tanh(d_x_f0))-(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((exp(x))+((f0)*((x)-(d_x_f0))))))'], [0.749137741313484, '(((x)/(sinh(cos(f0))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(two))+((arcsin(f0))*((cos(x))-(d_x_f0))))))'], [0.7494359544670213, '((((one)**(x))/(sinh(cos(x))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(two))+((arcsin(f0))*((cos(x))-(d_x_f0))))))'], [0.7490469580139392, '(((x)/((two)+(log(two))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(two))+((arcsin(f0))*((cos(x))-(d_x_f0))))))'], [0.6209810791141268, '(((f0)/(((one)/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*(x)))'], [0.5806468945305109, '(((f0)/(((sqrt(x))/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(one))))'], [0.567216179660296, '(((f0)/(((sqrt(one))/(cosh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(two))))'], [0.7020574173512898, '(((f0)/(((sqrt(one))/(sinh(cosh(two))))/((one)+(sinh(cosh(two))))))-(d_x_f0))*((two)/(((x)-(tan(x)))*((one)**(one))))'], [0.7617160414312815, '((((cosh(one))+(two))**(two))+(d_x_f0))/((x)*((x)/(((tan(two))/((one)-(exp(x))))+((f0)*((((two)/(two))**(two))-(d_x_f0))))))'], [0.7916096568132341, '(((f0)/(((sqrt(one))/((two)+(cos(one))))/((two)+(cosh((two)+(two))))))/(x))*((two)/(((x)-(tan(x)))*((tanh(log(two)))**(one))))'], [0.8201470110742224, '(exp((one)/(tanh(x))))**(((arctan((two)+(((x)/((two)/(two)))-((((one)+(f0))*((one)-(two)))-(two)))))*(two))-((f0)*(two)))'], [0.8074837625993722, '(exp((one)/(tanh(x))))**(((arctan((two)+(((one)/((two)/(two)))-((((one)+(f0))*((one)-(two)))-(two)))))*(two))-((f0)*(two)))'], [0.9363972985348953, '((two)+(((d_x_f0)/(((one)/((one)*((one)+((((one)+(one))/(two))*((x)-((one)-(two)))))))/((f0)*(arctan(two)))))-(one)))**(two)'], [0.8515327465458298, '(((two)+(((one)+((two)+(((((two)/(((f0)+(one))**(one)))/(x))*(((two)**(one))*(two)))-(one))))-(one)))**((one)+(x)))**(two)'], [0.9948318439048904, '(((((((one)/((two)/((two)+(log(one)))))-(one))-((two)+(two)))-(one))+(log(one)))*(two))+(((one)*(((d_x_f0)**(two))/(two)))**(one))']]

time spent (in secs):310.6671521663666

---------------=============================----------------
iteration 91: we have seen 78721 different eqs
QD pool size: 1212, newbins: 1 replacements: 72

new avg training reward: 0.956
best reward: 0.567216179660296 with validation reward: 0.567216179660296

best eq: (((f0)/(((sqrt(one))/(cosh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(two)))) (((f0)/(((np.sqrt(one))/(np.cosh(np.cosh(two))))/((f0)+(np.sinh(np.cosh(two))))))-(x0))*((two)/(((x0)-(np.tan(x0)))*((np.log(two))**(two)))) []

and bests eqs by free parameter number are:
[[0.7516820455977478, '(((tanh(d_x_f0))-(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((exp(x))+((f0)*((x)-(d_x_f0))))))'], [0.749137741313484, '(((x)/(sinh(cos(f0))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(two))+((arcsin(f0))*((cos(x))-(d_x_f0))))))'], [0.7494359544670213, '((((one)**(x))/(sinh(cos(x))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(two))+((arcsin(f0))*((cos(x))-(d_x_f0))))))'], [0.7490469580139392, '(((x)/((two)+(log(two))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(two))+((arcsin(f0))*((cos(x))-(d_x_f0))))))'], [0.6209810791141268, '(((f0)/(((one)/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*(x)))'], [0.5806468945305109, '(((f0)/(((sqrt(x))/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(one))))'], [0.567216179660296, '(((f0)/(((sqrt(one))/(cosh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(two))))'], [0.7020574173512898, '(((f0)/(((sqrt(one))/(sinh(cosh(two))))/((one)+(sinh(cosh(two))))))-(d_x_f0))*((two)/(((x)-(tan(x)))*((one)**(one))))'], [0.7617160414312815, '((((cosh(one))+(two))**(two))+(d_x_f0))/((x)*((x)/(((tan(two))/((one)-(exp(x))))+((f0)*((((two)/(two))**(two))-(d_x_f0))))))'], [0.7904969262815446, '(exp((one)/(tanh(x))))**(((arctan(((two)+(two))+(((one)+((two)/((two)+((cosh(f0))-(two)))))-(f0))))*(two))-((f0)*(two)))'], [0.7928616295758076, '(exp((one)/(tanh(x))))**(((arctan((two)+(((one)/((x)/(two)))-((((one)+(f0))*((one)-(two)))-(two)))))*(two))-((f0)*(two)))'], [0.8074837625993722, '(exp((one)/(tanh(x))))**(((arctan((two)+(((one)/((two)/(two)))-((((one)+(f0))*((one)-(two)))-(two)))))*(two))-((f0)*(two)))'], [0.9363972985348953, '((two)+(((d_x_f0)/(((one)/((one)*((one)+((((one)+(one))/(two))*((x)-((one)-(two)))))))/((f0)*(arctan(two)))))-(one)))**(two)'], [0.8515327465458298, '(((two)+(((one)+((two)+(((((two)/(((f0)+(one))**(one)))/(x))*(((two)**(one))*(two)))-(one))))-(one)))**((one)+(x)))**(two)'], [0.9948318439048904, '(((((((one)/((two)/((two)+(log(one)))))-(one))-((two)+(two)))-(one))+(log(one)))*(two))+(((one)*(((d_x_f0)**(two))/(two)))**(one))']]

time spent (in secs):314.6358234882355

---------------=============================----------------
iteration 92: we have seen 79736 different eqs
QD pool size: 1214, newbins: 2 replacements: 60

new avg training reward: 0.956
best reward: 0.567216179660296 with validation reward: 0.567216179660296

best eq: (((f0)/(((sqrt(one))/(cosh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(two)))) (((f0)/(((np.sqrt(one))/(np.cosh(np.cosh(two))))/((f0)+(np.sinh(np.cosh(two))))))-(x0))*((two)/(((x0)-(np.tan(x0)))*((np.log(two))**(two)))) []

and bests eqs by free parameter number are:
[[0.7516820455977478, '(((tanh(d_x_f0))-(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((exp(x))+((f0)*((x)-(d_x_f0))))))'], [0.749137741313484, '(((x)/(sinh(cos(f0))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(two))+((arcsin(f0))*((cos(x))-(d_x_f0))))))'], [0.7494359544670213, '((((one)**(x))/(sinh(cos(x))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(two))+((arcsin(f0))*((cos(x))-(d_x_f0))))))'], [0.7490469580139392, '(((x)/((two)+(log(two))))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(two))+((arcsin(f0))*((cos(x))-(d_x_f0))))))'], [0.6209810791141268, '(((f0)/(((one)/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*(x)))'], [0.5806468945305109, '(((f0)/(((sqrt(x))/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(one))))'], [0.567216179660296, '(((f0)/(((sqrt(one))/(cosh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(two))))'], [0.6695801694457012, '(((f0)/(((sqrt(one))/(sinh(cosh(two))))/((one)+(sinh(cosh(two))))))-(d_x_f0))*((two)/(((x)-(arcsin(x)))*((one)**(one))))'], [0.7617160414312815, '((((cosh(one))+(two))**(two))+(d_x_f0))/((x)*((x)/(((tan(two))/((one)-(exp(x))))+((f0)*((((two)/(two))**(two))-(d_x_f0))))))'], [0.7904969262815446, '(exp((one)/(tanh(x))))**(((arctan(((two)+(two))+(((one)+((two)/((two)+((cosh(f0))-(two)))))-(f0))))*(two))-((f0)*(two)))'], [0.7928616295758076, '(exp((one)/(tanh(x))))**(((arctan((two)+(((one)/((x)/(two)))-((((one)+(f0))*((one)-(two)))-(two)))))*(two))-((f0)*(two)))'], [0.8074837625993722, '(exp((one)/(tanh(x))))**(((arctan((two)+(((one)/((two)/(two)))-((((one)+(f0))*((one)-(two)))-(two)))))*(two))-((f0)*(two)))'], [0.9363972985348953, '((two)+(((d_x_f0)/(((one)/((one)*((one)+((((one)+(one))/(two))*((x)-((one)-(two)))))))/((f0)*(arctan(two)))))-(one)))**(two)'], [0.8515327465458298, '(((two)+(((one)+((two)+(((((two)/(((f0)+(one))**(one)))/(x))*(((two)**(one))*(two)))-(one))))-(one)))**((one)+(x)))**(two)'], [0.9948318439048904, '(((((((one)/((two)/((two)+(log(one)))))-(one))-((two)+(two)))-(one))+(log(one)))*(two))+(((one)*(((d_x_f0)**(two))/(two)))**(one))']]

time spent (in secs):318.88104128837585

---------------=============================----------------
iteration 93: we have seen 80735 different eqs
QD pool size: 1214, newbins: 0 replacements: 71

new avg training reward: 0.955
best reward: 0.5656303704317529 with validation reward: 0.5656303704317529

best eq: (((f0)/(((cos(one))/(cosh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(x)))) (((f0)/(((np.cos(one))/(np.cosh(np.cosh(two))))/((f0)+(np.sinh(np.cosh(two))))))-(x0))*((two)/(((x0)-(np.tan(x0)))*((np.log(two))**(x0)))) []

and bests eqs by free parameter number are:
[[0.7516820455977478, '(((tanh(d_x_f0))-(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((exp(x))+((f0)*((x)-(d_x_f0))))))'], [0.7478360965425886, '((cosh(f0))*(d_x_f0))/((tan(arcsin(x)))*((x)/(((f0)+(x))+((f0)*((two)-(d_x_f0))))))'], [0.7482421418741767, '((((one)**(x))/(cos(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(two))+((tan(f0))*((cos(f0))-(d_x_f0))))))'], [0.7488493757372773, '((f0)+(d_x_f0))/((arcsin(arcsin(x)))*((x)/(((tan(two))/((one)-(exp(x))))+((f0)*((exp(two))-(d_x_f0))))))'], [0.6209810791141268, '(((f0)/(((one)/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*(x)))'], [0.5656303704317529, '(((f0)/(((cos(one))/(cosh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(x))))'], [0.567216179660296, '(((f0)/(((sqrt(one))/(cosh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(two))))'], [0.6695801694457012, '(((f0)/(((sqrt(one))/(sinh(cosh(two))))/((one)+(sinh(cosh(two))))))-(d_x_f0))*((two)/(((x)-(arcsin(x)))*((one)**(one))))'], [0.7617160414312815, '((((cosh(one))+(two))**(two))+(d_x_f0))/((x)*((x)/(((tan(two))/((one)-(exp(x))))+((f0)*((((two)/(two))**(two))-(d_x_f0))))))'], [0.7904969262815446, '(exp((one)/(tanh(x))))**(((arctan(((two)+(two))+(((one)+((two)/((two)+((cosh(f0))-(two)))))-(f0))))*(two))-((f0)*(two)))'], [0.7928616295758076, '(exp((one)/(tanh(x))))**(((arctan((two)+(((one)/((x)/(two)))-((((one)+(f0))*((one)-(two)))-(two)))))*(two))-((f0)*(two)))'], [0.8074837625993722, '(exp((one)/(tanh(x))))**(((arctan((two)+(((one)/((two)/(two)))-((((one)+(f0))*((one)-(two)))-(two)))))*(two))-((f0)*(two)))'], [0.9363972985348953, '((two)+(((d_x_f0)/(((one)/((one)*((one)+((((one)+(one))/(two))*((x)-((one)-(two)))))))/((f0)*(arctan(two)))))-(one)))**(two)'], [0.8515327465458298, '(((two)+(((one)+((two)+(((((two)/(((f0)+(one))**(one)))/(x))*(((two)**(one))*(two)))-(one))))-(one)))**((one)+(x)))**(two)'], [0.9948318439048904, '(((((((one)/((two)/((two)+(log(one)))))-(one))-((two)+(two)))-(one))+(log(one)))*(two))+(((one)*(((d_x_f0)**(two))/(two)))**(one))']]

time spent (in secs):323.21685791015625

---------------=============================----------------
iteration 94: we have seen 81757 different eqs
QD pool size: 1215, newbins: 1 replacements: 97

new avg training reward: 0.955
best reward: 0.5656303704317529 with validation reward: 0.5656303704317529

best eq: (((f0)/(((cos(one))/(cosh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(x)))) (((f0)/(((np.cos(one))/(np.cosh(np.cosh(two))))/((f0)+(np.sinh(np.cosh(two))))))-(x0))*((two)/(((x0)-(np.tan(x0)))*((np.log(two))**(x0)))) []

and bests eqs by free parameter number are:
[[0.7516820455977478, '(((tanh(d_x_f0))-(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((exp(x))+((f0)*((x)-(d_x_f0))))))'], [0.7478360965425886, '((cosh(f0))*(d_x_f0))/((tan(arcsin(x)))*((x)/(((f0)+(x))+((f0)*((two)-(d_x_f0))))))'], [0.7482421418741767, '((((one)**(x))/(cos(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((cosh(two))+((tan(f0))*((cos(f0))-(d_x_f0))))))'], [0.7488493757372773, '((f0)+(d_x_f0))/((arcsin(arcsin(x)))*((x)/(((tan(two))/((one)-(exp(x))))+((f0)*((exp(two))-(d_x_f0))))))'], [0.6209810791141268, '(((f0)/(((one)/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*(x)))'], [0.5656303704317529, '(((f0)/(((cos(one))/(cosh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(x))))'], [0.567216179660296, '(((f0)/(((sqrt(one))/(cosh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(two))))'], [0.6695801694457012, '(((f0)/(((sqrt(one))/(sinh(cosh(two))))/((one)+(sinh(cosh(two))))))-(d_x_f0))*((two)/(((x)-(arcsin(x)))*((one)**(one))))'], [0.7617160414312815, '((((cosh(one))+(two))**(two))+(d_x_f0))/((x)*((x)/(((tan(two))/((one)-(exp(x))))+((f0)*((((two)/(two))**(two))-(d_x_f0))))))'], [0.7904969262815446, '(exp((one)/(tanh(x))))**(((arctan(((two)+(two))+(((one)+((two)/((two)+((cosh(f0))-(two)))))-(f0))))*(two))-((f0)*(two)))'], [0.7928616295758076, '(exp((one)/(tanh(x))))**(((arctan((two)+(((one)/((x)/(two)))-((((one)+(f0))*((one)-(two)))-(two)))))*(two))-((f0)*(two)))'], [0.8074837625993722, '(exp((one)/(tanh(x))))**(((arctan((two)+(((one)/((two)/(two)))-((((one)+(f0))*((one)-(two)))-(two)))))*(two))-((f0)*(two)))'], [0.9363972985348953, '((two)+(((d_x_f0)/(((one)/((one)*((one)+((((one)+(one))/(two))*((x)-((one)-(two)))))))/((f0)*(arctan(two)))))-(one)))**(two)'], [0.8515327465458298, '(((two)+(((one)+((two)+(((((two)/(((f0)+(one))**(one)))/(x))*(((two)**(one))*(two)))-(one))))-(one)))**((one)+(x)))**(two)'], [0.9948318439048904, '(((((((one)/((two)/((two)+(log(one)))))-(one))-((two)+(two)))-(one))+(log(one)))*(two))+(((one)*(((d_x_f0)**(two))/(two)))**(one))']]

time spent (in secs):327.5802915096283

---------------=============================----------------
iteration 95: we have seen 82753 different eqs
QD pool size: 1217, newbins: 2 replacements: 66

new avg training reward: 0.954
best reward: 0.5656303704317529 with validation reward: 0.5656303704317529

best eq: (((f0)/(((cos(one))/(cosh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(x)))) (((f0)/(((np.cos(one))/(np.cosh(np.cosh(two))))/((f0)+(np.sinh(np.cosh(two))))))-(x0))*((two)/(((x0)-(np.tan(x0)))*((np.log(two))**(x0)))) []

and bests eqs by free parameter number are:
[[0.7516820455977478, '(((tanh(d_x_f0))-(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((exp(x))+((f0)*((x)-(d_x_f0))))))'], [0.7478360965425886, '((cosh(f0))*(d_x_f0))/((tan(arcsin(x)))*((x)/(((f0)+(x))+((f0)*((two)-(d_x_f0))))))'], [0.7465584262143731, '((cosh(f0))*(d_x_f0))/((tan(arcsin(x)))*((x)/((((two)-(f0))+(x))+((f0)*((two)-(d_x_f0))))))'], [0.7485229155747504, '((((one)**(tan(sqrt(x))))/(one))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(x))/((cosh(two))+((arcsin(f0))*((cos(x))-(d_x_f0))))))'], [0.6209810791141268, '(((f0)/(((one)/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*(x)))'], [0.5656303704317529, '(((f0)/(((cos(one))/(cosh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(x))))'], [0.567216179660296, '(((f0)/(((sqrt(one))/(cosh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(two))))'], [0.6695801694457012, '(((f0)/(((sqrt(one))/(sinh(cosh(two))))/((one)+(sinh(cosh(two))))))-(d_x_f0))*((two)/(((x)-(arcsin(x)))*((one)**(one))))'], [0.7568540135476729, '((((cosh(two))/(two))**(two))+(d_x_f0))/((x)*((x)/(((one)/((one)*(exp(x))))+((f0)*((((two)/(two))**(two))-(d_x_f0))))))'], [0.7904969262815446, '(exp((one)/(tanh(x))))**(((arctan(((two)+(two))+(((one)+((two)/((two)+((cosh(f0))-(two)))))-(f0))))*(two))-((f0)*(two)))'], [0.7928616295758076, '(exp((one)/(tanh(x))))**(((arctan((two)+(((one)/((x)/(two)))-((((one)+(f0))*((one)-(two)))-(two)))))*(two))-((f0)*(two)))'], [0.8074837625993722, '(exp((one)/(tanh(x))))**(((arctan((two)+(((one)/((two)/(two)))-((((one)+(f0))*((one)-(two)))-(two)))))*(two))-((f0)*(two)))'], [0.9203918849907975, '((two)+(((two)+(((one)/(two))+(((((two)/(((f0)+(one))**(two)))/(x))*(((two)**(one))+(two)))-(log(one)))))-(x)))**(two)'], [0.8515327465458298, '(((two)+(((one)+((two)+(((((two)/(((f0)+(one))**(one)))/(x))*(((two)**(one))*(two)))-(one))))-(one)))**((one)+(x)))**(two)'], [0.9948318439048904, '(((((((one)/((two)/((two)+(log(one)))))-(one))-((two)+(two)))-(one))+(log(one)))*(two))+(((one)*(((d_x_f0)**(two))/(two)))**(one))']]

time spent (in secs):331.60658025741577

---------------=============================----------------
iteration 96: we have seen 83770 different eqs
QD pool size: 1217, newbins: 0 replacements: 66

new avg training reward: 0.953
best reward: 0.5656303704317529 with validation reward: 0.5656303704317529

best eq: (((f0)/(((cos(one))/(cosh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(x)))) (((f0)/(((np.cos(one))/(np.cosh(np.cosh(two))))/((f0)+(np.sinh(np.cosh(two))))))-(x0))*((two)/(((x0)-(np.tan(x0)))*((np.log(two))**(x0)))) []

and bests eqs by free parameter number are:
[[0.7501104237724242, '(((tanh(d_x_f0))/(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((exp(x))+((f0)*((x)-(d_x_f0))))))'], [0.7478360965425886, '((cosh(f0))*(d_x_f0))/((tan(arcsin(x)))*((x)/(((f0)+(x))+((f0)*((two)-(d_x_f0))))))'], [0.7465584262143731, '((cosh(f0))*(d_x_f0))/((tan(arcsin(x)))*((x)/((((two)-(f0))+(x))+((f0)*((two)-(d_x_f0))))))'], [0.7485229155747504, '((((one)**(tan(sqrt(x))))/(one))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(x))/((cosh(two))+((arcsin(f0))*((cos(x))-(d_x_f0))))))'], [0.6209810791141268, '(((f0)/(((one)/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*(x)))'], [0.5656303704317529, '(((f0)/(((cos(one))/(cosh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(x))))'], [0.567216179660296, '(((f0)/(((sqrt(one))/(cosh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(two))))'], [0.6695801694457012, '(((f0)/(((sqrt(one))/(sinh(cosh(two))))/((one)+(sinh(cosh(two))))))-(d_x_f0))*((two)/(((x)-(arcsin(x)))*((one)**(one))))'], [0.7568540135476729, '((((cosh(two))/(two))**(two))+(d_x_f0))/((x)*((x)/(((one)/((one)*(exp(x))))+((f0)*((((two)/(two))**(two))-(d_x_f0))))))'], [0.7904969262815446, '(exp((one)/(tanh(x))))**(((arctan(((two)+(two))+(((one)+((two)/((two)+((cosh(f0))-(two)))))-(f0))))*(two))-((f0)*(two)))'], [0.7928616295758076, '(exp((one)/(tanh(x))))**(((arctan((two)+(((one)/((x)/(two)))-((((one)+(f0))*((one)-(two)))-(two)))))*(two))-((f0)*(two)))'], [0.8074837625993722, '(exp((one)/(tanh(x))))**(((arctan((two)+(((one)/((two)/(two)))-((((one)+(f0))*((one)-(two)))-(two)))))*(two))-((f0)*(two)))'], [0.9203918849907975, '((two)+(((two)+(((one)/(two))+(((((two)/(((f0)+(one))**(two)))/(x))*(((two)**(one))+(two)))-(log(one)))))-(x)))**(two)'], [0.8515327465458298, '(((two)+(((one)+((two)+(((((two)/(((f0)+(one))**(one)))/(x))*(((two)**(one))*(two)))-(one))))-(one)))**((one)+(x)))**(two)'], [0.9948318439048904, '(((((((one)/((two)/((two)+(log(one)))))-(one))-((two)+(two)))-(one))+(log(one)))*(two))+(((one)*(((d_x_f0)**(two))/(two)))**(one))']]

time spent (in secs):335.83933663368225

---------------=============================----------------
iteration 97: we have seen 84818 different eqs
QD pool size: 1218, newbins: 1 replacements: 69

new avg training reward: 0.953
best reward: 0.5656303704317529 with validation reward: 0.5656303704317529

best eq: (((f0)/(((cos(one))/(cosh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(x)))) (((f0)/(((np.cos(one))/(np.cosh(np.cosh(two))))/((f0)+(np.sinh(np.cosh(two))))))-(x0))*((two)/(((x0)-(np.tan(x0)))*((np.log(two))**(x0)))) []

and bests eqs by free parameter number are:
[[0.7501104237724242, '(((tanh(d_x_f0))/(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((exp(x))+((f0)*((x)-(d_x_f0))))))'], [0.7478360965425886, '((cosh(f0))*(d_x_f0))/((tan(arcsin(x)))*((x)/(((f0)+(x))+((f0)*((two)-(d_x_f0))))))'], [0.7465584262143731, '((cosh(f0))*(d_x_f0))/((tan(arcsin(x)))*((x)/((((two)-(f0))+(x))+((f0)*((two)-(d_x_f0))))))'], [0.7481987111181805, '((((one)**(x))/(cos(f0)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/(((two)+(two))+((tan(f0))*((cos(f0))-(d_x_f0))))))'], [0.6209810791141268, '(((f0)/(((one)/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*(x)))'], [0.5656303704317529, '(((f0)/(((cos(one))/(cosh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(x))))'], [0.567216179660296, '(((f0)/(((sqrt(one))/(cosh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(two))))'], [0.6695801694457012, '(((f0)/(((sqrt(one))/(sinh(cosh(two))))/((one)+(sinh(cosh(two))))))-(d_x_f0))*((two)/(((x)-(arcsin(x)))*((one)**(one))))'], [0.7568540135476729, '((((cosh(two))/(two))**(two))+(d_x_f0))/((x)*((x)/(((one)/((one)*(exp(x))))+((f0)*((((two)/(two))**(two))-(d_x_f0))))))'], [0.7904969262815446, '(exp((one)/(tanh(x))))**(((arctan(((two)+(two))+(((one)+((two)/((two)+((cosh(f0))-(two)))))-(f0))))*(two))-((f0)*(two)))'], [0.792293472092644, '(exp((one)/(tanh(x))))**(((arctan((two)+(((one)/((tanh(x))/(two)))-((((one)+(f0))*((one)-(one)))-(two)))))*(two))-((f0)*(two)))'], [0.8074837625993722, '(exp((one)/(tanh(x))))**(((arctan((two)+(((one)/((two)/(two)))-((((one)+(f0))*((one)-(two)))-(two)))))*(two))-((f0)*(two)))'], [0.9203918849907975, '((two)+(((two)+(((one)/(two))+(((((two)/(((f0)+(one))**(two)))/(x))*(((two)**(one))+(two)))-(log(one)))))-(x)))**(two)'], [0.8515327465458298, '(((two)+(((one)+((two)+(((((two)/(((f0)+(one))**(one)))/(x))*(((two)**(one))*(two)))-(one))))-(one)))**((one)+(x)))**(two)'], [0.9948318439048904, '(((((((one)/((two)/((two)+(log(one)))))-(one))-((two)+(two)))-(one))+(log(one)))*(two))+(((one)*(((d_x_f0)**(two))/(two)))**(one))']]

time spent (in secs):340.1987609863281

---------------=============================----------------
iteration 98: we have seen 85812 different eqs
QD pool size: 1220, newbins: 2 replacements: 53

new avg training reward: 0.952
best reward: 0.5656303704317529 with validation reward: 0.5656303704317529

best eq: (((f0)/(((cos(one))/(cosh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(x)))) (((f0)/(((np.cos(one))/(np.cosh(np.cosh(two))))/((f0)+(np.sinh(np.cosh(two))))))-(x0))*((two)/(((x0)-(np.tan(x0)))*((np.log(two))**(x0)))) []

and bests eqs by free parameter number are:
[[0.7501104237724242, '(((tanh(d_x_f0))/(sinh(x)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/((exp(x))+((f0)*((x)-(d_x_f0))))))'], [0.7469049224013855, '((tanh(d_x_f0))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(x))/((cosh(two))+((arcsin(f0))*((cos(x))-(d_x_f0))))))'], [0.7465584262143731, '((cosh(f0))*(d_x_f0))/((tan(arcsin(x)))*((x)/((((two)-(f0))+(x))+((f0)*((two)-(d_x_f0))))))'], [0.7481987111181805, '((((one)**(x))/(cos(f0)))+(d_x_f0))/((arcsin(arcsin(x)))*((tan(tanh(x)))/(((two)+(two))+((tan(f0))*((cos(f0))-(d_x_f0))))))'], [0.6209810791141268, '(((f0)/(((one)/(sinh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*(x)))'], [0.5656303704317529, '(((f0)/(((cos(one))/(cosh(cosh(two))))/((f0)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(x))))'], [0.5656954516228117, '(((f0)/(((cos(one))/(cosh(cosh(two))))/((one)+(sinh(cosh(two))))))-(x))*((two)/(((x)-(tan(x)))*((log(two))**(x))))'], [0.6695801694457012, '(((f0)/(((sqrt(one))/(sinh(cosh(two))))/((one)+(sinh(cosh(two))))))-(d_x_f0))*((two)/(((x)-(arcsin(x)))*((one)**(one))))'], [0.7568540135476729, '((((cosh(two))/(two))**(two))+(d_x_f0))/((x)*((x)/(((one)/((one)*(exp(x))))+((f0)*((((two)/(two))**(two))-(d_x_f0))))))'], [0.7574352698126194, '(((f0)/(((sqrt(one))/((two)+(one)))/((two)+(cosh((two)+(two))))))/(x))*((two)/(((x)-(tan(x)))*((tanh(log(two)))**(one))))'], [0.792293472092644, '(exp((one)/(tanh(x))))**(((arctan((two)+(((one)/((tanh(x))/(two)))-((((one)+(f0))*((one)-(one)))-(two)))))*(two))-((f0)*(two)))'], [0.8074837625993722, '(exp((one)/(tanh(x))))**(((arctan((two)+(((one)/((two)/(two)))-((((one)+(f0))*((one)-(two)))-(two)))))*(two))-((f0)*(two)))'], [0.9203918849907975, '((two)+(((two)+(((one)/(two))+(((((two)/(((f0)+(one))**(two)))/(x))*(((two)**(one))+(two)))-(log(one)))))-(x)))**(two)'], [0.8515327465458298, '(((two)+(((one)+((two)+(((((two)/(((f0)+(one))**(one)))/(x))*(((two)**(one))*(two)))-(one))))-(one)))**((one)+(x)))**(two)'], [0.9948317172602292, '(((((((one)/((two)/((one)+(log(one)))))-(one))-((two)+(two)))-(one))+(log(one)))*(two))+(((one)*(((d_x_f0)**(two))/(two)))**(one))']]

time spent (in secs):344.3280236721039

---------------=============================----------------
